//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_level.hpp"

//
// Create all key rooms
//
void rooms_key(Gamep g)
{
  TRACE_NO_INDENT();

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ..M.......^",
           /* line */ (const char *) " ....````.. ",
           /* line */ (const char *) " ....`xsxxx ",
           /* line */ (const char *) " ....`x...x ",
           /* line */ (const char *) "^.....xx..x ",
           /* line */ (const char *) " ......x.kx ",
           /* line */ (const char *) " ......xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ..xxxxxx..^",
           /* line */ (const char *) " ..x.```x`. ",
           /* line */ (const char *) " ..x.`xsxsx ",
           /* line */ (const char *) " ..xk`xbb.x ",
           /* line */ (const char *) "^..xxxxxb.x ",
           /* line */ (const char *) " ......x..x ",
           /* line */ (const char *) " ......xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....C..... ",
           /* line */ (const char *) " .CCCCCCCC. ",
           /* line */ (const char *) " .CxxxxxxC.^",
           /* line */ (const char *) " .CxM```xCC ",
           /* line */ (const char *) " .Cx...`xC. ",
           /* line */ (const char *) " CCxk..``C. ",
           /* line */ (const char *) "^.CxxxxxxC. ",
           /* line */ (const char *) " .CCCCCCCC. ",
           /* line */ (const char *) " ....C..... ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " C......... ",
           /* line */ (const char *) " ...xxxx... ",
           /* line */ (const char *) " ..CxxxxC..^",
           /* line */ (const char *) " .xxM```xx. ",
           /* line */ (const char *) " .xx...`xx. ",
           /* line */ (const char *) " .xxk..`xx. ",
           /* line */ (const char *) "^..CxxsxC.. ",
           /* line */ (const char *) " ...xxsx... ",
           /* line */ (const char *) " .........C ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " . .......  ",
           /* line */ (const char *) " . .     ..^",
           /* line */ (const char *) " . . ... .  ",
           /* line */ (const char *) " . . .k. .  ",
           /* line */ (const char *) " . .   . .  ",
           /* line */ (const char *) "^. ..... .  ",
           /* line */ (const char *) " .       .  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " .C.......  ",
           /* line */ (const char *) " .C.CCCCC..^",
           /* line */ (const char *) " .C.C...C.  ",
           /* line */ (const char *) " .C.C.k.C.  ",
           /* line */ (const char *) " .C.CCC.C.  ",
           /* line */ (const char *) "^.C.....C.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " ..CCCCC...^",
           /* line */ (const char *) " .CCC..CC.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .CC..CCC.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .CCC..CC.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .CC..CCC.  ",
           /* line */ (const char *) "^.CC.k.CC.  ",
           /* line */ (const char *) " .CCC..CC.  ",
           /* line */ (const char *) "..CCCCCCC.  ",
           /* line */ (const char *) " ..CCCCC..  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " ..LLLLL...^",
           /* line */ (const char *) " .LLL..LL.  ",
           /* line */ (const char *) " .LLLLLLL.  ",
           /* line */ (const char *) " .LL..LLL.  ",
           /* line */ (const char *) " .LLLLLLL.  ",
           /* line */ (const char *) " .LLL..LL.  ",
           /* line */ (const char *) " .LLLLLLL.  ",
           /* line */ (const char *) " .LL..LLL.  ",
           /* line */ (const char *) "^.LL.k.LL.  ",
           /* line */ (const char *) " .LLL..LL.  ",
           /* line */ (const char *) "..LLLLLLL.  ",
           /* line */ (const char *) " ..LLLLL..  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .......m.  ",
           /* line */ (const char *) " ....CC....^",
           /* line */ (const char *) " ...CCCC..  ",
           /* line */ (const char *) " ..CC.kCC.  ",
           /* line */ (const char *) " ..CC..CC.  ",
           /* line */ (const char *) "^...CCCC..  ",
           /* line */ (const char *) " ....CC...  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....C...k  ",
           /* line */ (const char *) " ....CC..m  ",
           /* line */ (const char *) " ....CCCC.. ",
           /* line */ (const char *) " ......CCC  ",
           /* line */ (const char *) " ........C  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " k.C......  ",
           /* line */ (const char *) " m.C......  ",
           /* line */ (const char *) " ..C.......^",
           /* line */ (const char *) " ..C......  ",
           /* line */ (const char *) " ..C......  ",
           /* line */ (const char *) " CCC......  ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ...CC.CC..^",
           /* line */ (const char *) " ..C..C..C. ",
           /* line */ (const char *) " ...CCkCC.. ",
           /* line */ (const char *) "^..C..C..C. ",
           /* line */ (const char *) " ...CC.CC.. ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ...LL.LL..^",
           /* line */ (const char *) " ..L..L..L. ",
           /* line */ (const char *) " ...LLkLL.. ",
           /* line */ (const char *) "^..L..L..L. ",
           /* line */ (const char *) " ...LL.LL.. ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.M.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "    xB.Bx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xx.xx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.G.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    xCCCx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.$x   ",
           /* line */ (const char *) "    x.M.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    xLLLx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.M.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xCtCx   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.$x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.Gx   ",
           /* line */ (const char *) "    x.x.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.Bx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.|.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.M.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.Gx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.Bx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xB.Bx   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xCCCx   ",
           /* line */ (const char *) "    xCkCx   ",
           /* line */ (const char *) "    xCCCx   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xLLLx   ",
           /* line */ (const char *) "    xLkLx   ",
           /* line */ (const char *) "    xLLLx   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.$x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x$.$x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk.Gx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) " xxxxxsxx   ",
           /* line */ (const char *) " x$.s...x   ",
           /* line */ (const char *) " xxxxxsxx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "x$..sk..x   ",
           /* line */ (const char *) "x...x.M.x   ",
           /* line */ (const char *) "xxxxx...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "x$.tsk..x   ",
           /* line */ (const char *) "x...x.M.x   ",
           /* line */ (const char *) "xxxxx...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "x$.Csk..x   ",
           /* line */ (const char *) "x..Cx.M.x   ",
           /* line */ (const char *) "xxxxx...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "xk......x   ",
           /* line */ (const char *) "x``...G.x   ",
           /* line */ (const char *) "xsxxx...x   ",
           /* line */ (const char *) "x...x...x   ",
           /* line */ (const char *) "x..$x...x   ",
           /* line */ (const char *) "xxxxxxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "xk.CC...x   ",
           /* line */ (const char *) "x``CC.G.x   ",
           /* line */ (const char *) "xsxxx...x   ",
           /* line */ (const char *) "x...x...x   ",
           /* line */ (const char *) "x..$x...x   ",
           /* line */ (const char *) "xxxxxxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "xk.``...x   ",
           /* line */ (const char *) "x````.G.x   ",
           /* line */ (const char *) "xsxxx...x   ",
           /* line */ (const char *) "x...x...x   ",
           /* line */ (const char *) "x..$x...x   ",
           /* line */ (const char *) "xxxxxxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "xk.LL...x   ",
           /* line */ (const char *) "x``.L.G.x   ",
           /* line */ (const char *) "xsxxxL..x   ",
           /* line */ (const char *) "x...xL..x   ",
           /* line */ (const char *) "x..$xL..x   ",
           /* line */ (const char *) "xxxxxxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx   ",
           /* line */ (const char *) "xk.CCC.Gx   ",
           /* line */ (const char *) "x``.CC..x   ",
           /* line */ (const char *) "xsxxxC..x   ",
           /* line */ (const char *) "x...xC..x   ",
           /* line */ (const char *) "x..$xC..x   ",
           /* line */ (const char *) "xxxxxxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) "^.C..k..T. ",
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) " .CCCC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..===.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " T.....C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .L.....L. ",
           /* line */ (const char *) "^.L..k.... ",
           /* line */ (const char *) " .L....L.. ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " ....L..L. ",
           /* line */ (const char *) " .LLGLLL.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..LGL.LL. ",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) " LL...LL..^",
           /* line */ (const char *) " ...LLLL.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C.....C. ",
           /* line */ (const char *) "^.C..kCC.. ",
           /* line */ (const char *) " .C..CCC.. ",
           /* line */ (const char *) " .CCCCC... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " .CCGCCCC. ",
           /* line */ (const char *) " .=======. ",
           /* line */ (const char *) " .CCGCCCC. ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " CC...CC..^",
           /* line */ (const char *) " ...CCCC.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) "^.C..k.... ",
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) " .CCCC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..===.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " ......C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..=CC.kg",
           /* line */ (const char *) "...=CC...",
           /* line */ (const char *) "...=CCCCC",
           /* line */ (const char *) "====CCC  ",
           /* line */ (const char *) "CCCCC....",
           /* line */ (const char *) "C..m.C...",
           /* line */ (const char *) "CC...C..C",
           /* line */ (const char *) "      ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    CCCC   ",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) "^=========^",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) "  CCCC..CC ",
           /* line */ (const char *) "    CCk.CC ",
           /* line */ (const char *) "    CC..C  ",
           /* line */ (const char *) "     C..   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..=C...g",
           /* line */ (const char *) "...=C....",
           /* line */ (const char *) "...=Ck..`",
           /* line */ (const char *) "====C..  ",
           /* line */ (const char *) "CCCCC....",
           /* line */ (const char *) "L..m.L...",
           /* line */ (const char *) "LL...L..L",
           /* line */ (const char *) "      ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......g ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " |....k... ",
           /* line */ (const char *) " ...CCCC..^",
           /* line */ (const char *) " |.CCCCCC. ",
           /* line */ (const char *) " ...m.CCC. ",
           /* line */ (const char *) " B........ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   LLL...g ",
           /* line */ (const char *) "   LL..... ",
           /* line */ (const char *) "   LL.LLLL ",
           /* line */ (const char *) "^...L.kL.. ",
           /* line */ (const char *) "   .LLLL.. ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   `..B.B  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   B...LLL ",
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "^.....g..L ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " LL......B ",
           /* line */ (const char *) "LLkLL  .   ",
           /* line */ (const char *) "LLLL   .   ",
           /* line */ (const char *) "LL     ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.....g... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "  L....... ",
           /* line */ (const char *) " LL....... ",
           /* line */ (const char *) " LkLL  .   ",
           /* line */ (const char *) " LLL   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.g....... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " LkLLLL.   ",
           /* line */ (const char *) " .....g.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .....CC ",
           /* line */ (const char *) "   ......C ",
           /* line */ (const char *) "   .....C. ",
           /* line */ (const char *) "^.g....C.. ",
           /* line */ (const char *) "   ....C..^",
           /* line */ (const char *) "   ...C... ",
           /* line */ (const char *) " CCC.CC... ",
           /* line */ (const char *) " CkCCCC.   ",
           /* line */ (const char *) " .....g.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.....g... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " ..B...... ",
           /* line */ (const char *) " .k.   .   ",
           /* line */ (const char *) " ... $ .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ..CCCCC ",
           /* line */ (const char *) "   ..C...C ",
           /* line */ (const char *) "^.t..CGC.C ",
           /* line */ (const char *) "   ..CCC.C^",
           /* line */ (const char *) "   ......C ",
           /* line */ (const char *) " .`CCCCCCC ",
           /* line */ (const char *) " .``   .   ",
           /* line */ (const char *) " k.`   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   .....C. ",
           /* line */ (const char *) "   ....C.. ",
           /* line */ (const char *) "^.t.C.C... ",
           /* line */ (const char *) "   .CC....^",
           /* line */ (const char *) "   .CCC... ",
           /* line */ (const char *) " .`....... ",
           /* line */ (const char *) " .``   .   ",
           /* line */ (const char *) " k.`   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) " ... ... ..m",
           /* line */ (const char *) "^.T.        ",
           /* line */ (const char *) " ... ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) "     ... ..m",
           /* line */ (const char *) "            ",
           /* line */ (const char *) "     ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) "     ... ..m",
           /* line */ (const char *) "            ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .k..M...T. ",
           /* line */ (const char *) " .......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "^...LLLLLLLLL",
           /* line */ (const char *) "   LL...L...L",
           /* line */ (const char *) "  LLL.G.L.G.L",
           /* line */ (const char *) " ...L...L...L",
           /* line */ (const char *) "^...LLLLLLLLL",
           /* line */ (const char *) " ...L...L...L",
           /* line */ (const char *) "  LLL.G.L.G.L",
           /* line */ (const char *) "  LLL...L...L",
           /* line */ (const char *) "   LLLLLLLLLL",
           /* line */ (const char *) "   LL...L...L",
           /* line */ (const char *) "    L.G.L.k.L",
           /* line */ (const char *) "    L...L...L",
           /* line */ (const char *) "    LLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "^...CCCCCCCCC",
           /* line */ (const char *) "   CC...C...C",
           /* line */ (const char *) "  CCC.G.C.G.C",
           /* line */ (const char *) " ...C...C...C",
           /* line */ (const char *) "^...CCCCCCCCC",
           /* line */ (const char *) " ...C...C...C",
           /* line */ (const char *) "  CCC.G.C.G.C",
           /* line */ (const char *) "  CCC...C...C",
           /* line */ (const char *) "   CCCCCCCCCC",
           /* line */ (const char *) "   CC...C...C",
           /* line */ (const char *) "    C.G.C.k.C",
           /* line */ (const char *) "    C...C...C",
           /* line */ (const char *) "    CCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) " ... ... ..m",
           /* line */ (const char *) "^.T.        ",
           /* line */ (const char *) " ... ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) "     ... ..m",
           /* line */ (const char *) "            ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .k..M...T. ",
           /* line */ (const char *) " .......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    CCCCCCCC",
           /* line */ (const char *) "    C..CCC..",
           /* line */ (const char *) "    C..===..",
           /* line */ (const char *) " ...C..CCC.=",
           /* line */ (const char *) "^...CCCCCCC=",
           /* line */ (const char *) " ...CCCCC..=",
           /* line */ (const char *) " CCCCCCCC.G.",
           /* line */ (const char *) " CCCC..CC...",
           /* line */ (const char *) " CCC.G.CCC=C",
           /* line */ (const char *) " CCC..CCCC=C",
           /* line */ (const char *) " CCCCCCCCC=C",
           /* line */ (const char *) " CCCCCCCCC=C",
           /* line */ (const char *) " C...CC....C",
           /* line */ (const char *) " Ck..==....C",
           /* line */ (const char *) " C...CC....C",
           /* line */ (const char *) " CCCCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..........",
           /* line */ (const char *) " ..........`",
           /* line */ (const char *) " ........```",
           /* line */ (const char *) "^...       s",
           /* line */ (const char *) " ... C......",
           /* line */ (const char *) "     CC..M..",
           /* line */ (const char *) "     ..C....",
           /* line */ (const char *) "     ...C...",
           /* line */ (const char *) " ........C..",
           /* line */ (const char *) " .k.......C.",
           /* line */ (const char *) " .........CC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..........",
           /* line */ (const char *) " ..........`",
           /* line */ (const char *) " ........```",
           /* line */ (const char *) "^...       s",
           /* line */ (const char *) " ... `......",
           /* line */ (const char *) "     ``..M..",
           /* line */ (const char *) "     ```....",
           /* line */ (const char *) "     s    CC",
           /* line */ (const char *) "     .   CCC",
           /* line */ (const char *) "     .  CCCC",
           /* line */ (const char *) " ... ...C...",
           /* line */ (const char *) " $..s..CC.k.",
           /* line */ (const char *) " ... .CC....",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .CC...````",
           /* line */ (const char *) " ..CCC....`.",
           /* line */ (const char *) " ..CCCC....`",
           /* line */ (const char *) "^...CCC.M...",
           /* line */ (const char *) " ...CC......",
           /* line */ (const char *) " x..CCCCB...",
           /* line */ (const char *) " xx.=====...",
           /* line */ (const char *) " xxxxCCCB...",
           /* line */ (const char *) " xxxxCCCCC..",
           /* line */ (const char *) " xxxxxxxCCCC",
           /* line */ (const char *) " .k...BxxxC`",
           /* line */ (const char *) " $........s`",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .LL...````",
           /* line */ (const char *) " ..LLL....`.",
           /* line */ (const char *) " ..LLLL....`",
           /* line */ (const char *) "^...LLL.M...",
           /* line */ (const char *) " ...LL......",
           /* line */ (const char *) " x..LLLL....",
           /* line */ (const char *) " xx.=====...",
           /* line */ (const char *) " xxxxLLLLLL.",
           /* line */ (const char *) " xxxxxxxLLLL",
           /* line */ (const char *) " .k...BxxxL.",
           /* line */ (const char *) " $........s.",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  CCCCCCCCCCC",
           /* line */ (const char *) " CC.CCC.C..kC",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) "^========...C",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) " CCCC.CCC..MC",
           /* line */ (const char *) "  CCCCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCCCCCCCCCCCCCCCCCC",
           /* line */ (const char *) " CBCCCC...CCCCBC...C",
           /* line */ (const char *) "^======.G.======.k.C",
           /* line */ (const char *) " CBCCCC...CCCCBC...C",
           /* line */ (const char *) " CCCCCCCCCCCCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  CCCCCCCCCCC",
           /* line */ (const char *) " CCCCCCCCCCCC",
           /* line */ (const char *) "^========...C",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) " CCCCCCCC.M.C",
           /* line */ (const char *) " C=======...C",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) " x.xxxxxx``.C",
           /* line */ (const char *) " x.....kx``.C",
           /* line */ (const char *) " xxxxxxxxCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* line */ (const char *) " LL.LLL.L..kL",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) "^========...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " LLLL.LLL..ML",
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " LLLLLLLLLLLLLLLLLLL",
           /* line */ (const char *) " LBLLLL...LLLLBL...L",
           /* line */ (const char *) "^======.G.======.k.L",
           /* line */ (const char *) " LBLLLL...LLLLBL...L",
           /* line */ (const char *) " LLLLLLLLLLLLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* line */ (const char *) " LLLLLLLLLLLL",
           /* line */ (const char *) "^========...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " LLLLLLLL.M.L",
           /* line */ (const char *) " L=======...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " x.xxxxxx``.L",
           /* line */ (const char *) " x.....kx``.L",
           /* line */ (const char *) " xxxxxxxxLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* line */ (const char *) " LL.LLL.L..kL",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) "^========...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " LLLL.LLL..ML",
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxBCCCCCCCx",
           /* line */ (const char *) "^===.......Cx",
           /* line */ (const char *) " CCxBCCCCC.Cx",
           /* line */ (const char *) " CCxCCCCCC.Cx",
           /* line */ (const char *) " CCxCG..CC.Cx",
           /* line */ (const char *) " xxxC..kCC.Cx",
           /* line */ (const char *) " CCxC...CC.Cx",
           /* line */ (const char *) " xCCC.CCCC.Cx",
           /* line */ (const char *) " xC........Cx",
           /* line */ (const char *) " xCCCCCCCCCCx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB..x.C..x",
           /* line */ (const char *) "^===...s.Ct.x",
           /* line */ (const char *) " CCxBxxx.C..x",
           /* line */ (const char *) " CCx...xxxxsx",
           /* line */ (const char *) " xxx.k.x....x",
           /* line */ (const char *) " x.....x....x",
           /* line */ (const char *) " x.G...x....x",
           /* line */ (const char *) " x.....s....x",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB.B.....x",
           /* line */ (const char *) "^===......G.x",
           /* line */ (const char *) " CCxB.B.....x",
           /* line */ (const char *) " CCxxxxxxxxsx",
           /* line */ (const char *) " xxx..tC....x",
           /* line */ (const char *) " x.....CCC..x",
           /* line */ (const char *) " x.k..G.CCC.x",
           /* line */ (const char *) " x.......CCCx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB...Ct..x",
           /* line */ (const char *) "^===....CC..x",
           /* line */ (const char *) " CCxB...CC..x",
           /* line */ (const char *) " CCx....CC..x",
           /* line */ (const char *) " xxxCCCCCC..x",
           /* line */ (const char *) " xCCCCCCCC..x",
           /* line */ (const char *) " x..........x",
           /* line */ (const char *) " xG........kx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) "^===........x",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) " CCx....C...x",
           /* line */ (const char *) " xxx...CCC..x",
           /* line */ (const char *) " x....CCkCC.x",
           /* line */ (const char *) " x.....CCC..x",
           /* line */ (const char *) " x..G...C...x",
           /* line */ (const char *) " x..........x",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxBWWWWWWWx",
           /* line */ (const char *) "^===WWWWWWWWx",
           /* line */ (const char *) " CCxBWWWWWWWx",
           /* line */ (const char *) " CCxWWWWWWWWx",
           /* line */ (const char *) " xxxWWWWWWWWx",
           /* line */ (const char *) " xWWWWWWWWWWx",
           /* line */ (const char *) " xWWWWWWWWWWx",
           /* line */ (const char *) " xWWWWWWWWWkx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxBCCCC.CCx",
           /* line */ (const char *) "^===.C.CCCCCx",
           /* line */ (const char *) " CCxBCCCCCC.x",
           /* line */ (const char *) " CCxCCCC.CCCx",
           /* line */ (const char *) " xxxCCCCCCCCx",
           /* line */ (const char *) " xCCC.CCCCCCx",
           /* line */ (const char *) " xCCCCCC....x",
           /* line */ (const char *) " xCCCCCC...kx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) "^===......G.x",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) " CCx..xxxxx.x",
           /* line */ (const char *) " xxx..x.k.x.x",
           /* line */ (const char *) " x...`x...x.x",
           /* line */ (const char *) " x...`xsxxx.x",
           /* line */ (const char *) " x..`````...x",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB..CC...x",
           /* line */ (const char *) "^===...CC.k.x",
           /* line */ (const char *) " CCxB..CC...x",
           /* line */ (const char *) " CCx..CCC...x",
           /* line */ (const char *) " xxx..==....x",
           /* line */ (const char *) " x....CCCC..x",
           /* line */ (const char *) " x..G....CC.x",
           /* line */ (const char *) " x.......CC.x",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCx......C.x",
           /* line */ (const char *) "^===......t.x",
           /* line */ (const char *) " CCxxxxxxxx.x",
           /* line */ (const char *) " CCx......x.x",
           /* line */ (const char *) " xxx.xxxx.x.x",
           /* line */ (const char *) " x...xkG..x.x",
           /* line */ (const char *) " x.xxxxxxxx.x",
           /* line */ (const char *) " x.G........x",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB......Gx",
           /* line */ (const char *) "^===...x....x",
           /* line */ (const char *) " CCxB.xxx...x",
           /* line */ (const char *) " CCx...x....x",
           /* line */ (const char *) " xxx.....x..x",
           /* line */ (const char *) " x......xxx.x",
           /* line */ (const char *) " x.......x..x",
           /* line */ (const char *) " xG........kx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) "^===......G.x",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) " CCx........x",
           /* line */ (const char *) " xxx.....CCCx",
           /* line */ (const char *) " x.....CCCCCx",
           /* line */ (const char *) " x....CCC...x",
           /* line */ (const char *) " x....CCC..kx",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB......Gx",
           /* line */ (const char *) "^===......k.x",
           /* line */ (const char *) " CCxB......Gx",
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxBCC.....x",
           /* line */ (const char *) "^======...G.x",
           /* line */ (const char *) " CCxBCC.....x",
           /* line */ (const char *) " CCxxxxsxxxxx",
           /* line */ (const char *) " xxx..x.x...x",
           /* line */ (const char *) " x....x.x...x",
           /* line */ (const char *) " x.k..x.x..$x",
           /* line */ (const char *) " x......st.$x",
           /* line */ (const char *) " xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) "^===t.....k.x",
           /* line */ (const char *) " CCxB.......x",
           /* line */ (const char *) " CCxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^      ",
           /* line */ (const char *) "xx...xx   ",
           /* line */ (const char *) "x.....x   ",
           /* line */ (const char *) "x.....xx  ",
           /* line */ (const char *) "x.C=C..x  ",
           /* line */ (const char *) "xCC=CC.xx ",
           /* line */ (const char *) "xCC=CCCCxx",
           /* line */ (const char *) "xCC=CCtCCx",
           /* line */ (const char *) "xxC=.....x",
           /* line */ (const char *) " xx...k..x",
           /* line */ (const char *) "  xxx...xx",
           /* line */ (const char *) "    xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxxx",
           /* line */ (const char *) " x.........x",
           /* line */ (const char *) " x...BkB.M.x",
           /* line */ (const char *) " x.........x",
           /* line */ (const char *) " xxxxCCCxxxx",
           /* line */ (const char *) "    xC.Cx   ",
           /* line */ (const char *) "    xC.Bx   ",
           /* line */ (const char *) "    xB.Cx   ",
           /* line */ (const char *) "    xC.Bx   ",
           /* line */ (const char *) "    xB.Cx   ",
           /* line */ (const char *) "    xC.Bx   ",
           /* line */ (const char *) "    xB.Cx   ",
           /* line */ (const char *) "    xx.xx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
}
