//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_level.hpp"

//
// Create all key rooms
//
void rooms_key(Gamep g)
{
  TRACE_NO_INDENT();

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ..M.......^",
           /* line */ (const char *) " ....````.. ",
           /* line */ (const char *) " ....`xsxxx ",
           /* line */ (const char *) " ....`x...x ",
           /* line */ (const char *) "^.....xx..x ",
           /* line */ (const char *) " ......x.kx ",
           /* line */ (const char *) " ......xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ..xxxxxx..^",
           /* line */ (const char *) " ..x.```x`. ",
           /* line */ (const char *) " ..x.`xsxsx ",
           /* line */ (const char *) " ..xk`xbb.x ",
           /* line */ (const char *) "^..xxxxxb.x ",
           /* line */ (const char *) " ......x..x ",
           /* line */ (const char *) " ......xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....C..... ",
           /* line */ (const char *) " .CCCCCCCC. ",
           /* line */ (const char *) " .CxxxxxxC.^",
           /* line */ (const char *) " .CxM```xCC ",
           /* line */ (const char *) " .Cx...`xC. ",
           /* line */ (const char *) " CCxk..``C. ",
           /* line */ (const char *) "^.CxxxxxxC. ",
           /* line */ (const char *) " .CCCCCCCC. ",
           /* line */ (const char *) " ....C..... ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " C......... ",
           /* line */ (const char *) " ...xxxx... ",
           /* line */ (const char *) " ..CxxxxC..^",
           /* line */ (const char *) " .xxM```xx. ",
           /* line */ (const char *) " .xx...`xx. ",
           /* line */ (const char *) " .xxk..`xx. ",
           /* line */ (const char *) "^..CxxsxC.. ",
           /* line */ (const char *) " ...xxsx... ",
           /* line */ (const char *) " .........C ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " . .......  ",
           /* line */ (const char *) " . .     ..^",
           /* line */ (const char *) " . . ... .  ",
           /* line */ (const char *) " . . .k. .  ",
           /* line */ (const char *) " . .   . .  ",
           /* line */ (const char *) "^. ..... .  ",
           /* line */ (const char *) " .       .  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " .C.......  ",
           /* line */ (const char *) " .C.CCCCC..^",
           /* line */ (const char *) " .C.C...C.  ",
           /* line */ (const char *) " .C.C.k.C.  ",
           /* line */ (const char *) " .C.CCC.C.  ",
           /* line */ (const char *) "^.C.....C.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " ..CCCCC...^",
           /* line */ (const char *) " .CCC..CC.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .CC..CCC.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .CCC..CC.  ",
           /* line */ (const char *) " .CCCCCCC.  ",
           /* line */ (const char *) " .CC..CCC.  ",
           /* line */ (const char *) "^.CC.k.CC.  ",
           /* line */ (const char *) " .CCC..CC.  ",
           /* line */ (const char *) "..CCCCCCC.  ",
           /* line */ (const char *) " ..CCCCC..  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....       ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " ..LLLLL...^",
           /* line */ (const char *) " .LLL..LL.  ",
           /* line */ (const char *) " .LLLLLLL.  ",
           /* line */ (const char *) " .LL..LLL.  ",
           /* line */ (const char *) " .LLLLLLL.  ",
           /* line */ (const char *) " .LLL..LL.  ",
           /* line */ (const char *) " .LLLLLLL.  ",
           /* line */ (const char *) " .LL..LLL.  ",
           /* line */ (const char *) "^.LL.k.LL.  ",
           /* line */ (const char *) " .LLL..LL.  ",
           /* line */ (const char *) "..LLLLLLL.  ",
           /* line */ (const char *) " ..LLLLL..  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .......m.  ",
           /* line */ (const char *) " ....CC....^",
           /* line */ (const char *) " ...CCCC..  ",
           /* line */ (const char *) " ..CC.kCC.  ",
           /* line */ (const char *) " ..CC..CC.  ",
           /* line */ (const char *) "^...CCCC..  ",
           /* line */ (const char *) " ....CC...  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " ....C...k  ",
           /* line */ (const char *) " ....CC..m  ",
           /* line */ (const char *) " ....CCCC.. ",
           /* line */ (const char *) " ......CCC  ",
           /* line */ (const char *) " ........C  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " k.C......  ",
           /* line */ (const char *) " m.C......  ",
           /* line */ (const char *) " ..C.......^",
           /* line */ (const char *) " ..C......  ",
           /* line */ (const char *) " ..C......  ",
           /* line */ (const char *) " CCC......  ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ...CC.CC..^",
           /* line */ (const char *) " ..C..C..C. ",
           /* line */ (const char *) " ...CCkCC.. ",
           /* line */ (const char *) "^..C..C..C. ",
           /* line */ (const char *) " ...CC.CC.. ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ...LL.LL..^",
           /* line */ (const char *) " ..L..L..L. ",
           /* line */ (const char *) " ...LLkLL.. ",
           /* line */ (const char *) "^..L..L..L. ",
           /* line */ (const char *) " ...LL.LL.. ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.M.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "    xB.Bx   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xx.xx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxx   ",
           /* line */ (const char *) "    xk..x   ",
           /* line */ (const char *) "    x.M.x   ",
           /* line */ (const char *) "    x...x   ",
           /* line */ (const char *) "    xxsxx   ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) "^.C..k..T. ",
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) " .CCCC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..===.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " T.....C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .L.....L. ",
           /* line */ (const char *) "^.L..k.... ",
           /* line */ (const char *) " .L....L.. ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " ....L..L. ",
           /* line */ (const char *) " .LLGLLL.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..LGL.LL. ",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) " LL...LL..^",
           /* line */ (const char *) " ...LLLL.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C.....C. ",
           /* line */ (const char *) "^.C..kCC.. ",
           /* line */ (const char *) " .C..CCC.. ",
           /* line */ (const char *) " .CCCCC... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " .CCGCCCC. ",
           /* line */ (const char *) " .=======. ",
           /* line */ (const char *) " .CCGCCCC. ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " CC...CC..^",
           /* line */ (const char *) " ...CCCC.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) "^.C..k.... ",
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) " .CCCC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..===.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " ......C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..=CC.kg",
           /* line */ (const char *) "...=CC...",
           /* line */ (const char *) "...=CCCCC",
           /* line */ (const char *) "====CCC  ",
           /* line */ (const char *) "CCCCC....",
           /* line */ (const char *) "C..m.C...",
           /* line */ (const char *) "CC...C..C",
           /* line */ (const char *) "      ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    CCCC   ",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) "^=========^",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) "  CCCC..CC ",
           /* line */ (const char *) "    CCk.CC ",
           /* line */ (const char *) "    CC..C  ",
           /* line */ (const char *) "     C..   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..=C...g",
           /* line */ (const char *) "...=C....",
           /* line */ (const char *) "...=Ck..`",
           /* line */ (const char *) "====C..  ",
           /* line */ (const char *) "CCCCC....",
           /* line */ (const char *) "L..m.L...",
           /* line */ (const char *) "LL...L..L",
           /* line */ (const char *) "      ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......g ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " |....k... ",
           /* line */ (const char *) " ...CCCC..^",
           /* line */ (const char *) " |.CCCCCC. ",
           /* line */ (const char *) " ...m.CCC. ",
           /* line */ (const char *) " B........ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   LLL...g ",
           /* line */ (const char *) "   LL..... ",
           /* line */ (const char *) "   LL.LLLL ",
           /* line */ (const char *) "^...L.kL.. ",
           /* line */ (const char *) "   .LLLL.. ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   `..B.B  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   B...LLL ",
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "^.....g..L ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " LL......B ",
           /* line */ (const char *) "LLkLL  .   ",
           /* line */ (const char *) "LLLL   .   ",
           /* line */ (const char *) "LL     ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.....g... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "  L....... ",
           /* line */ (const char *) " LL....... ",
           /* line */ (const char *) " LkLL  .   ",
           /* line */ (const char *) " LLL   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.g....... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " LkLLLL.   ",
           /* line */ (const char *) " .....g.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .....CC ",
           /* line */ (const char *) "   ......C ",
           /* line */ (const char *) "   .....C. ",
           /* line */ (const char *) "^.g....C.. ",
           /* line */ (const char *) "   ....C..^",
           /* line */ (const char *) "   ...C... ",
           /* line */ (const char *) " CCC.CC... ",
           /* line */ (const char *) " CkCCCC.   ",
           /* line */ (const char *) " .....g.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.....g... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " ..B...... ",
           /* line */ (const char *) " .k.   .   ",
           /* line */ (const char *) " ... $ .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ..CCCCC ",
           /* line */ (const char *) "   ..C...C ",
           /* line */ (const char *) "^.t..CGC.C ",
           /* line */ (const char *) "   ..CCC.C^",
           /* line */ (const char *) "   ......C ",
           /* line */ (const char *) " .`CCCCCCC ",
           /* line */ (const char *) " .``   .   ",
           /* line */ (const char *) " k.`   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   .....C. ",
           /* line */ (const char *) "   ....C.. ",
           /* line */ (const char *) "^.t.C.C... ",
           /* line */ (const char *) "   .CC....^",
           /* line */ (const char *) "   .CCC... ",
           /* line */ (const char *) " .`....... ",
           /* line */ (const char *) " .``   .   ",
           /* line */ (const char *) " k.`   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) " ... ... ..m",
           /* line */ (const char *) "^.T.        ",
           /* line */ (const char *) " ... ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) "     ... ..m",
           /* line */ (const char *) "            ",
           /* line */ (const char *) "     ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) "     ... ..m",
           /* line */ (const char *) "            ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .k..M...T. ",
           /* line */ (const char *) " .......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "^...LLLLLLLLL",
           /* line */ (const char *) "   LL...L...L",
           /* line */ (const char *) "  LLL.G.L.G.L",
           /* line */ (const char *) " ...L...L...L",
           /* line */ (const char *) "^...LLLLLLLLL",
           /* line */ (const char *) " ...L...L...L",
           /* line */ (const char *) "  LLL.G.L.G.L",
           /* line */ (const char *) "  LLL...L...L",
           /* line */ (const char *) "   LLLLLLLLLL",
           /* line */ (const char *) "   LL...L...L",
           /* line */ (const char *) "    L.G.L.k.L",
           /* line */ (const char *) "    L...L...L",
           /* line */ (const char *) "    LLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "^...CCCCCCCCC",
           /* line */ (const char *) "   CC...C...C",
           /* line */ (const char *) "  CCC.G.C.G.C",
           /* line */ (const char *) " ...C...C...C",
           /* line */ (const char *) "^...CCCCCCCCC",
           /* line */ (const char *) " ...C...C...C",
           /* line */ (const char *) "  CCC.G.C.G.C",
           /* line */ (const char *) "  CCC...C...C",
           /* line */ (const char *) "   CCCCCCCCCC",
           /* line */ (const char *) "   CC...C...C",
           /* line */ (const char *) "    C.G.C.k.C",
           /* line */ (const char *) "    C...C...C",
           /* line */ (const char *) "    CCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) " ... ... ..m",
           /* line */ (const char *) "^.T.        ",
           /* line */ (const char *) " ... ... ...",
           /* line */ (const char *) "     .T. .T.",
           /* line */ (const char *) "     ... ..m",
           /* line */ (const char *) "            ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .k..M...T. ",
           /* line */ (const char *) " .......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    CCCCCCCC",
           /* line */ (const char *) "    C..CCC..",
           /* line */ (const char *) "    C..===..",
           /* line */ (const char *) " ...C..CCC.=",
           /* line */ (const char *) "^...CCCCCCC=",
           /* line */ (const char *) " ...CCCCC..=",
           /* line */ (const char *) " CCCCCCCC.G.",
           /* line */ (const char *) " CCCC..CC...",
           /* line */ (const char *) " CCC.G.CCC=C",
           /* line */ (const char *) " CCC..CCCC=C",
           /* line */ (const char *) " CCCCCCCCC=C",
           /* line */ (const char *) " CCCCCCCCC=C",
           /* line */ (const char *) " C...CC....C",
           /* line */ (const char *) " Ck..==....C",
           /* line */ (const char *) " C...CC....C",
           /* line */ (const char *) " CCCCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..........",
           /* line */ (const char *) " ..........`",
           /* line */ (const char *) " ........```",
           /* line */ (const char *) "^...       s",
           /* line */ (const char *) " ... C......",
           /* line */ (const char *) "     CC..M..",
           /* line */ (const char *) "     ..C....",
           /* line */ (const char *) "     ...C...",
           /* line */ (const char *) " ........C..",
           /* line */ (const char *) " .k.......C.",
           /* line */ (const char *) " .........CC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..........",
           /* line */ (const char *) " ..........`",
           /* line */ (const char *) " ........```",
           /* line */ (const char *) "^...       s",
           /* line */ (const char *) " ... `......",
           /* line */ (const char *) "     ``..M..",
           /* line */ (const char *) "     ```....",
           /* line */ (const char *) "     s    CC",
           /* line */ (const char *) "     .   CCC",
           /* line */ (const char *) "     .  CCCC",
           /* line */ (const char *) " ... ...C...",
           /* line */ (const char *) " $..s..CC.k.",
           /* line */ (const char *) " ... .CC....",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .CC...````",
           /* line */ (const char *) " ..CCC....`.",
           /* line */ (const char *) " ..CCCC....`",
           /* line */ (const char *) "^...CCC.M...",
           /* line */ (const char *) " ...CC......",
           /* line */ (const char *) " x..CCCCB...",
           /* line */ (const char *) " xx.=====...",
           /* line */ (const char *) " xxxxCCCB...",
           /* line */ (const char *) " xxxxCCCCC..",
           /* line */ (const char *) " xxxxxxxCCCC",
           /* line */ (const char *) " .k...BxxxC`",
           /* line */ (const char *) " $........s`",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .LL...````",
           /* line */ (const char *) " ..LLL....`.",
           /* line */ (const char *) " ..LLLL....`",
           /* line */ (const char *) "^...LLL.M...",
           /* line */ (const char *) " ...LL......",
           /* line */ (const char *) " x..LLLL....",
           /* line */ (const char *) " xx.=====...",
           /* line */ (const char *) " xxxxLLLLLL.",
           /* line */ (const char *) " xxxxxxxLLLL",
           /* line */ (const char *) " .k...BxxxL.",
           /* line */ (const char *) " $........s.",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  CCCCCCCCCCC",
           /* line */ (const char *) " CC.CCC.C..kC",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) "^========...C",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) " CCCC.CCC..MC",
           /* line */ (const char *) "  CCCCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCCCCCCCCCCCCCCCCCC",
           /* line */ (const char *) " CBCCCC...CCCCBC...C",
           /* line */ (const char *) "^======.G.======.k.C",
           /* line */ (const char *) " CBCCCC...CCCCBC...C",
           /* line */ (const char *) " CCCCCCCCCCCCCCCCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  CCCCCCCCCCC",
           /* line */ (const char *) " CCCCCCCCCCCC",
           /* line */ (const char *) "^========...C",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) " CCCCCCCC.M.C",
           /* line */ (const char *) " C=======...C",
           /* line */ (const char *) " CCCCCCCC...C",
           /* line */ (const char *) " x.xxxxxx``.C",
           /* line */ (const char *) " x.....kx``.C",
           /* line */ (const char *) " xxxxxxxxCCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* line */ (const char *) " LL.LLL.L..kL",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) "^========...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " LLLL.LLL..ML",
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) " LLLLLLLLLLLLLLLLLLL",
           /* line */ (const char *) " LBLLLL...LLLLBL...L",
           /* line */ (const char *) "^======.G.======.k.L",
           /* line */ (const char *) " LBLLLL...LLLLBL...L",
           /* line */ (const char *) " LLLLLLLLLLLLLLLLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* line */ (const char *) " LLLLLLLLLLLL",
           /* line */ (const char *) "^========...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " LLLLLLLL.M.L",
           /* line */ (const char *) " L=======...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " x.xxxxxx``.L",
           /* line */ (const char *) " x.....kx``.L",
           /* line */ (const char *) " xxxxxxxxLLLL",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_FLAG_HAS_KEY, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* line */ (const char *) " LL.LLL.L..kL",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) "^========...L",
           /* line */ (const char *) " LLLLLLLL...L",
           /* line */ (const char *) " LLLL.LLL..ML",
           /* line */ (const char *) "  LLLLLLLLLLL",
           /* end */ nullptr);
}
