//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_level.hpp"

//
// Create all prefab rooms
//
void rooms_prefab(Gamep g)
{
  TRACE_NO_INDENT();

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^   ",
           /* line */ (const char *) "^...^",
           /* line */ (const char *) " x.x ",
           /* line */ (const char *) " xsx ",
           /* line */ (const char *) " x.x ",
           /* line */ (const char *) " ... ",
           /* line */ (const char *) " ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^      ",
           /* oine */ (const char *) " ...x   ",
           /* lino */ (const char *) "^...x   ",
           /* line */ (const char *) " xxsx   ",
           /* line */ (const char *) " .B.B.. ",
           /* line */ (const char *) " ......^",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) "  ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^      ",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) "^...... ",
           /* line */ (const char *) " .B.B.. ",
           /* line */ (const char *) " xxsxxx ",
           /* line */ (const char *) " .B.B..^",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) "  ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "   ...    ",
           /* line */ (const char *) "  .....   ",
           /* line */ (const char *) " ..B.B..  ",
           /* line */ (const char *) "^..xsxxx  ",
           /* line */ (const char *) " xxx.B...^",
           /* line */ (const char *) "  .....   ",
           /* line */ (const char *) "   ...    ",
           /* line */ (const char *) "   ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "   ...    ",
           /* line */ (const char *) "  .....   ",
           /* line */ (const char *) " ...CCCC  ",
           /* line */ (const char *) "^..CC...  ",
           /* line */ (const char *) " CCC.....^",
           /* line */ (const char *) "  .....   ",
           /* line */ (const char *) "   ...    ",
           /* line */ (const char *) "   ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^      ",
           /* line */ (const char *) "         .      ",
           /* line */ (const char *) "     .. ......  ",
           /* line */ (const char *) "^...... .x..x.  ",
           /* line */ (const char *) " ...... ..CC..  ",
           /* line */ (const char *) " ......s..CC...^",
           /* line */ (const char *) " ...... .x..x.  ",
           /* line */ (const char *) "     .. ......  ",
           /* line */ (const char *) "          ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^     ",
           /* line */ (const char *) "        ....   ",
           /* line */ (const char *) "        B.B.   ",
           /* line */ (const char *) "         s     ",
           /* line */ (const char *) "        B.B.   ",
           /* line */ (const char *) "^.............^",
           /* line */ (const char *) "  ............ ",
           /* line */ (const char *) "        ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^     ",
           /* line */ (const char *) "     ......   ",
           /* line */ (const char *) " ..B B....... ",
           /* line */ (const char *) " ...s........ ",
           /* line */ (const char *) " ..B B.......^",
           /* line */ (const char *) "^... ........ ",
           /* line */ (const char *) "     ......   ",
           /* line */ (const char *) "     ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "^... ..... ",
           /* line */ (const char *) " ... ..CC. ",
           /* line */ (const char *) " ... ...C. ",
           /* line */ (const char *) " ...s.....^",
           /* line */ (const char *) "     ..... ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "                  ^   ",
           /* line */ (const char *) "                  .   ",
           /* line */ (const char *) "  .....CC C.......... ",
           /* line */ (const char *) "  ......C C..B....... ",
           /* line */ (const char *) "  .......s........... ",
           /* line */ (const char *) "^.......C C..B.......^",
           /* line */ (const char *) "          CC...       ",
           /* line */ (const char *) "              .       ",
           /* line */ (const char *) "              ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "           ^  ",
           /* line */ (const char *) "  ....... ... ",
           /* line */ (const char *) "  .x..... ... ",
           /* line */ (const char *) "  ..x.... ...^",
           /* line */ (const char *) " ....x...  .. ",
           /* line */ (const char *) "^.....x...s.. ",
           /* line */ (const char *) "  ........ .. ",
           /* line */ (const char *) "      ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^            ",
           /* line */ (const char *) "  ..... .....    ",
           /* line */ (const char *) "  ..... .x...    ",
           /* line */ (const char *) "  .x...s..x.....^",
           /* line */ (const char *) "^...x.. ...x.    ",
           /* line */ (const char *) "  ...x. .....    ",
           /* line */ (const char *) "  ..... .....    ",
           /* line */ (const char *) "         ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^         ",
           /* line */ (const char *) "      .         ",
           /* line */ (const char *) "  ........ ...  ",
           /* line */ (const char *) "  .x....x. .... ",
           /* line */ (const char *) "  ..x..x..s....^",
           /* line */ (const char *) "^.....x... .... ",
           /* line */ (const char *) "     ..... .... ",
           /* line */ (const char *) "        ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " ....s....^",
           /* line */ (const char *) "^.... .x.. ",
           /* line */ (const char *) " .... ..x. ",
           /* line */ (const char *) " .... .x.. ",
           /* line */ (const char *) " .... ..x. ",
           /* line */ (const char *) "      .... ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^     ",
           /* line */ (const char *) "           ....     ",
           /* line */ (const char *) "           .x..     ",
           /* line */ (const char *) "^....s.......x..... ",
           /* line */ (const char *) " .... .............^",
           /* line */ (const char *) "           ....     ",
           /* line */ (const char *) "              ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " .$...... ",
           /* line */ (const char *) " ....B.B. ",
           /* line */ (const char *) "      s   ",
           /* line */ (const char *) "^....B.B.^",
           /* line */ (const char *) " .x...... ",
           /* line */ (const char *) " .xx...x. ",
           /* line */ (const char *) " .....xx. ",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ......   ",
           /* line */ (const char *) " .$....   ",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ....```. ",
           /* line */ (const char *) "      s   ",
           /* line */ (const char *) "^....```.^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .......  ",
           /* line */ (const char *) " .$...... ",
           /* line */ (const char *) " ..CCCCC. ",
           /* line */ (const char *) "  ...```. ",
           /* line */ (const char *) "      s   ",
           /* line */ (const char *) "^....```.^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..`C`... ",
           /* line */ (const char *) " .$`C``.. ",
           /* line */ (const char *) " ...C``.. ",
           /* line */ (const char *) "      s   ",
           /* line */ (const char *) "^........^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^  ",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) "^.|....|. ",
           /* line */ (const char *) " ...b.... ",
           /* line */ (const char *) " ....b... ",
           /* line */ (const char *) " .|....|.^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^  ",
           /* line */ (const char *) " ....... ",
           /* line */ (const char *) "^.|...|. ",
           /* line */ (const char *) " ..b.b.. ",
           /* line */ (const char *) " ...T... ",
           /* line */ (const char *) " ..b.b.. ",
           /* line */ (const char *) " .|...|.^",
           /* line */ (const char *) " ....... ",
           /* line */ (const char *) " ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) "        .   ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "   ..C.C..  ",
           /* line */ (const char *) "   ...g....^",
           /* line */ (const char *) "   ..C.C..  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "^.......b.  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "       ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) " $      .   ",
           /* line */ (const char *) " . b......  ",
           /* line */ (const char *) " .sb......  ",
           /* line */ (const char *) "   b.|.|..  ",
           /* line */ (const char *) "      s     ",
           /* line */ (const char *) "   ..|.|...^",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "       ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) "        .   ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "   .....|.  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "   .|...|.  ",
           /* line */ (const char *) "   ........^",
           /* line */ (const char *) "   .|.....  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "^.......b.  ",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "       ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^  ",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) "^.CCCCCC. ",
           /* line */ (const char *) " .C....C. ",
           /* line */ (const char *) " .C.g$.C. ",
           /* line */ (const char *) " .C....C. ",
           /* line */ (const char *) " .CCCCCC.^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^  ",
           /* line */ (const char *) " ....... ",
           /* line */ (const char *) "^.CCCCC. ",
           /* line */ (const char *) " .C...C. ",
           /* line */ (const char *) " .C.T.C. ",
           /* line */ (const char *) " .C...C. ",
           /* line */ (const char *) " .CCCCC.^",
           /* line */ (const char *) " ....... ",
           /* line */ (const char *) " ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^  ",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) "^.CCCCCC. ",
           /* line */ (const char *) " .C...$C. ",
           /* line */ (const char *) " .C.gg.C. ",
           /* line */ (const char *) " .C$...C. ",
           /* line */ (const char *) " .CCCCCC.^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "    .     ",
           /* line */ (const char *) "  ....... ",
           /* line */ (const char *) "  .|...|.^",
           /* line */ (const char *) "^........ ",
           /* line */ (const char *) "  ....... ",
           /* line */ (const char *) "  .|...|. ",
           /* line */ (const char *) "  ....... ",
           /* line */ (const char *) "       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^         ",
           /* line */ (const char *) "    .         ",
           /* line */ (const char *) "  ..... ..... ",
           /* line */ (const char *) "  .....s.....^",
           /* line */ (const char *) "^...... ..... ",
           /* line */ (const char *) "  5.... ..... ",
           /* line */ (const char *) "  55... ..... ",
           /* line */ (const char *) "  555.. ..... ",
           /* line */ (const char *) "           ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^             ",
           /* line */ (const char *) "    .             ",
           /* line */ (const char *) "  5......... .... ",
           /* line */ (const char *) "  ..........s....^",
           /* line */ (const char *) "^...........   s  ",
           /* line */ (const char *) "  ..........s.... ",
           /* line */ (const char *) "  5......... .... ",
           /* line */ (const char *) "  55........ .... ",
           /* line */ (const char *) "               ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                 ",
           /* line */ (const char *) "    .       555555555 ",
           /* line */ (const char *) "  ......    55....... ",
           /* line */ (const char *) "  ......    55.b.b.b.^",
           /* line */ (const char *) "^.........  5........ ",
           /* line */ (const char *) "  ......... ...b.b.b. ",
           /* line */ (const char *) "  5........s......... ",
           /* line */ (const char *) "  55....... ......... ",
           /* line */ (const char *) "                   ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    . 555  555   555      ",
           /* line */ (const char *) "  .......`....CCC........ ",
           /* line */ (const char *) "  x......```...C.....bb..^",
           /* line */ (const char *) "  .......C.```.C.....b... ",
           /* line */ (const char *) "  x......C..```C......... ",
           /* line */ (const char *) "  .......C...```......... ",
           /* line */ (const char *) "  x.....CCC.............. ",
           /* line */ (const char *) "  .....                .. ",
           /* line */ (const char *) "^......                .. ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    . 555  555   555      ",
           /* line */ (const char *) "  ............. ......... ",
           /* line */ (const char *) "  ..CCC........ .........^",
           /* line */ (const char *) "^...CCC.....    ....CCC.. ",
           /* line */ (const char *) "  ..CCC..... .......CCC.. ",
           /* line */ (const char *) "  ..........s.......CCC.. ",
           /* line */ (const char *) "  .......... ............ ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    .                     ",
           /* line */ (const char *) "  ..........           .. ",
           /* line */ (const char *) "  ........x.5         5..^",
           /* line */ (const char *) "^..xx....xx...... ....... ",
           /* oine */ (const char *) "  .x.............s....... ",
           /* line */ (const char *) "  ............... ....... ",
           /* line */ (const char *) "  ............... ....... ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    .                     ",
           /* line */ (const char *) "  ..........           .. ",
           /* line */ (const char *) "  .x........5         5..^",
           /* line */ (const char *) "^...x........ . ..... ... ",
           /* line */ (const char *) "  ...x.......s....... ... ",
           /* line */ (const char *) "  ....x...... .......s... ",
           /* line */ (const char *) "  .....x..... ....... ... ",
           /* line */ (const char *) "  ......x...5         5.. ",
           /* line */ (const char *) "  ..........           .. ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    .                     ",
           /* line */ (const char *) "  ..........           .. ",
           /* line */ (const char *) "  ........x.5         5..^",
           /* line */ (const char *) "^........x.....     ..... ",
           /* line */ (const char *) "  ......x................ ",
           /* line */ (const char *) "  ....................... ",
           /* line */ (const char *) "  ....x.........     .... ",
           /* line */ (const char *) "  ...x......5         5.. ",
           /* line */ (const char *) "  ..x.......           .. ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    .                     ",
           /* line */ (const char *) "  ..........           .. ",
           /* line */ (const char *) "  .x........5         5..^",
           /* line */ (const char *) "^..............     ..... ",
           /* line */ (const char *) "  ...x.........CC.C...... ",
           /* line */ (const char *) "  ..............C.CC..... ",
           /* line */ (const char *) "  .....x........     .... ",
           /* line */ (const char *) "  ..........5         5.. ",
           /* line */ (const char *) "  ..........           .. ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                     ",
           /* line */ (const char *) "    .                     ",
           /* line */ (const char *) "  ...............     ... ",
           /* line */ (const char *) "  ............xx..    ...^",
           /* line */ (const char *) "^..............x..    ... ",
           /* line */ (const char *) "  .................   ... ",
           /* line */ (const char *) "  ..   .................. ",
           /* line */ (const char *) "  ..    ................. ",
           /* line */ (const char *) "   ^                   ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^          ^          ",
           /* line */ (const char *) "    .          .......... ",
           /* line */ (const char *) "    .          .......xx. ",
           /* line */ (const char *) "    .         5........x. ",
           /* line */ (const char *) "    .        55.......... ",
           /* line */ (const char *) "  ....................... ",
           /* line */ (const char *) "  .x.....................^",
           /* line */ (const char *) "^..x..........x.......... ",
           /* line */ (const char *) "  .xxxx.......x.......... ",
           /* line */ (const char *) "  .........xxxx.......... ",
           /* line */ (const char *) "  ....................... ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^          ^          ",
           /* line */ (const char *) "    . ................... ",
           /* line */ (const char *) "    . .................g. ",
           /* line */ (const char *) "    . ...      .......... ",
           /* line */ (const char *) "    . ...      .......... ",
           /* line */ (const char *) "  5...................... ",
           /* line */ (const char *) "  .......................^",
           /* line */ (const char *) "^...  .........      .... ",
           /* line */ (const char *) "  ..  .........      .... ",
           /* line */ (const char *) "  ....................... ",
           /* line */ (const char *) "  5...................... ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                   ^ ",
           /* line */ (const char *) "    .                 ... ",
           /* line */ (const char *) "    .                 |.| ",
           /* line */ (const char *) "  5...`.................. ",
           /* line */ (const char *) "  ...``CCCCCC............^",
           /* line */ (const char *) "^.....```.``............. ",
           /* line */ (const char *) "  5......``CCCCCC........ ",
           /* line */ (const char *) "     B....```............ ",
           /* line */ (const char *) "     gB.......CCCCCC..... ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                         ",
           /* line */ (const char *) "    .                         ",
           /* line */ (const char *) "  ...........C............... ",
           /* line */ (const char *) "  .xx........C...............^",
           /* line */ (const char *) "^..x..........C.............. ",
           /* line */ (const char *) "  .............CC..........x. ",
           /* line */ (const char *) "  ...............C........xx. ",
           /* line */ (const char *) "  ................C.......... ",
           /* line */ (const char *) "                           ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^     ",
           /* line */ (const char *) "  . 55  ",
           /* line */ (const char *) " ....5  ",
           /* line */ (const char *) "^.m..5  ",
           /* line */ (const char *) " ......^",
           /* line */ (const char *) "   ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^      ",
           /* line */ (const char *) "  . 55   ",
           /* line */ (const char *) " 5...55  ",
           /* line */ (const char *) " ....555 ",
           /* line */ (const char *) " ....555 ",
           /* line */ (const char *) " ....55  ",
           /* line */ (const char *) "^.m..5   ",
           /* line */ (const char *) " .......^",
           /* line */ (const char *) "   ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^     ",
           /* line */ (const char *) "  . 55  ",
           /* line */ (const char *) "^....55 ",
           /* line */ (const char *) " .m....^",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) " ..C... ",
           /* line */ (const char *) " .CCC.. ",
           /* line */ (const char *) " 5....5 ",
           /* line */ (const char *) "   ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^            ",
           /* line */ (const char *) "  . 55 55 55   ",
           /* line */ (const char *) "^.....g......5 ",
           /* line */ (const char *) " .......C..... ",
           /* line */ (const char *) " 5..C.....g...^",
           /* line */ (const char *) "   ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^            ",
           /* line */ (const char *) "  .            ",
           /* line */ (const char *) "^....g.CC....5 ",
           /* line */ (const char *) " 5......CC.g..^",
           /* line */ (const char *) "   ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^            ",
           /* line */ (const char *) "  .  5....5    ",
           /* line */ (const char *) "  . 5......5   ",
           /* line */ (const char *) "^........m...5 ",
           /* line */ (const char *) " 5............^",
           /* line */ (const char *) "   .  .....    ",
           /* line */ (const char *) "   .   ...     ",
           /* line */ (const char *) "   ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^      ",
           /* line */ (const char *) " ....5   ",
           /* line */ (const char *) " ....5   ",
           /* line */ (const char *) "^.m..55  ",
           /* line */ (const char *) " .......^",
           /* line */ (const char *) "   ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^      ",
           /* line */ (const char *) "  . 55   ",
           /* line */ (const char *) " ....5   ",
           /* line */ (const char *) " .m..5   ",
           /* line */ (const char *) " ....5   ",
           /* line */ (const char *) " ....5   ",
           /* line */ (const char *) "^....55  ",
           /* line */ (const char *) " .......^",
           /* line */ (const char *) "   ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^      ",
           /* line */ (const char *) "  . 55   ",
           /* line */ (const char *) " ....5   ",
           /* line */ (const char *) "^....55  ",
           /* line */ (const char *) " .......^",
           /* line */ (const char *) " .m..... ",
           /* line */ (const char *) " ....... ",
           /* line */ (const char *) "   ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^               ",
           /* line */ (const char *) "  ...             ",
           /* line */ (const char *) " .....            ",
           /* line */ (const char *) "^......    B.  t. ",
           /* line */ (const char *) " ......    ..  ..^",
           /* line */ (const char *) " .m.....C........ ",
           /* line */ (const char *) " ......  ..  ..   ",
           /* line */ (const char *) " ......  .B  .B   ",
           /* line */ (const char *) "   .              ",
           /* line */ (const char *) "   ^              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^    ",
           /* line */ (const char *) " C....C ",
           /* line */ (const char *) "^...g.. ",
           /* line */ (const char *) " C.....^",
           /* line */ (const char *) "  CB.B  ",
           /* line */ (const char *) "    .   ",
           /* line */ (const char *) "    ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^      ",
           /* line */ (const char *) " 5...555  ",
           /* line */ (const char *) "^......5  ",
           /* line */ (const char *) " 5.......^",
           /* line */ (const char *) "  cCCCc   ",
           /* line */ (const char *) "  5...5   ",
           /* line */ (const char *) "  5.g.5   ",
           /* line */ (const char *) "  5...5   ",
           /* line */ (const char *) "    .     ",
           /* line */ (const char *) "    ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^      ",
           /* line */ (const char *) " 5...555  ",
           /* line */ (const char *) "^......5  ",
           /* line */ (const char *) " 5.......^",
           /* line */ (const char *) "  cCCCc   ",
           /* line */ (const char *) "  5...5   ",
           /* line */ (const char *) "  5.g.5   ",
           /* line */ (const char *) "  5...5   ",
           /* line */ (const char *) "  cCCCc   ",
           /* line */ (const char *) "    .     ",
           /* line */ (const char *) "    ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^    ",
           /* line */ (const char *) "  ..555 ",
           /* line */ (const char *) " .....5 ",
           /* line */ (const char *) "^..g..5 ",
           /* line */ (const char *) " 555...^",
           /* line */ (const char *) "    ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^    ",
           /* line */ (const char *) "  ..555 ",
           /* line */ (const char *) " .....5 ",
           /* line */ (const char *) "^.. ...^",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "   |C|  ",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "    ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^   ",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "   |C|  ",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "  ..... ",
           /* line */ (const char *) " ..  .. ",
           /* line */ (const char *) "^..  .. ",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) " 555...^",
           /* line */ (const char *) "    ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^   ",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "   |C|  ",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "  ..... ",
           /* line */ (const char *) " ..   . ",
           /* line */ (const char *) "^..   . ",
           /* line */ (const char *) " ..   . ",
           /* line */ (const char *) " ...... ",
           /* line */ (const char *) " 555...^",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "   |C|  ",
           /* line */ (const char *) "   |.|  ",
           /* line */ (const char *) "    ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^            ",
           /* line */ (const char *) " 5..    55  55  ",
           /* line */ (const char *) " ...55  55  55  ",
           /* line */ (const char *) "^.......g...... ",
           /* line */ (const char *) " 5.....5555....^",
           /* line */ (const char *) "    ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^            ",
           /* line */ (const char *) " 5..    55  55  ",
           /* line */ (const char *) " ...55  55  55  ",
           /* line */ (const char *) "^.......g...... ",
           /* line */ (const char *) " 5.....5555....^",
           /* line */ (const char *) "    . 55  55    ",
           /* line */ (const char *) "    ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^             ",
           /* line */ (const char *) " 5..    55  55   ",
           /* line */ (const char *) " ...55555555555  ",
           /* line */ (const char *) "^........555...5 ",
           /* line */ (const char *) " 5.. .m........5 ",
           /* line */ (const char *) " 55.......... .  ",
           /* line */ (const char *) "  5....5555.....^",
           /* line */ (const char *) "    . 55  55     ",
           /* line */ (const char *) "    ^            ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^     ",
           /* line */ (const char *) " ...5555 ",
           /* line */ (const char *) " .....55 ",
           /* line */ (const char *) "^.....55 ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^     ",
           /* line */ (const char *) " ...5555 ",
           /* line */ (const char *) " .....55 ",
           /* line */ (const char *) "^..  .55 ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^     ",
           /* line */ (const char *) " ...555  ",
           /* line */ (const char *) " .....5  ",
           /* line */ (const char *) "^......5 ",
           /* line */ (const char *) " 5.....5 ",
           /* line */ (const char *) " 5.....5 ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^     ",
           /* line */ (const char *) " ...555  ",
           /* line */ (const char *) " .|...5  ",
           /* line */ (const char *) "^......5 ",
           /* line */ (const char *) " 5.....5 ",
           /* line */ (const char *) " 5..|..5 ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^   ",
           /* line */ (const char *) " ..55.55 ",
           /* line */ (const char *) " ......5 ",
           /* line */ (const char *) "^......5 ",
           /* line */ (const char *) " 5.....5 ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^         ",
           /* line */ (const char *) " ..55.55       ",
           /* line */ (const char *) " ......5       ",
           /* line */ (const char *) "^.. ...5       ",
           /* line */ (const char *) " 5.....55      ",
           /* line */ (const char *) " 555....55     ",
           /* line */ (const char *) "   5555..55555 ",
           /* line */ (const char *) "     55......5 ",
           /* line */ (const char *) "      5.m.. .5 ",
           /* line */ (const char *) "       5.....5 ",
           /* line */ (const char *) "       555....^",
           /* line */ (const char *) "           ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^         ",
           /* line */ (const char *) " ..55.55       ",
           /* line */ (const char *) " ......5       ",
           /* line */ (const char *) "^..|...5       ",
           /* line */ (const char *) " 5.....55      ",
           /* line */ (const char *) " 555....55     ",
           /* line */ (const char *) "   5555t.55555 ",
           /* line */ (const char *) "     55......5 ",
           /* line */ (const char *) "      5..m.|.5 ",
           /* line */ (const char *) "       5.....5 ",
           /* line */ (const char *) "       555....^",
           /* line */ (const char *) "           ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^         ",
           /* line */ (const char *) " ..55.....55   ",
           /* line */ (const char *) " ..........55  ",
           /* line */ (const char *) " ...... ....55 ",
           /* line */ (const char *) "^.. .........5 ",
           /* line */ (const char *) " 5........m..5 ",
           /* line */ (const char *) " 555...... ..5 ",
           /* line */ (const char *) "   555.......5 ",
           /* line */ (const char *) "     .5......5 ",
           /* line */ (const char *) "      5......5 ",
           /* line */ (const char *) "       5.....5 ",
           /* line */ (const char *) "       555....^",
           /* line */ (const char *) "           ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^    ",
           /* line */ (const char *) " ..55.555 ",
           /* line */ (const char *) " .......5 ",
           /* line */ (const char *) "^.m...|.5 ",
           /* line */ (const char *) " 5......5 ",
           /* line */ (const char *) " 555.....^",
           /* line */ (const char *) "    ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) " ..55.5555  ",
           /* line */ (const char *) " .m......5  ",
           /* line */ (const char *) " .........5 ",
           /* line */ (const char *) " ..|.g.|..5 ",
           /* line */ (const char *) " .........5 ",
           /* line */ (const char *) " ....|....5 ",
           /* line */ (const char *) "^.........5 ",
           /* line */ (const char *) " 5.......5  ",
           /* line */ (const char *) " 555.5.....^",
           /* line */ (const char *) "    ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) " .|g|.55.55 ",
           /* line */ (const char *) " .........5 ",
           /* line */ (const char *) "^.......m.5 ",
           /* line */ (const char *) " 5........5 ",
           /* line */ (const char *) " 555.5..5..^",
           /* line */ (const char *) "    ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^     ",
           /* line */ (const char *) " 55....  ",
           /* line */ (const char *) " 5|..... ",
           /* line */ (const char *) "^..g.... ",
           /* line */ (const char *) " 5|..... ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^   ",
           /* line */ (const char *) " ...55 ",
           /* line */ (const char *) " ....5 ",
           /* line */ (const char *) " ..    ",
           /* line */ (const char *) " ..    ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) " ...g. ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) "^..... ",
           /* line */ (const char *) " 5.... ",
           /* line */ (const char *) " 5.... ",
           /* line */ (const char *) " 5.... ",
           /* line */ (const char *) " 5....^",
           /* line */ (const char *) "  ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^               ",
           /* line */ (const char *) " ...............55 ",
           /* line */ (const char *) " .g..............5 ",
           /* line */ (const char *) " ..............55  ",
           /* line */ (const char *) " ..............5   ",
           /* line */ (const char *) " .....55           ",
           /* line */ (const char *) " .....5            ",
           /* line */ (const char *) " ccccc    |...g    ",
           /* line */ (const char *) " .......CC......   ",
           /* line */ (const char *) "^.......CC.....$   ",
           /* line */ (const char *) " 5....    |...m    ",
           /* line */ (const char *) " 5....             ",
           /* line */ (const char *) " 5....             ",
           /* line */ (const char *) " 5....^            ",
           /* line */ (const char *) "  ^                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^               ",
           /* line */ (const char *) " ...............55 ",
           /* line */ (const char *) " .g..............5 ",
           /* line */ (const char *) " ..............55  ",
           /* line */ (const char *) " ..............5   ",
           /* line */ (const char *) " .....55 CCCC..    ",
           /* line */ (const char *) " cc...5  CCCC..    ",
           /* line */ (const char *) " ccccc  CCCC ..    ",
           /* line */ (const char *) " ...cc  CCCC...    ",
           /* line */ (const char *) "^.....  CCCC...    ",
           /* line */ (const char *) " 5....  CCCC...    ",
           /* line */ (const char *) " 5.... CCCC....|   ",
           /* line */ (const char *) " 5....CCCC........^",
           /* line */ (const char *) " 5....CCCC.....|   ",
           /* line */ (const char *) "  ^                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^               ",
           /* line */ (const char *) " .....             ",
           /* line */ (const char *) " .m...             ",
           /* line */ (const char *) " .....5            ",
           /* line */ (const char *) " .....55           ",
           /* line */ (const char *) " .......c......5   ",
           /* line */ (const char *) " .......c..g...55  ",
           /* line */ (const char *) " ........c........^",
           /* line */ (const char *) " ........c........ ",
           /* line */ (const char *) " .......c..g...55  ",
           /* line */ (const char *) " .......c......5   ",
           /* line */ (const char *) "^.....             ",
           /* line */ (const char *) " 5....             ",
           /* line */ (const char *) " 5....             ",
           /* line */ (const char *) " 5....             ",
           /* line */ (const char *) " 5....^            ",
           /* line */ (const char *) "  ^                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^    ",
           /* line */ (const char *) " ...55  ",
           /* line */ (const char *) " ....5  ",
           /* line */ (const char *) " .....  ",
           /* line */ (const char *) "   ...  ",
           /* line */ (const char *) "   c..c ",
           /* line */ (const char *) " ..cCCc ",
           /* line */ (const char *) " ..c..c ",
           /* line */ (const char *) " .m...  ",
           /* line */ (const char *) "^.....  ",
           /* line */ (const char *) " 5....  ",
           /* line */ (const char *) " 5....  ",
           /* line */ (const char *) " 5....  ",
           /* line */ (const char *) " 5.....^",
           /* line */ (const char *) "  ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^    ",
           /* line */ (const char *) " ...55  ",
           /* line */ (const char *) " ....5  ",
           /* line */ (const char *) " .....  ",
           /* line */ (const char *) " . ...  ",
           /* line */ (const char *) " .....  ",
           /* line */ (const char *) "  .. .. ",
           /* line */ (const char *) "  ..... ",
           /* line */ (const char *) "  ..m.. ",
           /* line */ (const char *) "^...... ",
           /* line */ (const char *) "  5.... ",
           /* line */ (const char *) "  5.... ",
           /* line */ (const char *) "  5.... ",
           /* line */ (const char *) "  5....^",
           /* line */ (const char *) "   ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^         ",
           /* line */ (const char *) " 5.......... ",
           /* line */ (const char *) " 5.m.. . . .^",
           /* line */ (const char *) " 5.......... ",
           /* line */ (const char *) "^....5555    ",
           /* line */ (const char *) " 5...5       ",
           /* line */ (const char *) " 5...5       ",
           /* line */ (const char *) " 5...5       ",
           /* line */ (const char *) " 5.555       ",
           /* line */ (const char *) "  ^          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^      ",
           /* line */ (const char *) " 5.....  ",
           /* line */ (const char *) " 5..  .  ",
           /* line */ (const char *) " 5... .  ",
           /* line */ (const char *) "^....m.5 ",
           /* line */ (const char *) " ......5 ",
           /* line */ (const char *) " .....5  ",
           /* line */ (const char *) " ......  ",
           /* line */ (const char *) " 5.555..^",
           /* line */ (const char *) "  ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    5.555  ",
           /* line */ (const char *) "    5....5 ",
           /* line */ (const char *) "   5..m..5 ",
           /* line */ (const char *) "^........5 ",
           /* line */ (const char *) "   5.....5 ",
           /* line */ (const char *) " 5........^",
           /* line */ (const char *) " .......55 ",
           /* line */ (const char *) " 5....55   ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "   5....5 ",
           /* line */ (const char *) "  5...m.. ",
           /* line */ (const char *) " 5....... ",
           /* line */ (const char *) "^........ ",
           /* line */ (const char *) " 555..... ",
           /* line */ (const char *) "    5....^",
           /* line */ (const char *) "     5..5 ",
           /* line */ (const char *) "     5.5  ",
           /* line */ (const char *) "      ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^        ",
           /* line */ (const char *) "   5........ ",
           /* line */ (const char *) "  5...m..  . ",
           /* line */ (const char *) " 5........ . ",
           /* line */ (const char *) "^.... ...... ",
           /* line */ (const char *) " 555.  ..    ",
           /* line */ (const char *) "    .....^   ",
           /* line */ (const char *) "     5..5    ",
           /* line */ (const char *) "     5.5     ",
           /* line */ (const char *) "      ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "  55.55.. ",
           /* line */ (const char *) " 5....  . ",
           /* line */ (const char *) " 5..... . ",
           /* line */ (const char *) "^....m... ",
           /* line */ (const char *) " 5....... ",
           /* line */ (const char *) "  5......^",
           /* line */ (const char *) "  5....55 ",
           /* line */ (const char *) "   5.55   ",
           /* line */ (const char *) "    ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "  ...5555 ",
           /* line */ (const char *) "  ......5 ",
           /* line */ (const char *) "  ...m..5 ",
           /* line */ (const char *) "^.......5 ",
           /* line */ (const char *) "  5.....5 ",
           /* line */ (const char *) "  5......^",
           /* line */ (const char *) " 5.5...55 ",
           /* line */ (const char *) " 55..55   ",
           /* line */ (const char *) "    ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) " ..........  ",
           /* line */ (const char *) " 5.xx......  ",
           /* line */ (const char *) " 5.x.....m.5 ",
           /* line */ (const char *) "^..........5 ",
           /* line */ (const char *) " 55......x.5 ",
           /* line */ (const char *) "  5.....xx..^",
           /* line */ (const char *) "  5........5 ",
           /* line */ (const char *) "   5.555555  ",
           /* line */ (const char *) "    ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^                        ",
           /* line */ (const char *) " ...........  ..........$ ",
           /* line */ (const char *) " ..xx.......CC........xx. ",
           /* line */ (const char *) " ..x.....m.CCCC........x. ",
           /* line */ (const char *) "^..........C..C.......... ",
           /* line */ (const char *) " ..........CCCC.......... ",
           /* line */ (const char *) " ..x........CC....m....x.^",
           /* line */ (const char *) " ..xx.......CC........xx. ",
           /* line */ (const char *) " ...........xx........... ",
           /* line */ (const char *) "                 ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) " .555        ",
           /* line */ (const char *) " ...5   5555 ",
           /* line */ (const char *) "  5.55  5g.5 ",
           /* line */ (const char *) "^.....cc...5 ",
           /* line */ (const char *) "  5..5  5..5 ",
           /* line */ (const char *) "  5..5  5...^",
           /* line */ (const char *) "  5..5  5555 ",
           /* line */ (const char *) "   5.5       ",
           /* line */ (const char *) "    ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^                        ",
           /* line */ (const char *) " .555         .555        ",
           /* line */ (const char *) " ...5   5555  ...5   5555 ",
           /* line */ (const char *) "  5.55  5g.5   5.55  5g.5 ",
           /* line */ (const char *) "^.....cc...........cc...5 ",
           /* line */ (const char *) "  5..5  5..5   5..5  5..5 ",
           /* line */ (const char *) "  5..5  5...   5..5  5...^",
           /* line */ (const char *) "  5..5  5555   5..5  5555 ",
           /* line */ (const char *) "   5.5          5.5       ",
           /* line */ (const char *) "                 ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) " ........555 ",
           /* line */ (const char *) " ..55....g.5 ",
           /* line */ (const char *) "    CCc....5 ",
           /* line */ (const char *) "   CCCCc..cC ",
           /* line */ (const char *) "    CCc....5 ",
           /* line */ (const char *) "^..55.......^",
           /* line */ (const char *) " .........5  ",
           /* line */ (const char *) " 5...55555   ",
           /* line */ (const char *) "    ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) " .........   ",
           /* line */ (const char *) " 555........ ",
           /* line */ (const char *) "    5ccc.... ",
           /* line */ (const char *) "     CCCc.g. ",
           /* line */ (const char *) "     CCc.... ",
           /* line */ (const char *) " 5555cc..... ",
           /* line */ (const char *) "^...........^",
           /* line */ (const char *) " 5........5  ",
           /* line */ (const char *) "  5.....5    ",
           /* line */ (const char *) "    ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^       ",
           /* line */ (const char *) "  5..g..5    ",
           /* line */ (const char *) " 5........5  ",
           /* line */ (const char *) "^...cccc....^",
           /* line */ (const char *) " 5..cCCc.... ",
           /* line */ (const char *) "^...cccc....^",
           /* line */ (const char *) " 5........5  ",
           /* line */ (const char *) "  5.....5    ",
           /* line */ (const char *) "    ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^                    ",
           /* line */ (const char *) "  5..g..5      5..g..5    ",
           /* line */ (const char *) " 5........5   5........5  ",
           /* line */ (const char *) "^...cccc.........cccc....^",
           /* line */ (const char *) " 5..cCCc....  5..cCCc.... ",
           /* line */ (const char *) "^...cccc.........cccc....^",
           /* line */ (const char *) " 5........5   5........5  ",
           /* line */ (const char *) "  5.....5      5.....5    ",
           /* line */ (const char *) "                 ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^       ",
           /* line */ (const char *) "  5....5  .. ",
           /* line */ (const char *) " 5......cc.. ",
           /* line */ (const char *) "^.....CCCc   ",
           /* line */ (const char *) " 5.....CCCc. ",
           /* line */ (const char *) "^...g.......^",
           /* line */ (const char *) " 5........5  ",
           /* line */ (const char *) "  5.....5    ",
           /* line */ (const char *) "    ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "         ..5 ",
           /* line */ (const char *) "         ... ",
           /* line */ (const char *) "   5........ ",
           /* line */ (const char *) "^....g...... ",
           /* line */ (const char *) "  5......... ",
           /* line */ (const char *) "   55555....^",
           /* line */ (const char *) "       5.... ",
           /* line */ (const char *) "       5.... ",
           /* line */ (const char *) "       55... ",
           /* line */ (const char *) "           ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "         ..5 ",
           /* line */ (const char *) "         ... ",
           /* line */ (const char *) "          c  ",
           /* line */ (const char *) "          c  ",
           /* line */ (const char *) "          c  ",
           /* line */ (const char *) "         ... ",
           /* line */ (const char *) "         ... ",
           /* line */ (const char *) "   5........ ",
           /* line */ (const char *) "^.........g. ",
           /* line */ (const char *) "  5......... ",
           /* line */ (const char *) "   55555....^",
           /* line */ (const char *) "           ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "  ....   ..5 ",
           /* line */ (const char *) "  ....cCc... ",
           /* line */ (const char *) "  .g..    .  ",
           /* line */ (const char *) "  $...    c  ",
           /* line */ (const char *) "          .  ",
           /* line */ (const char *) "         ... ",
           /* line */ (const char *) "         ... ",
           /* line */ (const char *) "   5........ ",
           /* line */ (const char *) "^........... ",
           /* line */ (const char *) "  5......... ",
           /* line */ (const char *) "   55555....^",
           /* line */ (const char *) "           ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^    ",
           /* line */ (const char *) "   ........5  ",
           /* line */ (const char *) "   c........  ",
           /* line */ (const char *) "    cc....... ",
           /* line */ (const char *) "     cC...... ",
           /* line */ (const char *) "     cCC..... ",
           /* line */ (const char *) "     cCCCcCCc ",
           /* line */ (const char *) "    cC....... ",
           /* line */ (const char *) "   5.....g... ",
           /* line */ (const char *) "^............ ",
           /* line */ (const char *) "  5.........  ",
           /* line */ (const char *) "   55555.....^",
           /* line */ (const char *) "           ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^    ",
           /* line */ (const char *) "        5..55 ",
           /* line */ (const char *) "       5....5 ",
           /* line */ (const char *) "     55..g..5 ",
           /* line */ (const char *) "    5.......5 ",
           /* line */ (const char *) "   5.......5  ",
           /* line */ (const char *) "   5.CCc...5  ",
           /* line */ (const char *) "      CCc.... ",
           /* line */ (const char *) "   5.CCc..... ",
           /* line */ (const char *) "^....cc...... ",
           /* line */ (const char *) "  5.........  ",
           /* line */ (const char *) "   55555.....^",
           /* line */ (const char *) "           ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^   ",
           /* line */ (const char *) " ............ ",
           /* line */ (const char *) " ..g......... ",
           /* line */ (const char *) " 5........... ",
           /* line */ (const char *) "  5........ s ",
           /* line */ (const char *) "   5.....   $ ",
           /* line */ (const char *) "    5....   s ",
           /* line */ (const char *) "    5....  m. ",
           /* line */ (const char *) "    5....  .. ",
           /* line */ (const char *) "^.......   .. ",
           /* line */ (const char *) "   5......... ",
           /* line */ (const char *) "    55555....^",
           /* line */ (const char *) "         ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "        5..5 ",
           /* line */ (const char *) " 5     55... ",
           /* line */ (const char *) "^....cc..... ",
           /* line */ (const char *) " 5..gccc.... ",
           /* line */ (const char *) " 55...cc....^",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "        5..5 ",
           /* line */ (const char *) "        5... ",
           /* line */ (const char *) "^.....ccc... ",
           /* line */ (const char *) " 5...ccc.g.. ",
           /* line */ (const char *) " 5..ccc..... ",
           /* line */ (const char *) " 5...   .... ",
           /* line */ (const char *) " 55..   ....^",
           /* line */ (const char *) "   ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "        5..5 ",
           /* line */ (const char *) "        5... ",
           /* line */ (const char *) "^....cc..... ",
           /* line */ (const char *) " 5...ccc.... ",
           /* line */ (const char *) " 5....cc.... ",
           /* line */ (const char *) " 5...ccc.... ",
           /* line */ (const char *) " 55..ccc.g.. ",
           /* line */ (const char *) " 5...ccc.... ",
           /* line */ (const char *) " 55...c.....^",
           /* line */ (const char *) "   ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "        5..5 ",
           /* line */ (const char *) "        5... ",
           /* line */ (const char *) "^........... ",
           /* line */ (const char *) " 5.......... ",
           /* line */ (const char *) " 5......g... ",
           /* line */ (const char *) " 5...m...... ",
           /* line */ (const char *) " 55.........^",
           /* line */ (const char *) "   ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^    ^   ",
           /* line */ (const char *) "  5..5  5..5 ",
           /* line */ (const char *) "  ...5  5... ",
           /* line */ (const char *) "^.....cc.... ",
           /* line */ (const char *) " 5..m.cc..g. ",
           /* line */ (const char *) " 55...cc....^",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^                 ^   ",
           /* line */ (const char *) "  5..5  5..5   5..5  5..5 ",
           /* line */ (const char *) "  ...5  5...   ...5  5... ",
           /* line */ (const char *) "^.....cc.....CC....cc.... ",
           /* line */ (const char *) " 5..m.cc..g.CC...m.cc..g. ",
           /* line */ (const char *) " 55...cc...CC......cc....^",
           /* line */ (const char *) "        ^            ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) " 55......... ",
           /* line */ (const char *) " 5.........5 ",
           /* line */ (const char *) "^.......m..5 ",
           /* line */ (const char *) " 5.........5 ",
           /* line */ (const char *) " 55.........^",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) " 55..c......^",
           /* line */ (const char *) " 5....c....5 ",
           /* line */ (const char *) "^......c.m.5 ",
           /* line */ (const char *) " 5.   c....5 ",
           /* line */ (const char *) " 55   ....55 ",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "       5...  ",
           /* line */ (const char *) "      5....  ",
           /* line */ (const char *) "     5...... ",
           /* line */ (const char *) "     5...... ",
           /* line */ (const char *) "   55....... ",
           /* line */ (const char *) "^.c......m.. ",
           /* line */ (const char *) "  c......... ",
           /* line */ (const char *) "  c.........^",
           /* line */ (const char *) "  c......... ",
           /* line */ (const char *) "  c......... ",
           /* line */ (const char *) "   5........ ",
           /* line */ (const char *) "           ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "     5555..  ",
           /* line */ (const char *) "     5.....  ",
           /* line */ (const char *) "     5..cc.. ",
           /* line */ (const char *) "     5..ccc. ",
           /* line */ (const char *) "   55...ccc. ",
           /* line */ (const char *) "^......ccc.. ",
           /* line */ (const char *) "   ......c..^",
           /* line */ (const char *) "   5..m..... ",
           /* line */ (const char *) "           ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^  ",
           /* line */ (const char *) "     5555.....  ",
           /* line */ (const char *) "     5........  ",
           /* line */ (const char *) "     5......... ",
           /* line */ (const char *) "     5...m..... ",
           /* line */ (const char *) "   55........x. ",
           /* line */ (const char *) "^............x. ",
           /* line */ (const char *) "   .......xxxx.^",
           /* line */ (const char *) "   5........... ",
           /* line */ (const char *) "              ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^     ",
           /* line */ (const char *) "     5555......55  ",
           /* line */ (const char *) "     5..........5  ",
           /* line */ (const char *) "     5.xxx.......5 ",
           /* line */ (const char *) "     5.x.....x.... ",
           /* line */ (const char *) "   55..x.....x....^",
           /* line */ (const char *) "^..........xxx.5   ",
           /* line */ (const char *) "   ....m.......    ",
           /* line */ (const char *) "   5...........    ",
           /* line */ (const char *) "    CC5|.|5CC ^    ",
           /* line */ (const char *) "     C5...5C       ",
           /* line */ (const char *) "     C5...5C       ",
           /* line */ (const char *) "     CCCCcCC       ",
           /* line */ (const char *) "     CCcCCCC       ",
           /* line */ (const char *) "     C5...5C       ",
           /* line */ (const char *) "     C5$.m5C       ",
           /* line */ (const char *) "     CCCCCCC       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^        ",
           /* line */ (const char *) "     5555.........5   ",
           /* line */ (const char *) "     5.............5  ",
           /* line */ (const char *) "     5.xxxx.......... ",
           /* line */ (const char *) "     5.x............. ",
           /* line */ (const char *) "   55..x.xxx.........^",
           /* line */ (const char *) "^......m.x.....555    ",
           /* line */ (const char *) "  C......x.....55     ",
           /* line */ (const char *) "  C......x.....5      ",
           /* line */ (const char *) "  C............5      ",
           /* line */ (const char *) "  C............       ",
           /* line */ (const char *) "  C5..|...|..........^",
           /* line */ (const char *) "   CCC5...5CC     .   ",
           /* line */ (const char *) "    CC5...5CC     .   ",
           /* line */ (const char *) "     C5...5C      .   ",
           /* line */ (const char *) "     C5...5CC     ...^",
           /* line */ (const char *) "     CCCCcCCCC        ",
           /* line */ (const char *) "     CCcCCCCCCCCC     ",
           /* line */ (const char *) "     C5...5CC...CC    ",
           /* line */ (const char *) "     C5..m5CC...CC    ",
           /* line */ (const char *) "     CC...CCC...CC    ",
           /* line */ (const char *) "     CCCCCCCC..$CC    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^          ",
           /* line */ (const char *) "   55...5        ",
           /* line */ (const char *) "  5......5       ",
           /* line */ (const char *) "  5..|.|..5....  ",
           /* line */ (const char *) "  5............  ",
           /* line */ (const char *) " 5............5  ",
           /* line */ (const char *) " 5....m........5 ",
           /* line */ (const char *) " 5.............5 ",
           /* line */ (const char *) "  5.........x.5  ",
           /* line */ (const char *) "  5........xx.5  ",
           /* line */ (const char *) "  5...........5  ",
           /* line */ (const char *) "^...............^",
           /* line */ (const char *) "  5..........55  ",
           /* line */ (const char *) "   5.....5       ",
           /* line */ (const char *) "     ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^         ",
           /* line */ (const char *) "   55......5        ",
           /* line */ (const char *) "  5.........5       ",
           /* line */ (const char *) "  5..........5....  ",
           /* line */ (const char *) "  5..xx...........  ",
           /* line */ (const char *) " 5...x...........5  ",
           /* line */ (const char *) " 5......m.........5 ",
           /* line */ (const char *) " 5................5 ",
           /* line */ (const char *) "  5..............5  ",
           /* line */ (const char *) "  5g.........x...5  ",
           /* line */ (const char *) "  5.........xx...5  ",
           /* line */ (const char *) "^..................^",
           /* line */ (const char *) "  5.............55  ",
           /* line */ (const char *) "   5........5       ",
           /* line */ (const char *) "     ^              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^               ",
           /* line */ (const char *) "   55......5              ",
           /* line */ (const char *) "  5.........5             ",
           /* line */ (const char *) "  5..........5...5        ",
           /* line */ (const char *) "  5.....m...C.....        ",
           /* line */ (const char *) " 5...........CCCC.5....5  ",
           /* line */ (const char *) " 5...x......CCg.CC.......^",
           /* line */ (const char *) " 5...xx....C..C..CC.....5 ",
           /* line */ (const char *) "  5..............55 CCC   ",
           /* line */ (const char *) "  5.....xx.......5  CCC   ",
           /* line */ (const char *) "  5......x....m..5  CCC   ",
           /* line */ (const char *) "^.................5  ...  ",
           /* line */ (const char *) "  5.............55   .$.  ",
           /* line */ (const char *) "   5........5        ...  ",
           /* line */ (const char *) "     ^                    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^        ",
           /* line */ (const char *) "   5555555.........5   ",
           /* line */ (const char *) "   555555...........5  ",
           /* line */ (const char *) "   5555.5............. ",
           /* line */ (const char *) "   55555.............. ",
           /* line */ (const char *) "   555................^",
           /* line */ (const char *) "  5...............55   ",
           /* line */ (const char *) " 5...............5555  ",
           /* line */ (const char *) " 5................5555 ",
           /* line */ (const char *) " 55...........m...5555 ",
           /* line */ (const char *) "  555............5555  ",
           /* line */ (const char *) "  5555...........555   ",
           /* line */ (const char *) "  5..............5     ",
           /* line */ (const char *) "^..................^   ",
           /* line */ (const char *) "  5.............55     ",
           /* line */ (const char *) "   5........5          ",
           /* line */ (const char *) "     ^                 ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^        ",
           /* line */ (const char *) "          55.......5   ",
           /* line */ (const char *) "          55........5  ",
           /* line */ (const char *) "          ............ ",
           /* line */ (const char *) "          ....m....... ",
           /* line */ (const char *) "         5............^",
           /* line */ (const char *) "  5...............55   ",
           /* line */ (const char *) " 5...............5555  ",
           /* line */ (const char *) " 5................5555 ",
           /* line */ (const char *) " 55....m..........5555 ",
           /* line */ (const char *) "  555............5555  ",
           /* line */ (const char *) "  5555...........555   ",
           /* line */ (const char *) "  5..............5     ",
           /* line */ (const char *) "^.........             ",
           /* line */ (const char *) "  5.......^            ",
           /* line */ (const char *) "   5......             ",
           /* line */ (const char *) "     ^                 ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^      ",
           /* line */ (const char *) "          55......55 ",
           /* line */ (const char *) "          55.......5 ",
           /* line */ (const char *) "          .......... ",
           /* line */ (const char *) "          ....m..... ",
           /* line */ (const char *) "         5..........^",
           /* line */ (const char *) "  5..............555 ",
           /* line */ (const char *) "  ........5          ",
           /* line */ (const char *) "^.........           ",
           /* line */ (const char *) "  ........           ",
           /* line */ (const char *) "  5....m..^          ",
           /* line */ (const char *) "  55......           ",
           /* line */ (const char *) "     ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^      ",
           /* line */ (const char *) "          55......55 ",
           /* line */ (const char *) "          55.......5 ",
           /* line */ (const char *) "    ................ ",
           /* line */ (const char *) "    .     ....m..... ",
           /* line */ (const char *) "    .    5..........^",
           /* line */ (const char *) "  5..............555 ",
           /* line */ (const char *) " .........5  .       ",
           /* line */ (const char *) "^.............       ",
           /* line */ (const char *) " .........           ",
           /* line */ (const char *) "  5....m..^          ",
           /* line */ (const char *) "  55......           ",
           /* line */ (const char *) "     ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^      ",
           /* line */ (const char *) "    CCCCCCC5......55 ",
           /* line */ (const char *) "    C......5..m....5 ",
           /* line */ (const char *) "    C.CCCC.......... ",
           /* line */ (const char *) "    C.CCCC.......... ",
           /* line */ (const char *) "    C.CCCC..........^",
           /* line */ (const char *) "  5..............555 ",
           /* line */ (const char *) "  ........CCCCCCCC   ",
           /* line */ (const char *) "^.........CCCCCCCC   ",
           /* line */ (const char *) "  ........CCC....C   ",
           /* line */ (const char *) "  5.....m.   .m$.    ",
           /* line */ (const char *) "  55......   ....    ",
           /* line */ (const char *) "     ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^      ",
           /* line */ (const char *) "   CCCCCCC5.x....55 ",
           /* line */ (const char *) "   C......5.sm....5 ",
           /* line */ (const char *) "   C.CCCC...x...... ",
           /* line */ (const char *) "   C.CCCC...x...... ",
           /* line */ (const char *) "   C$CCCC...x......^",
           /* line */ (const char *) "   xxxxxxxxxx...555 ",
           /* line */ (const char *) " ........CCCCC.CC   ",
           /* line */ (const char *) "^........CCC.CCCC   ",
           /* line */ (const char *) " ........CC.....C   ",
           /* line */ (const char *) " 5.....m... .m$.    ",
           /* line */ (const char *) " 55......   ....    ",
           /* line */ (const char *) "    ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^      ",
           /* line */ (const char *) "   CCCCCCCC....C.55 ",
           /* line */ (const char *) "  5C......C....C..5 ",
           /* line */ (const char *) "  5C.CCCC...C..C... ",
           /* line */ (const char *) "  5C.CCCC...C...... ",
           /* line */ (const char *) "  5C.CCCC...C......^",
           /* line */ (const char *) "    ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^          ",
           /* line */ (const char *) "      5555.......555555 ",
           /* line */ (const char *) "     5555..........5555 ",
           /* line */ (const char *) "     55.....x........55 ",
           /* line */ (const char *) "   5555....xxx......... ",
           /* line */ (const char *) "   5555.....x.......... ",
           /* line */ (const char *) "   5555.......m........ ",
           /* line */ (const char *) "  555..................^",
           /* line */ (const char *) " 55................55   ",
           /* line */ (const char *) " 5.......x........5555  ",
           /* line */ (const char *) " 5......xxx........5555 ",
           /* line */ (const char *) "   ......x.........5555 ",
           /* line */ (const char *) "    ..........x...5555  ",
           /* line */ (const char *) "    .........xxx..555   ",
           /* line */ (const char *) " 5............x...5     ",
           /* line */ (const char *) "^.....................^ ",
           /* line */ (const char *) " 5...........555555     ",
           /* line */ (const char *) "  5.....555555          ",
           /* line */ (const char *) "    ^                   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "             ^          ",
           /* line */ (const char *) "      5555.......555555 ",
           /* line */ (const char *) "     5555.......C..5555 ",
           /* line */ (const char *) "     55.....C.CC.....55 ",
           /* line */ (const char *) "   5555....CCC......... ",
           /* line */ (const char *) "   5555....CC.......... ",
           /* line */ (const char *) "   5555...C...m........ ",
           /* line */ (const char *) "  555....C.............^",
           /* line */ (const char *) " 55......C.........55   ",
           /* line */ (const char *) " 5.......C........5555  ",
           /* line */ (const char *) " 5......CCC........5555 ",
           /* line */ (const char *) "   ....C.C.........5555 ",
           /* line */ (const char *) "    ..C...C...C...5555  ",
           /* line */ (const char *) "    CC.....CCCCC..555   ",
           /* line */ (const char *) " 5...........CC...5     ",
           /* line */ (const char *) "^..............C......^ ",
           /* line */ (const char *) " 5...........555555     ",
           /* line */ (const char *) "  5.....555555          ",
           /* line */ (const char *) "    ^                   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^          ",
           /* line */ (const char *) "       5555.......555555 ",
           /* line */ (const char *) "      5555..........5555 ",
           /* line */ (const char *) "      55..............55 ",
           /* line */ (const char *) "    5555................ ",
           /* line */ (const char *) "    5555......m......... ",
           /* line */ (const char *) "    555................. ",
           /* line */ (const char *) "    555..........x...... ",
           /* line */ (const char *) "    555.........xxx..... ",
           /* line */ (const char *) "     55..........x...... ",
           /* line */ (const char *) "      x................. ",
           /* line */ (const char *) "   555x...xxx...........^",
           /* line */ (const char *) "  55..s...x$s.......55   ",
           /* line */ (const char *) " 55...x...xxx......5555  ",
           /* line */ (const char *) " 55..xx.............5555 ",
           /* line */ (const char *) " 55.$x..............5555 ",
           /* line */ (const char *) "  55x..............5555  ",
           /* line */ (const char *) "  55x..............555   ",
           /* line */ (const char *) "  sxx......m.......5     ",
           /* line */ (const char *) "^.......................^",
           /* line */ (const char *) "  5...........555555     ",
           /* line */ (const char *) "   5.....555555          ",
           /* line */ (const char *) "     ^                   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "              ^          ",
           /* line */ (const char *) "       5555.... $.555555 ",
           /* line */ (const char *) "      5555..... ....5555 ",
           /* line */ (const char *) "      55....... ......55 ",
           /* line */ (const char *) "    5555....... ........ ",
           /* line */ (const char *) "    5555......m ........ ",
           /* line */ (const char *) "    555........ ........ ",
           /* line */ (const char *) "    555........ ........ ",
           /* line */ (const char *) "    555........ ........ ",
           /* line */ (const char *) "     55........ m..B.B.m ",
           /* line */ (const char *) "       ........     s    ",
           /* line */ (const char *) "   555 .................^",
           /* line */ (const char *) "  55................55   ",
           /* line */ (const char *) " 55................5555  ",
           /* line */ (const char *) " 55.................5555 ",
           /* line */ (const char *) " 55.................5555 ",
           /* line */ (const char *) "  55...............5555  ",
           /* line */ (const char *) "  55...............555   ",
           /* line */ (const char *) "  .........m.......5     ",
           /* line */ (const char *) "^.......................^",
           /* line */ (const char *) "  5...........555555     ",
           /* line */ (const char *) "   5.....555555          ",
           /* line */ (const char *) "     ^                   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "                ^          ",
           /* line */ (const char *) "      5555..........55555  ",
           /* line */ (const char *) "     5555.............5555 ",
           /* line */ (const char *) "     55............m....55 ",
           /* line */ (const char *) "   5555....C.............5 ",
           /* line */ (const char *) "   555....CCC...........5  ",
           /* line */ (const char *) "   555.CCCCCCC.........5   ",
           /* line */ (const char *) "   555.C ... C.....C...5   ",
           /* line */ (const char *) "   555.C ... C....CCC..55  ",
           /* line */ (const char *) "   555.C $..s......C.....5 ",
           /* line */ (const char *) "   55..C ... C............ ",
           /* line */ (const char *) "  555..C     C....m.......^",
           /* line */ (const char *) " 55....CCCCCCCC.......55   ",
           /* line */ (const char *) " 5...........CCC.....5555  ",
           /* line */ (const char *) " 5...m.........CC.....5555 ",
           /* line */ (const char *) "  ..............C.C...5555 ",
           /* line */ (const char *) "  5.....C..........C.5555  ",
           /* line */ (const char *) "    ...CCC.........CC555   ",
           /* line */ (const char *) "    ....C...........C5     ",
           /* line */ (const char *) "^.....................^    ",
           /* line */ (const char *) " 5..............555555     ",
           /* line */ (const char *) "  5.....55...5555          ",
           /* line */ (const char *) "    ^                      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "                ^          ",
           /* line */ (const char *) "      5555..........55555  ",
           /* line */ (const char *) "     5555.............5555 ",
           /* line */ (const char *) "     55............m....55 ",
           /* line */ (const char *) "   5555..................5 ",
           /* line */ (const char *) "   555..................5  ",
           /* line */ (const char *) "   555.................5   ",
           /* line */ (const char *) "   555.................5   ",
           /* line */ (const char *) "   555.................55  ",
           /* line */ (const char *) "   555...................5 ",
           /* line */ (const char *) "   55..................... ",
           /* line */ (const char *) "  555`....................^",
           /* line */ (const char *) " 55.``..`.............55   ",
           /* line */ (const char *) "    ..`..............5555  ",
           /* line */ (const char *) "    s      ...........5555 ",
           /* line */ (const char *) "   ...       .........5555 ",
           /* line */ (const char *) "   .m.       ........5555  ",
           /* line */ (const char *) "   ...s...     ......555   ",
           /* line */ (const char *) "       .M. ... ......5     ",
           /* line */ (const char *) "       ...s.$.  ......^    ",
           /* line */ (const char *) "       ... ...  555555     ",
           /* line */ (const char *) "                ^          ",
           /* line */ (const char *) "                           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ... ..... ",
           /* line */ (const char *) " .T.s.....^",
           /* line */ (const char *) " ... ..b.. ",
           /* line */ (const char *) " ...   s   ",
           /* line */ (const char *) " .$.  ...  ",
           /* line */ (const char *) " ...  .$.  ",
           /* line */ (const char *) "       C   ",
           /* line */ (const char *) " .... ...  ",
           /* line */ (const char *) " M$..C.T.  ",
           /* line */ (const char *) " .m.. ...  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ... ..... ",
           /* line */ (const char *) " .T.s.....^",
           /* line */ (const char *) " ... ..b.. ",
           /* line */ (const char *) " ...   s   ",
           /* line */ (const char *) " .$.  ...  ",
           /* line */ (const char *) " ...  .$.  ",
           /* line */ (const char *) "       C   ",
           /* line */ (const char *) " .... ...  ",
           /* line */ (const char *) " .$..C.T.  ",
           /* line */ (const char *) " .m.. ...  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  . .....m ",
           /* line */ (const char *) "  . .T.... ",
           /* line */ (const char *) "  . $....m ",
           /* line */ (const char *) "  .     s  ",
           /* line */ (const char *) "..... $ ~  ",
           /* line */ (const char *) "..... s ~  ",
           /* line */ (const char *) "......~ ~  ",
           /* line */ (const char *) ".....~~~~~^",
           /* line */ (const char *) "....~~~    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "...`m.``...",
           /* line */ (const char *) "..``.....`.",
           /* line */ (const char *) ".`.`.......",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "......... $",
           /* line */ (const char *) "    C=C    ",
           /* line */ (const char *) "    C=C    ",
           /* line */ (const char *) "    C=C ...",
           /* line */ (const char *) "    ... ...",
           /* line */ (const char *) "    ... ...",
           /* line */ (const char *) "   .... ...",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) "  .........",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "$CC``.. .. ",
           /* line */ (const char *) "mCCC`.. CCC",
           /* line */ (const char *) ".CC``...==.",
           /* line */ (const char *) ".CCC .. CCC",
           /* line */ (const char *) ".CC. ..    ",
           /* line */ (const char *) "$CC.... ...",
           /* line */ (const char *) ".CC...bs..m",
           /* line */ (const char *) " ....`` ..$",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ..      m.",
           /* line */ (const char *) " .        .",
           /* line */ (const char *) " .  ```.==.",
           /* line */ (const char *) " .  ````  s",
           /* line */ (const char *) " .  ````  .",
           /* line */ (const char *) " .    `  ..",
           /* line */ (const char *) " .    `` .$",
           /* line */ (const char *) " ...  .`   ",
           /* line */ (const char *) "^C..  .CCCC",
           /* line */ (const char *) " ......CCCC",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "... C=C    ",
           /* line */ (const char *) "... C=C    ",
           /* line */ (const char *) "... C=C  ..",
           /* line */ (const char *) " .. C=C  ..",
           /* line */ (const char *) "C.CCC=C  ..",
           /* line */ (const char *) "....C=C  ..",
           /* line */ (const char *) ".C`.C=C  ..",
           /* line */ (const char *) ".CC.....   ",
           /* line */ (const char *) ".CCCCCC. ..",
           /* line */ (const char *) "      `==..",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     . ....",
           /* line */ (const char *) " m.........",
           /* line */ (const char *) " `.`.  ....",
           /* line */ (const char *) "  ```  ... ",
           /* line */ (const char *) "  CCC  ``..",
           /* line */ (const char *) " ....   .`.",
           /* line */ (const char *) " ....   ...",
           /* line */ (const char *) " ..$.  C=C ",
           /* line */ (const char *) " $...  C=C ",
           /* line */ (const char *) "^....  C=C ",
           /* line */ (const char *) "  ....m... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "... .CCm   ",
           /* line */ (const char *) "m.. .... .$",
           /* line */ (const char *) " .   .   ..",
           /* line */ (const char *) "...... ....",
           /* line */ (const char *) "...... ...m",
           /* line */ (const char *) "...... .CCC",
           /* line */ (const char *) "...... .===",
           /* line */ (const char *) "CCC CC  CCC",
           /* line */ (const char *) "... .```...",
           /* line */ (const char *) "..$ .......",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "     C=C    ",
           /* line */ (const char *) "     C=C    ",
           /* line */ (const char *) " $CC``=C...^",
           /* line */ (const char *) " .CCC`..... ",
           /* line */ (const char *) " .CC``..... ",
           /* line */ (const char *) "  CCC       ",
           /* line */ (const char *) "  CC ...... ",
           /* line */ (const char *) "  CC .    . ",
           /* line */ (const char *) "^....... .. ",
           /* line */ (const char *) "         $. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ....    ..",
           /* line */ (const char *) " .  .     .",
           /* line */ (const char *) " .  ....CC.",
           /* line */ (const char *) " .  .  .   ",
           /* line */ (const char *) " .  .  .   ",
           /* line */ (const char *) " .  .  .   ",
           /* line */ (const char *) " .  ..``   ",
           /* line */ (const char *) " .  ...`   ",
           /* line */ (const char *) "^.......^  ",
           /* line */ (const char *) " .......   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "..~~ .     ",
           /* line */ (const char *) "...~ .     ",
           /* line */ (const char *) ".... ..CC. ",
           /* line */ (const char *) ".... .   . ",
           /* line */ (const char *) " .   .   . ",
           /* line */ (const char *) ".... .   . ",
           /* line */ (const char *) ".C`. .   . ",
           /* line */ (const char *) ".CC..... . ",
           /* line */ (const char *) ".CCCCCCm . ",
           /* line */ (const char *) "       ^ ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .......~~ ",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) " ~~~...... ",
           /* line */ (const char *) "        `. ",
           /* line */ (const char *) " ....   ``^",
           /* line */ (const char *) " ....   `  ",
           /* line */ (const char *) " ..$.   C  ",
           /* line */ (const char *) " $...   C  ",
           /* line */ (const char *) "^....   C  ",
           /* line */ (const char *) "    .m...  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) "..`.....   ",
           /* line */ (const char *) "....`....  ",
           /* line */ (const char *) ".........  ",
           /* line */ (const char *) " ...C=C..  ",
           /* line */ (const char *) " ...C=C.   ",
           /* line */ (const char *) "    C=C    ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "    |.|    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) " $CC``.....",
           /* line */ (const char *) " .CC`......",
           /* line */ (const char *) " .CC`..C...",
           /* line */ (const char *) "      .CC..",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "^.......   ",
           /* line */ (const char *) "  ......   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .    CC..",
           /* line */ (const char *) "  .    C ..",
           /* line */ (const char *) "  ....=CC..",
           /* line */ (const char *) "     C=CC..",
           /* line */ (const char *) " ... C=CC..",
           /* line */ (const char *) " ... C=CC..",
           /* line */ (const char *) " ... C.....",
           /* line */ (const char *) "   CCC.....",
           /* line */ (const char *) "^.    .....",
           /* line */ (const char *) " ...$......",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   C=C `.` ",
           /* line */ (const char *) "   C=C  `  ",
           /* line */ (const char *) "   C=C  s  ",
           /* line */ (const char *) " ..```.``  ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   $`...   ",
           /* line */ (const char *) "   ``...   ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  .    ..  ",
           /* line */ (const char *) " ...   ... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...   ... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "     .  ...^",
           /* line */ (const char *) "     .   .  ",
           /* line */ (const char *) "     .....  ",
           /* line */ (const char *) "    ......  ",
           /* line */ (const char *) "    ....... ",
           /* line */ (const char *) "    `...... ",
           /* line */ (const char *) "^.````..... ",
           /* line */ (const char *) "       .... ",
           /* line */ (const char *) "        ... ",
           /* line */ (const char *) "         ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  .  t     ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "    . .    ",
           /* line */ (const char *) "    . .  . ",
           /* line */ (const char *) "    . .  ..",
           /* line */ (const char *) "    .......",
           /* line */ (const char *) "      .....",
           /* line */ (const char *) "  $````....",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " $``..     ",
           /* line */ (const char *) " ``...     ",
           /* line */ (const char *) " `........ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "     ...`. ",
           /* line */ (const char *) "     .....^",
           /* line */ (const char *) "     ..`.. ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "    ...``   ",
           /* line */ (const char *) "    ....`   ",
           /* line */ (const char *) "^.m........^",
           /* line */ (const char *) "    .`..    ",
           /* line */ (const char *) "    ....    ",
           /* line */ (const char *) " CCCC..`.   ",
           /* line */ (const char *) " C.|.....   ",
           /* line */ (const char *) " C......    ",
           /* line */ (const char *) " C.|..`$    ",
           /* line */ (const char *) " CCCCC      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .  ...",
           /* line */ (const char *) " ``........",
           /* line */ (const char *) " ` ........",
           /* line */ (const char *) " . ........",
           /* line */ (const char *) " ` ........",
           /* line */ (const char *) " ` ........",
           /* line */ (const char *) " .         ",
           /* line */ (const char *) " ..`...$   ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " .```. ... ",
           /* line */ (const char *) " CCCC. ... ",
           /* line */ (const char *) " CCCC..... ",
           /* line */ (const char *) " CCCC. .   ",
           /* line */ (const char *) "^.```  .   ",
           /* line */ (const char *) "      .....",
           /* line */ (const char *) "      .....",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) "  ......... ",
           /* line */ (const char *) "  . .    .. ",
           /* line */ (const char *) "  t....  .. ",
           /* line */ (const char *) "   `  .  .. ",
           /* line */ (const char *) "   `  .  .. ",
           /* line */ (const char *) "   `  .  .. ",
           /* line */ (const char *) "  `.  .....^",
           /* line */ (const char *) "  .   ..... ",
           /* line */ (const char *) "  $   ..... ",
           /* line */ (const char *) "  .CCC. ... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^      ",
           /* line */ (const char *) "^.m......... ",
           /* line */ (const char *) "      ...... ",
           /* line */ (const char *) "   ``sb..... ",
           /* line */ (const char *) "   $`  ..... ",
           /* line */ (const char *) "        .    ",
           /* line */ (const char *) "  ...   .    ",
           /* line */ (const char *) " .... ....`. ",
           /* line */ (const char *) " ........... ",
           /* line */ (const char *) " .``. ......^",
           /* line */ (const char *) "  ... ...... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   ...~~   ",
           /* line */ (const char *) "   ...~~   ",
           /* line */ (const char *) "  ~....~   ",
           /* line */ (const char *) "  ~~...... ",
           /* line */ (const char *) "  ~~~..... ",
           /* line */ (const char *) "  ~....... ",
           /* line */ (const char *) "  ~......~ ",
           /* line */ (const char *) "   ....~~~ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " `.... ~~~ ",
           /* line */ (const char *) " ~.    ~ ~ ",
           /* line */ (const char *) " ~. ~~~~ ~ ",
           /* line */ (const char *) " .. ..~~ . ",
           /* line */ (const char *) " .~ .... . ",
           /* line */ (const char *) " .~      ~ ",
           /* line */ (const char *) " .....~.~~ ",
           /* line */ (const char *) "  .....~~~ ",
           /* line */ (const char *) "  ~~...~~~ ",
           /* line */ (const char *) "   ~~..... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "   .  .    ",
           /* line */ (const char *) "   .t..    ",
           /* line */ (const char *) "   .  .    ",
           /* line */ (const char *) "   ......~ ",
           /* line */ (const char *) "   ~~....~ ",
           /* line */ (const char *) " ~~~~~.... ",
           /* line */ (const char *) "   ~~..... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "     .      ",
           /* line */ (const char *) "m`~~~~      ",
           /* line */ (const char *) "..`~~~      ",
           /* line */ (const char *) "...``~      ",
           /* line */ (const char *) "........... ",
           /* line */ (const char *) "...........^",
           /* line */ (const char *) "     ...... ",
           /* line */ (const char *) " ~~.......  ",
           /* line */ (const char *) " ~~.....~~  ",
           /* line */ (const char *) " .....~~~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "   ~`...    ",
           /* line */ (const char *) "   ``...    ",
           /* line */ (const char *) "   `....    ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) "  ........  ",
           /* line */ (const char *) "  ......... ",
           /* line */ (const char *) "   `.......^",
           /* line */ (const char *) "   ........ ",
           /* line */ (const char *) "      ..... ",
           /* line */ (const char *) "       ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "...........",
           /* line */ (const char *) ".    .    s",
           /* line */ (const char *) ". ~~..~~s..",
           /* line */ (const char *) ". ~...~~ ..",
           /* line */ (const char *) ". ~....~ ..",
           /* line */ (const char *) ". ~~...~ ..",
           /* line */ (const char *) ". ~~~..~ .$",
           /* line */ (const char *) ".     .   s",
           /* line */ (const char *) "........L..",
           /* line */ (const char *) "    ...LLL ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "     .      ",
           /* line */ (const char *) ".``  .      ",
           /* line */ (const char *) "..`  ..~~~  ",
           /* line */ (const char *) "...  ....~  ",
           /* line */ (const char *) "..~  ~.....^",
           /* line */ (const char *) "..~  ~~...  ",
           /* line */ (const char *) "..~  ~~~..  ",
           /* line */ (const char *) "... ....... ",
           /* line */ (const char *) "........... ",
           /* line */ (const char *) "........... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^        ",
           /* line */ (const char *) "   .      ..",
           /* line */ (const char *) "   .      ..",
           /* line */ (const char *) "   .....  ..",
           /* line */ (const char *) "   .   .  ..",
           /* line */ (const char *) "  ~~~~ .  ..",
           /* line */ (const char *) " ~~~~~ .  ..",
           /* line */ (const char *) "   ~~~......",
           /* line */ (const char *) "      ......",
           /* line */ (const char *) "^.~~~~~....~",
           /* line */ (const char *) "      ~~~~~~",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ~~~~~~   ",
           /* line */ (const char *) "  ~~~...   ",
           /* line */ (const char *) "  ~~~...   ",
           /* line */ (const char *) "   ~....   ",
           /* line */ (const char *) "..  ....   ",
           /* line */ (const char *) "...  .     ",
           /* line */ (const char *) ".... ....  ",
           /* line */ (const char *) ".... ..... ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) "....     . ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ~~  .     ",
           /* line */ (const char *) " ~~~..~~   ",
           /* line */ (const char *) " ~~...~~   ",
           /* line */ (const char *) "  ~....~   ",
           /* line */ (const char *) "  ~~....~~ ",
           /* line */ (const char *) " ~~~~..~~~ ",
           /* line */ (const char *) "  ~~~~ ~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "``.....~~~ ",
           /* line */ (const char *) "`........~ ",
           /* line */ (const char *) "`....~.... ",
           /* line */ (const char *) "...~~~~... ",
           /* line */ (const char *) "..~~~~~~.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "..``  .    ",
           /* line */ (const char *) "...`  .   ~",
           /* line */ (const char *) "....  ...~~",
           /* line */ (const char *) "..........~",
           /* line */ (const char *) "..........~",
           /* line */ (const char *) "......~~~~~",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " .~~~~     ",
           /* line */ (const char *) " ..~~~~    ",
           /* line */ (const char *) " ....~~~ .$",
           /* line */ (const char *) " .....~bs.$",
           /* line */ (const char *) " .....~~ .$",
           /* line */ (const char *) " ~.~~~~~   ",
           /* line */ (const char *) " ....~~~   ",
           /* line */ (const char *) " .... ~    ",
           /* line */ (const char *) " ....      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ~~~~~~~  ",
           /* line */ (const char *) "  ~~~.~~~^ ",
           /* line */ (const char *) "  ~~~.~.   ",
           /* line */ (const char *) "   ~~..    ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) " ....... . ",
           /* line */ (const char *) "^. ..... . ",
           /* line */ (const char *) "   ....... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ~~  .     ",
           /* line */ (const char *) " ~~~..~~   ",
           /* line */ (const char *) " ~~...~~   ",
           /* line */ (const char *) "  ~....~   ",
           /* line */ (const char *) "  ~~....~~ ",
           /* line */ (const char *) " ~~~~..~~~ ",
           /* line */ (const char *) "  ~~~~ ~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "``.....~~~ ",
           /* line */ (const char *) "`........~ ",
           /* line */ (const char *) "`....~.... ",
           /* line */ (const char *) " ..~~~~..  ",
           /* line */ (const char *) "  ~~~~~~   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .~~~~     ",
           /* line */ (const char *) " ..~~~~    ",
           /* line */ (const char *) " ....~~~ ..",
           /* line */ (const char *) " .....~~s.m",
           /* line */ (const char *) " .....~~ ..",
           /* line */ (const char *) " ~b~~~~~  s",
           /* line */ (const char *) "  s  ~~~ ..",
           /* line */ (const char *) "..... ~  .$",
           /* line */ (const char *) ".....   ...",
           /* line */ (const char *) ".....sb....",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ~~~.~~~.^",
           /* line */ (const char *) "  ~~~.~..  ",
           /* line */ (const char *) "  .~~....  ",
           /* line */ (const char *) "  ..... .  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^........~ ",
           /* line */ (const char *) "  .....~~~ ",
           /* line */ (const char *) "   ..~~~~~ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "...  .     ",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "........  .",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "  D    D   ",
           /* line */ (const char *) "..t.  .t.. ",
           /* line */ (const char *) "....  .... ",
           /* line */ (const char *) "..m.  ..$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " CCCC.CCCCC",
           /* line */ (const char *) "CC........C",
           /* line */ (const char *) "C.........C",
           /* line */ (const char *) "C.........C",
           /* line */ (const char *) "C........CC",
           /* line */ (const char *) "CC......CC ",
           /* line */ (const char *) " CCCCCCCC  ",
           /* line */ (const char *) "$.C....C...",
           /* line */ (const char *) ".tC.m..C...",
           /* line */ (const char *) "..C....C.$.",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) " .CCC..    ",
           /* line */ (const char *) " .CCC... ..",
           /* line */ (const char *) " .CCC...s.m",
           /* line */ (const char *) " ....... ..",
           /* line */ (const char *) " .b.....  s",
           /* line */ (const char *) "  s  ... ..",
           /* line */ (const char *) "..... .  .$",
           /* line */ (const char *) ".....   ...",
           /* line */ (const char *) ".....sb....",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ........^",
           /* line */ (const char *) "  $CCCCC.  ",
           /* line */ (const char *) "  tCCCCC.  ",
           /* line */ (const char *) "  .CCCCC.  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^.......C. ",
           /* line */ (const char *) "  .....CC. ",
           /* line */ (const char *) "   ....... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .  ..$",
           /* line */ (const char *) "     .  s  ",
           /* line */ (const char *) ".m. ....b  ",
           /* line */ (const char *) "... .....  ",
           /* line */ (const char *) "...C.....C ",
           /* line */ (const char *) "CCCCCCtCCC ",
           /* line */ (const char *) "C.......CC ",
           /* line */ (const char *) "C...... CC ",
           /* line */ (const char *) "C.....``C. ",
           /* line */ (const char *) "C.....``C. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     . m$. ",
           /* line */ (const char *) "     . $$. ",
           /* line */ (const char *) "     .   s ",
           /* line */ (const char *) "     ..... ",
           /* line */ (const char *) "     ..LL. ",
           /* line */ (const char *) ".... ...L. ",
           /* line */ (const char *) ".... ..... ",
           /* line */ (const char *) "C.C  .     ",
           /* line */ (const char *) "C``.`````  ",
           /* line */ (const char *) "CCCCCCCC   ",
           /* line */ (const char *) " C........$",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " C.C       ",
           /* line */ (const char *) " C.CCCCC   ",
           /* line */ (const char *) " C.....C   ",
           /* line */ (const char *) " CCCCC.C.. ",
           /* line */ (const char *) " CCCCCtC.. ",
           /* line */ (const char *) " CCCCC.C.. ",
           /* line */ (const char *) " CCCCC.... ",
           /* line */ (const char *) " CCCC......",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) " ..........",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ..... ....",
           /* line */ (const char *) " .....C....",
           /* line */ (const char *) " ..... .m..",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "~~. ...~~~ ",
           /* line */ (const char *) "~~......~~ ",
           /* line */ (const char *) "~........~ ",
           /* line */ (const char *) "CCC....... ",
           /* line */ (const char *) "  C.....CC ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "^........5 ",
           /* line */ (const char *) " 5.......5 ",
           /* line */ (const char *) " 5.m... .. ",
           /* line */ (const char *) " .. .....5 ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) " 5.......~~",
           /* line */ (const char *) " 5.......~~",
           /* line */ (const char *) " .......~~~",
           /* line */ (const char *) " 5.....~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .  .. ",
           /* line */ (const char *) "     .  ...",
           /* line */ (const char *) "m.C.....CC.",
           /* line */ (const char *) "..C........",
           /* line */ (const char *) "..C........",
           /* line */ (const char *) "..C........",
           /* line */ (const char *) ".CCCC. CCCC",
           /* line */ (const char *) ".C.... C...",
           /* line */ (const char *) ".C.... C...",
           /* line */ (const char *) ".......C.$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "m    ..... ",
           /* line */ (const char *) "...C ..... ",
           /* line */ (const char *) "...C...... ",
           /* line */ (const char *) "...C ..... ",
           /* line */ (const char *) "...C .....^",
           /* line */ (const char *) "  .  CCCCC ",
           /* line */ (const char *) "  . $CC... ",
           /* line */ (const char *) "  ........ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .  CCC   ",
           /* line */ (const char *) "  .....C   ",
           /* line */ (const char *) "     C.C   ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) " .... . .. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CC..... ",
           /* line */ (const char *) " .CC......^",
           /* line */ (const char *) " .CC...... ",
           /* line */ (const char *) " ..CC..... ",
           /* line */ (const char *) " ....C.... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "     .      ",
           /* line */ (const char *) " .....      ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " ...... CC  ",
           /* line */ (const char *) "   CCCC ..  ",
           /* line */ (const char *) "  CC... ..  ",
           /* line */ (const char *) " CCC... ..  ",
           /* line */ (const char *) " CCC.......^",
           /* line */ (const char *) "  CC....... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " m......   ",
           /* line */ (const char *) "  `......  ",
           /* line */ (const char *) "  ``...... ",
           /* line */ (const char *) " `.  ..... ",
           /* line */ (const char *) " `.`  CCC. ",
           /* line */ (const char *) "   .` C....",
           /* line */ (const char *) "   $  C....",
           /* line */ (const char *) "      C....",
           /* line */ (const char *) "       ....",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   .CCC..  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "   .....~  ",
           /* line */ (const char *) "   ....~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .....^",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "    `..... ",
           /* line */ (const char *) "    `..... ",
           /* line */ (const char *) "|M..s`.... ",
           /* line */ (const char *) ".$$.   ... ",
           /* line */ (const char *) "|..|       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) "  .         ",
           /* line */ (const char *) "  .  CCCCC. ",
           /* line */ (const char *) "  .....CCC$ ",
           /* line */ (const char *) "    CC.CCC. ",
           /* line */ (const char *) " .$ CC.     ",
           /* line */ (const char *) " ``   .     ",
           /* line */ (const char *) " `.   ....  ",
           /* line */ (const char *) " ..CCC....  ",
           /* line */ (const char *) " ..C.......^",
           /* line */ (const char *) " .........  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   `..C... ",
           /* line */ (const char *) "  ``..C... ",
           /* line */ (const char *) " .....C..$ ",
           /* line */ (const char *) " .....CC.. ",
           /* line */ (const char *) " .....CCC. ",
           /* line */ (const char *) " CCCCCCCC. ",
           /* line */ (const char *) " ....CC.C.^",
           /* line */ (const char *) " .m......  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   `....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  C.....   ",
           /* line */ (const char *) " CCC       ",
           /* line */ (const char *) "  C        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   C....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "... ....   ",
           /* line */ (const char *) "...  ...   ",
           /* line */ (const char *) "...   .C.. ",
           /* line */ (const char *) ".......C.. ",
           /* line */ (const char *) "......     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .   $... ",
           /* line */ (const char *) "  .      C ",
           /* line */ (const char *) "  .....  C ",
           /* line */ (const char *) "      .  C ",
           /* line */ (const char *) "$..   .  . ",
           /* line */ (const char *) "  .   .  . ",
           /* line */ (const char *) ".........C ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) " .....C    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) ".C....     ",
           /* line */ (const char *) "......     ",
           /* line */ (const char *) ".....C     ",
           /* line */ (const char *) ".....C     ",
           /* line */ (const char *) "CCCtCC     ",
           /* line */ (const char *) "....C..    ",
           /* line */ (const char *) "....C...   ",
           /* line */ (const char *) "....C...   ",
           /* line */ (const char *) "....C..    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "^..C....CC.$",
           /* line */ (const char *) "  .C....CC..",
           /* line */ (const char *) "  .C....CC C",
           /* line */ (const char *) "  CCCtCCCC C",
           /* line */ (const char *) " CCCC....C .",
           /* line */ (const char *) " .......CC .",
           /* line */ (const char *) " ...........",
           /* line */ (const char *) " ...........",
           /* line */ (const char *) " .......    ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   CC.CC   ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "    .L.    ",
           /* line */ (const char *) "    .L.    ",
           /* line */ (const char *) "    .L.    ",
           /* line */ (const char *) "    .L.    ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "   |...|   ",
           /* line */ (const char *) "    ...    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " LLLL....  ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " LL....... ",
           /* line */ (const char *) " LL....... ",
           /* line */ (const char *) "  L.......^",
           /* line */ (const char *) "    L..    ",
           /* line */ (const char *) "    LL.    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .     .  ",
           /* line */ (const char *) "  .     .  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "     C.C   ",
           /* line */ (const char *) "     C.C   ",
           /* line */ (const char *) "     C.C   ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ......LL ",
           /* line */ (const char *) "   ...LLLL ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    ..     ",
           /* line */ (const char *) "   ...     ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " L......   ",
           /* line */ (const char *) " LL.....   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   ....    ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) "..........^",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   tBtBt   ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   .....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .......B. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   .....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .     .  ",
           /* line */ (const char *) "  .     .  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "  ..  .    ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) ".........B ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) " .B...     ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "    .....  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) "   .~~.    ",
           /* line */ (const char *) "   .~~.    ",
           /* line */ (const char *) "   ....^   ",
           /* line */ (const char *) "   ....    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   .BtB.   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " B.......B ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  B.....B  ",
           /* line */ (const char *) "   .....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    B.B..  ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "      . .  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) " ....B.B.. ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "       ... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ...B.     ",
           /* line */ (const char *) " .....B    ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "   CB.BC   ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "   CB.BC   ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "   CB.BC   ",
           /* line */ (const char *) "  .......^ ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ...B..... ",
           /* line */ (const char *) " .....~~~~ ",
           /* line */ (const char *) " ......~~~ ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   ...=... ",
           /* line */ (const char *) "   CCC=CCC ",
           /* line */ (const char *) "   CCC=CCC ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "      .     ",
           /* line */ (const char *) "    $....   ",
           /* line */ (const char *) "    .....   ",
           /* line */ (const char *) "^...........",
           /* line */ (const char *) " CCC...$.CCC",
           /* line */ (const char *) " CC......CCC",
           /* line */ (const char *) " CC.....CC..",
           /* line */ (const char *) " CC......C.$",
           /* line */ (const char *) " CCCC...CC..",
           /* line */ (const char *) " CCCCC..CCC$",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^....C=C..^",
           /* line */ (const char *) " ....C=C.. ",
           /* line */ (const char *) "   ..C=C.. ",
           /* line */ (const char *) "   ..C.C.. ",
           /* line */ (const char *) "   C. . .$ ",
           /* line */ (const char *) "   C. .    ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "     C.C   ",
           /* line */ (const char *) "  CCCC.C   ",
           /* line */ (const char *) " CC....CCC ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " CC...CCCC ",
           /* line */ (const char *) "   C....C  ",
           /* line */ (const char *) "      C.C  ",
           /* line */ (const char *) "      C.C  ",
           /* line */ (const char *) "      C.C  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     CC.C  ",
           /* line */ (const char *) "  CC....CC ",
           /* line */ (const char *) "  C......C ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) "  C......C ",
           /* line */ (const char *) "  CC....CC ",
           /* line */ (const char *) "  ...C.C   ",
           /* line */ (const char *) "  ...C.C   ",
           /* line */ (const char *) "    .C.C   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "    C.C   .",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) " ..b.......",
           /* line */ (const char *) "    .......",
           /* line */ (const char *) "    C..... ",
           /* line */ (const char *) "       C.C ",
           /* line */ (const char *) "       C.C ",
           /* line */ (const char *) "       C.C ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    C.....^",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "  $...C    ",
           /* line */ (const char *) "  ..CCC    ",
           /* line */ (const char *) "^...CCC    ",
           /* line */ (const char *) "  CCC.C    ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ...... .. ",
           /* line */ (const char *) " ...CC. .. ",
           /* line */ (const char *) " ...CC. .. ",
           /* line */ (const char *) "^......s..^",
           /* line */ (const char *) " ...... .. ",
           /* line */ (const char *) " CCC...    ",
           /* line */ (const char *) " C$C.....  ",
           /* line */ (const char *) " CCC.....  ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   $....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "^..........",
           /* line */ (const char *) "   ...$.   ",
           /* line */ (const char *) "  ...... $$",
           /* line */ (const char *) "  ..CC.. CC",
           /* line */ (const char *) "  ..CC.. ..",
           /* line */ (const char *) "  ...... ..",
           /* line */ (const char *) "   .....sm.",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) " .$.......  ",
           /* line */ (const char *) "^...CCCCCC.^",
           /* line */ (const char *) " ...=====   ",
           /* line */ (const char *) " ...CCCC    ",
           /* line */ (const char *) " ......b .$ ",
           /* line */ (const char *) " ......bs.. ",
           /* line */ (const char *) " ......b .$ ",
           /* line */ (const char *) "     ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) "   ...$.   ",
           /* line */ (const char *) "  ...... . ",
           /* line */ (const char *) "  ...... . ",
           /* line */ (const char *) "  ...... . ",
           /* line */ (const char *) "    .... . ",
           /* line */ (const char *) " ........m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ... .     ",
           /* line */ (const char *) " ... . ..  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  b......  ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ..... .m..",
           /* line */ (const char *) "   ...s....",
           /* line */ (const char *) "..s... ..$.",
           /* line */ (const char *) ".  ...   s ",
           /* line */ (const char *) ".   .    . ",
           /* line */ (const char *) "$...s..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "     . ..  ",
           /* line */ (const char *) " $....b..  ",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) "  ...  ..  ",
           /* line */ (const char *) "  ..$   .  ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ....  ... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...L.L... ",
           /* line */ (const char *) "^...L.L... ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ...b..... ",
           /* line */ (const char *) " ...... .$ ",
           /* line */ (const char *) " ...... .. ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ...D...~  ",
           /* line */ (const char *) "     ...~~ ",
           /* line */ (const char *) " . ......~ ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " ..CC.C..  ",
           /* line */ (const char *) " ...C.C..  ",
           /* line */ (const char *) " ...C.CCC.^",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) " ~~~|.|~~~ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "    ...m..  ",
           /* line */ (const char *) "    ......  ",
           /* line */ (const char *) "   .. . ..  ",
           /* line */ (const char *) "^..........^",
           /* line */ (const char *) "   ...b...  ",
           /* line */ (const char *) "  LL......  ",
           /* line */ (const char *) "  $LL...... ",
           /* line */ (const char *) "  ..L...... ",
           /* line */ (const char *) "   . .LL... ",
           /* line */ (const char *) "     ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   B...xx  ",
           /* line */ (const char *) "   ....x..^",
           /* line */ (const char *) " ......s.$ ",
           /* line */ (const char *) "  ~....x.. ",
           /* line */ (const char *) "  ~~...xx  ",
           /* line */ (const char *) "    ~....  ",
           /* line */ (const char *) "     $  .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ~~   .   ",
           /* line */ (const char *) "  ~~....   ",
           /* line */ (const char *) "   ~~~~.   ",
           /* line */ (const char *) "^...~.~..  ",
           /* line */ (const char *) "   .~~~~.  ",
           /* line */ (const char *) "  ~...~~~  ",
           /* line */ (const char *) "   ~~..    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .$ ....CC ",
           /* line */ (const char *) " . .....CC ",
           /* line */ (const char *) " .....~B.C ",
           /* line */ (const char *) " ...~~~~.. ",
           /* line */ (const char *) "^..~~.~~~  ",
           /* line */ (const char *) " ...~~~~~.^",
           /* line */ (const char *) " ...~~.... ",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) " ~~....~~~ ",
           /* line */ (const char *) " ~~~~..~   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "     .  ... ",
           /* line */ (const char *) "    ~.. ... ",
           /* line */ (const char *) "    ~.. ... ",
           /* line */ (const char *) "    ... ..  ",
           /* line */ (const char *) "^.....b ...^",
           /* line */ (const char *) "   ....  .  ",
           /* line */ (const char *) "   ~~.....  ",
           /* line */ (const char *) "    ~~....  ",
           /* line */ (const char *) "    ~~....  ",
           /* line */ (const char *) "   ~ ..~    ",
           /* line */ (const char *) "     ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "   ...B... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "   ...B... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "    ~~~..~ ",
           /* line */ (const char *) "    ~~~~.~ ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ...   ..  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "   .B.B..  ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "   .B....  ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  g....... ",
           /* line */ (const char *) "  .....  . ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....... . ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......  . ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .$ .....~ ",
           /* line */ (const char *) " .     .~~ ",
           /* line */ (const char *) " .....~..~ ",
           /* line */ (const char *) " ...~~~~.. ",
           /* line */ (const char *) "^..~~~~~~  ",
           /* line */ (const char *) " .~~~.~~~.^",
           /* line */ (const char *) " ..~~~~~.. ",
           /* line */ (const char *) " ~......~. ",
           /* line */ (const char *) " ~~~...~~~ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    B.B    ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) "   .m..... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   B.....$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   B...... ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       m   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "      ...  ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "  B....bb. ",
           /* line */ (const char *) " ......bm.^",
           /* line */ (const char *) "  B....bb. ",
           /* line */ (const char *) "     ....  ",
           /* line */ (const char *) "     ...   ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "     B.B   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     . ....",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) "    .......",
           /* line */ (const char *) "    B......",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "       B.B ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    B.B ~~~",
           /* line */ (const char *) "     .   ~~",
           /* line */ (const char *) "  $...^  ~~",
           /* line */ (const char *) "  ..~~~~  ~",
           /* line */ (const char *) "^..~~.~~~ ~",
           /* line */ (const char *) "  ~~~~~~~~~",
           /* line */ (const char *) "    s     ~",
           /* line */ (const char *) "   .....  ~",
           /* line */ (const char *) "   .....s.~",
           /* line */ (const char *) "   $.m.$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "   . t .    ",
           /* line */ (const char *) "  .. . ...  ",
           /* line */ (const char *) "^... . ....^",
           /* line */ (const char *) "  .. . ...  ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) "  ......... ",
           /* line */ (const char *) "    ......m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " $ ....... ",
           /* line */ (const char *) " . .....   ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "      B.B  ",
           /* line */ (const char *) "    $....  ",
           /* line */ (const char *) "  B......B ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "  B......B ",
           /* line */ (const char *) "   ..L.L.  ",
           /* line */ (const char *) "   .LLLLL  ",
           /* line */ (const char *) " $s....L.. ",
           /* line */ (const char *) " m       . ",
           /* line */ (const char *) " .......s. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  $....... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "  $......  ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " $m  .     ",
           /* line */ (const char *) " ..  .     ",
           /* line */ (const char *) "  s  ...$  ",
           /* line */ (const char *) "  ....  .  ",
           /* line */ (const char *) "  ..~~~..  ",
           /* line */ (const char *) "^..~~~~... ",
           /* line */ (const char *) "  ~~~~.... ",
           /* line */ (const char *) "   ~~..... ",
           /* line */ (const char *) "     ..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "  ........  ",
           /* line */ (const char *) "^..........^",
           /* line */ (const char *) "  ........  ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .......... ",
           /* line */ (const char *) " .b........ ",
           /* line */ (const char *) "  bb....... ",
           /* line */ (const char *) "    ......m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "   ...t.   ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " $ ....... ",
           /* line */ (const char *) " . .....   ",
           /* line */ (const char *) " ```....   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "      B.B  ",
           /* line */ (const char *) "    $..... ",
           /* line */ (const char *) "  B....... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "  B....... ",
           /* line */ (const char *) "   ..LLL.. ",
           /* line */ (const char *) "   .LLL... ",
           /* line */ (const char *) " $s....... ",
           /* line */ (const char *) " m       . ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  $......  ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  $.b....  ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " $m  .     ",
           /* line */ (const char *) " s   .     ",
           /* line */ (const char *) " ..  ...$  ",
           /* line */ (const char *) "  ....  .  ",
           /* line */ (const char *) "  ..~~~ .  ",
           /* line */ (const char *) "^..~~~~ .  ",
           /* line */ (const char *) "  ~~~~. .  ",
           /* line */ (const char *) "   ~~.....^",
           /* line */ (const char *) "     ...   ",
           /* line */ (const char *) "     ...   ",
           /* line */ (const char *) "     ...   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   B.....$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ~~~~...~~ ",
           /* line */ (const char *) " ~~~.....~ ",
           /* line */ (const char *) " ~........ ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " ........~ ",
           /* line */ (const char *) " ......~~~ ",
           /* line */ (const char *) " .....~~~~ ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "  ....~~~~ ",
           /* line */ (const char *) "  ......~~ ",
           /* line */ (const char *) " C........ ",
           /* line */ (const char *) "^C........^",
           /* line */ (const char *) " C........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ~.....~~ ",
           /* line */ (const char *) "  ~~...~~  ",
           /* line */ (const char *) "      m    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ..  .     ",
           /* line */ (const char *) " .$  .     ",
           /* line */ (const char *) " .  .t.....",
           /* line */ (const char *) " s .~~.....",
           /* line */ (const char *) "^..~~~~.. .",
           /* line */ (const char *) "  ~~~~~....",
           /* line */ (const char *) "  ~~~~~....",
           /* line */ (const char *) "       ....",
           /* line */ (const char *) "       ....",
           /* line */ (const char *) "       ....",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ....~~~~~ ",
           /* line */ (const char *) " ......~~~ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ~~~...... ",
           /* line */ (const char *) " ~~~~~.... ",
           /* line */ (const char *) "       ... ",
           /* line */ (const char *) "       ... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " .LL..|.|. ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " LL......| ",
           /* line */ (const char *) "^L........^",
           /* line */ (const char *) " LL......| ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " LLLL....L ",
           /* line */ (const char *) "  LLLL..LL ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ........~ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .....B.B. ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " .......B.^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "       ..  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    |t|... ",
           /* line */ (const char *) "   ........",
           /* line */ (const char *) "   .~~.....",
           /* line */ (const char *) "^..~~~~....",
           /* line */ (const char *) "  ~~~~~....",
           /* line */ (const char *) "  ~~~~~....",
           /* line */ (const char *) "   ~~~~~...",
           /* line */ (const char *) "    ~~~~~.~",
           /* line */ (const char *) "      ~~~~~",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     m ... ",
           /* line */ (const char *) "     . ... ",
           /* line */ (const char *) " ^........^",
           /* line */ (const char *) "  .. .L. . ",
           /* line */ (const char *) "  ...LLL.. ",
           /* line */ (const char *) "  ..LLL. . ",
           /* line */ (const char *) "  LLL..... ",
           /* line */ (const char *) "  LL..b... ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....m   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "   LL..... ",
           /* line */ (const char *) "  LL...... ",
           /* line */ (const char *) "  L....... ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     . ... ",
           /* line */ (const char *) "     . ... ",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ..m....  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ~~~~~~~~~ ",
           /* line */ (const char *) " ~~.....~~ ",
           /* line */ (const char *) "^~.......~ ",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) " ~.....~~~ ",
           /* line */ (const char *) " ~~...~~~~ ",
           /* line */ (const char *) " ~~....~~~ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " CCC...CCC ",
           /* line */ (const char *) " CC....CCC ",
           /* line */ (const char *) " CC.....CC ",
           /* line */ (const char *) "  C.b.b.C  ",
           /* line */ (const char *) "  C.....C  ",
           /* line */ (const char *) "  C.....C  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "^C........^",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " CCCCC.CCC ",
           /* line */ (const char *) " C......CC ",
           /* line */ (const char *) " C.......C ",
           /* line */ (const char *) "^..b.....C^",
           /* line */ (const char *) " C.......C ",
           /* line */ (const char *) " CC......C ",
           /* line */ (const char *) " CCCCCC.CC ",
           /* line */ (const char *) " CCCCC.... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) " C........ ",
           /* line */ (const char *) " CCCCCCCC. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " C.CCCCCC. ",
           /* line */ (const char *) " C.CCC.CC. ",
           /* line */ (const char *) " CCCC .    ",
           /* line */ (const char *) "  CC  .... ",
           /* line */ (const char *) "  $   . .. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     . ... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "^..C..CC.. ",
           /* line */ (const char *) " ..C...C...",
           /* line */ (const char *) " ..CC......",
           /* line */ (const char *) " ..CCCCC...",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    ~~~~~~ ",
           /* line */ (const char *) "   .....~~ ",
           /* line */ (const char *) "^........~ ",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) " ~.....~~~ ",
           /* line */ (const char *) " ~~...~~~~ ",
           /* line */ (const char *) " ~~~~~~~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " ~~~...~~~ ",
           /* line */ (const char *) " ~~....~~~ ",
           /* line */ (const char *) " ~~.....~~ ",
           /* line */ (const char *) "  ~.b.b.~  ",
           /* line */ (const char *) "  ~.....~  ",
           /* line */ (const char *) "  ~.....~  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "^~........^",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " ~~~~~.~~~ ",
           /* line */ (const char *) " ~......~~ ",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) "^..b.....~^",
           /* line */ (const char *) " ~.......~ ",
           /* line */ (const char *) " ~~......~ ",
           /* line */ (const char *) " ~~~~~~.~~ ",
           /* line */ (const char *) " ~~~~~.... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) "  .         ",
           /* line */ (const char *) " ~........  ",
           /* line */ (const char *) " ~~~~~~~~.  ",
           /* line */ (const char *) "^..........^",
           /* line */ (const char *) " ~.~~~~~~.. ",
           /* line */ (const char *) " ~.~~~.~~.. ",
           /* line */ (const char *) " ~~~~ ..... ",
           /* line */ (const char *) "  ~~  ....  ",
           /* line */ (const char *) "  $   . ..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "^..~..~~.. ",
           /* line */ (const char *) " ..~...~...",
           /* line */ (const char *) " ..~~......",
           /* line */ (const char *) " ..~~~~~...",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) "  .........",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    ~~~~~~ ",
           /* line */ (const char *) "   .....~~ ",
           /* line */ (const char *) "^. ......~ ",
           /* line */ (const char *) " ~ ......~ ",
           /* line */ (const char *) " ~  ...~~~ ",
           /* line */ (const char *) " ~  ..~~~~ ",
           /* line */ (const char *) " ~~~~~~~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ..t.|.... ",
           /* line */ (const char *) "^..|gL.|.. ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " .|LL$LL|.^",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " ..|.Lg|.. ",
           /* line */ (const char *) "  ...|...  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " ...L.L... ",
           /* line */ (const char *) " ...L.L...^",
           /* line */ (const char *) " LLLLLLLLL ",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) " ..m.....$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "  ......LL ",
           /* line */ (const char *) " m.......L ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ...Lg.... ",
           /* line */ (const char *) " ...LLLL..^",
           /* line */ (const char *) " L...L..   ",
           /* line */ (const char *) " LL....  $ ",
           /* line */ (const char *) "      s  L ",
           /* line */ (const char *) " $.......m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ........m ",
           /* line */ (const char *) " LLLL...b. ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ...LLLL.. ",
           /* line */ (const char *) " ......L.. ",
           /* line */ (const char *) " ...m..L..^",
           /* line */ (const char *) "  .......  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ...L...bb ",
           /* line */ (const char *) " .b.L..... ",
           /* line */ (const char *) " ...L.LLLL ",
           /* line */ (const char *) " LLLL.....^",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) "^....L.... ",
           /* line */ (const char *) " $...LL.m. ",
           /* line */ (const char *) "  .......  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^..|gL.... ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " ....$LL|.^",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " ...LLg|.. ",
           /* line */ (const char *) "  ...|...  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " ...|.|... ",
           /* line */ (const char *) "^...L.L... ",
           /* line */ (const char *) " ...L.L... ",
           /* line */ (const char *) " LLLL.LLLL ",
           /* line */ (const char *) " .LLL.LLL.^",
           /* line */ (const char *) " ..m.....$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ......LL ",
           /* line */ (const char *) " ........L ",
           /* line */ (const char *) " |..L..... ",
           /* line */ (const char *) "^...Lg.... ",
           /* line */ (const char *) " |..LLLL..^",
           /* line */ (const char *) " L...L..   ",
           /* line */ (const char *) " LL....  $ ",
           /* line */ (const char *) " LLLL..  L ",
           /* line */ (const char *) " .LLLLL..m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...|.|..$ ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " |.LLL..b. ",
           /* line */ (const char *) "^...LLL... ",
           /* line */ (const char *) " |..LLLL.. ",
           /* line */ (const char *) " .....LL..^",
           /* line */ (const char *) " ...m..L.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ...L..LL. ",
           /* line */ (const char *) " ..LL.LLLL ",
           /* line */ (const char *) " LLLL...LL ",
           /* line */ (const char *) "^...LLL..L ",
           /* line */ (const char *) " ....L....^",
           /* line */ (const char *) " $...LL.m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^.|LL.LL|. ",
           /* line */ (const char *) " LLLL.LLL. ",
           /* line */ (const char *) " .LLLMLLL.^",
           /* line */ (const char *) " .LLL.LLLL ",
           /* line */ (const char *) " .|LL.LL|. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g..C.C... ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " ..CC.CCC. ",
           /* line */ (const char *) "^..CC.CC.. ",
           /* line */ (const char *) " CCCC.CCC. ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " CC....... ",
           /* line */ (const char *) " .C        ",
           /* line */ (const char *) " .......$  ",
           /* line */ (const char *) "  .......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "  .......   ",
           /* line */ (const char *) "  |..C....| ",
           /* line */ (const char *) "^....Cg....^",
           /* line */ (const char *) "  |..CCC..| ",
           /* line */ (const char *) "    ..CC..  ",
           /* line */ (const char *) " $$  ... s  ",
           /* line */ (const char *) " s       .  ",
           /* line */ (const char *) " ..... .sL  ",
           /* line */ (const char *) " ..m ... .  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "  .....L.. ",
           /* line */ (const char *) " ...L.LLL. ",
           /* line */ (const char *) " ...L..LL. ",
           /* line */ (const char *) " ...LLLL.. ",
           /* line */ (const char *) " s ...LL.  ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " ..$   g.g ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ..t.|.... ",
           /* line */ (const char *) "^...gC.... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " .|CC$CC|.^",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ....Cg... ",
           /* line */ (const char *) "  ...|...  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " ...C.C... ",
           /* line */ (const char *) " ...C.C...^",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " ..m.....$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ........m ",
           /* line */ (const char *) " CCCC...b. ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ......C.. ",
           /* line */ (const char *) " ...m..C..^",
           /* line */ (const char *) "  .....C.  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ...C...bb ",
           /* line */ (const char *) " .b.C..... ",
           /* line */ (const char *) " ...C.CCCC ",
           /* line */ (const char *) " CCCC.....^",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "^....C.... ",
           /* line */ (const char *) " $...CC.m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^..|gC.... ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) " ....$CC|.^",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) " ...CCg|.. ",
           /* line */ (const char *) "  ...|...  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " ...|.|... ",
           /* line */ (const char *) "^...C.C... ",
           /* line */ (const char *) " ...C.C... ",
           /* line */ (const char *) " CCCC.CCCC ",
           /* line */ (const char *) " .CCC.CCC.^",
           /* line */ (const char *) " ..m.....$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ......CC ",
           /* line */ (const char *) " ........C ",
           /* line */ (const char *) " |..C..... ",
           /* line */ (const char *) "^...Cg.... ",
           /* line */ (const char *) " |..CCCC..^",
           /* line */ (const char *) " C...C..   ",
           /* line */ (const char *) " CC....  $ ",
           /* line */ (const char *) " CCCC..  C ",
           /* line */ (const char *) " .CCCCC..m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...|.|..$ ",
           /* line */ (const char *) " CCC...... ",
           /* line */ (const char *) " |.CCC..b. ",
           /* line */ (const char *) "^...CCC... ",
           /* line */ (const char *) " |..CCCC.. ",
           /* line */ (const char *) " .....CC..^",
           /* line */ (const char *) " ...m..C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...C..CC. ",
           /* line */ (const char *) " ..CC.CCCC ",
           /* line */ (const char *) " CCCC...CC ",
           /* line */ (const char *) "^...CCC..C ",
           /* line */ (const char *) " ....C....^",
           /* line */ (const char *) " $...CC.m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^.|CC.CC|. ",
           /* line */ (const char *) " CCCC.CCC. ",
           /* line */ (const char *) " .CCCMCCC.^",
           /* line */ (const char *) " .CCC.CCCC ",
           /* line */ (const char *) " .|CC.CC|. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g..C.C... ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " ..CC.CCC. ",
           /* line */ (const char *) "^..CC.CC.. ",
           /* line */ (const char *) " CCCC.CCC. ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " CC....... ",
           /* line */ (const char *) " .C        ",
           /* line */ (const char *) " .......$  ",
           /* line */ (const char *) "  .......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ....|...  ",
           /* line */ (const char *) "^..|g..|.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .|..$..|.^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..|..g|.. ",
           /* line */ (const char *) "  ...|...  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ... ...  ",
           /* line */ (const char *) " .... .... ",
           /* line */ (const char *) "^.... .... ",
           /* line */ (const char *) " ....t.... ",
           /* line */ (const char *) " .... .... ",
           /* line */ (const char *) " .... ....^",
           /* line */ (const char *) " ..m. ...$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ... ....m ",
           /* line */ (const char *) " ... ...b. ",
           /* line */ (const char *) " ... .....^",
           /* line */ (const char *) " ...    .. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " ...m..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .......bb ",
           /* line */ (const char *) " .b.. .... ",
           /* line */ (const char *) "^.... .... ",
           /* line */ (const char *) "      .... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " $......m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "^..|g..... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....$..|.^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .....g|.. ",
           /* line */ (const char *) "  ...|...  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " ...|.|... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...C.C... ",
           /* line */ (const char *) " ...CtC... ",
           /* line */ (const char *) " ...C.C... ",
           /* line */ (const char *) "  .m.....$ ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " ......  . ",
           /* line */ (const char *) " |...... . ",
           /* line */ (const char *) " ....g.... ",
           /* line */ (const char *) " |........^",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " ......  $ ",
           /* line */ (const char *) " ......  . ",
           /* line */ (const char *) " ........m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...|.|..$ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " |.. . .b. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " |.. . ... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ...m..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " ....... .^",
           /* line */ (const char *) " ...... .. ",
           /* line */ (const char *) " ..... ... ",
           /* line */ (const char *) " .... .... ",
           /* line */ (const char *) "^... ..... ",
           /* line */ (const char *) " $......m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^.|.....|. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....M....^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .|.....|. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g..C.C... ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " ..CC.CCC. ",
           /* line */ (const char *) "^..CCtCC.. ",
           /* line */ (const char *) " CCCC.CCC. ",
           /* line */ (const char *) " ...C.CC..^",
           /* line */ (const char *) " CC....... ",
           /* line */ (const char *) " .C        ",
           /* line */ (const char *) " .......$  ",
           /* line */ (const char *) "  .......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " |..C....| ",
           /* line */ (const char *) "^...Cg....^",
           /* line */ (const char *) " |..CCC..| ",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "  .....  . ",
           /* line */ (const char *) " ....... . ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " s ......  ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " ..$   g.g ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C....C.. ",
           /* line */ (const char *) "^.C..$.C.T ",
           /* line */ (const char *) " .C....C.. ",
           /* line */ (const char *) " .CCCCCC.. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..===.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " T.....C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) ".....C...G ",
           /* line */ (const char *) ".....C.... ",
           /* line */ (const char *) "...CCC.... ",
           /* line */ (const char *) "...C....T. ",
           /* line */ (const char *) "...C.$.... ",
           /* line */ (const char *) "...C...... ",
           /* line */ (const char *) "...CCCCC.. ",
           /* line */ (const char *) ".....G.C.. ",
           /* line */ (const char *) "...T...C.. ",
           /* line */ (const char *) ".......C..^",
           /* line */ (const char *) ".......C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ........G ",
           /* line */ (const char *) " ....$.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) "^.....C... ",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " ....=C=.. ",
           /* line */ (const char *) " .T..CCC.. ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " G....C...^",
           /* line */ (const char *) " .....C... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .C.$..C.. ",
           /* line */ (const char *) " .C....C.. ",
           /* line */ (const char *) "^.CCCCCC.g ",
           /* line */ (const char *) " ..C...CCC ",
           /* line */ (const char *) " ..C.CCC.. ",
           /* line */ (const char *) " ..C.C...C ",
           /* line */ (const char *) " ..CCCCCCC ",
           /* line */ (const char *) " ....C..CC ",
           /* line */ (const char *) " g...C....^",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CC....... ",
           /* line */ (const char *) " CCCCCC...^",
           /* line */ (const char *) " .Cg..C... ",
           /* line */ (const char *) " .C.$.C... ",
           /* line */ (const char *) " .C..gC... ",
           /* line */ (const char *) " .CCCCCC.. ",
           /* line */ (const char *) "^.....CC.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .L.....L. ",
           /* line */ (const char *) "^.L..$.... ",
           /* line */ (const char *) " .L....L.. ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " ....L..L. ",
           /* line */ (const char *) " .LLGLLL.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..LGL.LL. ",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) " LL...LL..^",
           /* line */ (const char *) " ...LLLL.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "..LLLLL..G ",
           /* line */ (const char *) ".....L.... ",
           /* line */ (const char *) "....L..... ",
           /* line */ (const char *) "...L...... ",
           /* line */ (const char *) "...L.$.... ",
           /* line */ (const char *) "...L...... ",
           /* line */ (const char *) "....LLL... ",
           /* line */ (const char *) ".....G.L.. ",
           /* line */ (const char *) ".......L.. ",
           /* line */ (const char *) ".......L..^",
           /* line */ (const char *) ".......L.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " L.......G ",
           /* line */ (const char *) " LL..$..T. ",
           /* line */ (const char *) " LL..LLL.. ",
           /* line */ (const char *) " LLLLLLL.. ",
           /* line */ (const char *) "^.LL..LLLL ",
           /* line */ (const char *) " ..LLLLLL. ",
           /* line */ (const char *) " .....L... ",
           /* line */ (const char *) " ..LLLLLL. ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " G....L...^",
           /* line */ (const char *) " .....L... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .L.$..L.. ",
           /* line */ (const char *) " .L....L.. ",
           /* line */ (const char *) "^.LL...L.g ",
           /* line */ (const char *) " ..L...LLL ",
           /* line */ (const char *) " ..L.LLL.. ",
           /* line */ (const char *) " ..LLLLL.L ",
           /* line */ (const char *) " ..LLLLLLL ",
           /* line */ (const char *) " ....L..LL ",
           /* line */ (const char *) " g...L....^",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......LL. ",
           /* line */ (const char *) " LL...LLL. ",
           /* line */ (const char *) " LLLLLLL..^",
           /* line */ (const char *) " LLg..LLL. ",
           /* line */ (const char *) " .L.$.L... ",
           /* line */ (const char *) " LL..gLLLL ",
           /* line */ (const char *) " LLLLLLL.. ",
           /* line */ (const char *) "^.L..LLL.. ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C.....C. ",
           /* line */ (const char *) "^.C..$CC.. ",
           /* line */ (const char *) " .C..CCC.. ",
           /* line */ (const char *) " .CCCCC... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " .CCGCCCC. ",
           /* line */ (const char *) " .=======. ",
           /* line */ (const char *) " .CCGCCCC. ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " CC...CC..^",
           /* line */ (const char *) " ...CCCC.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) ".....C...G ",
           /* line */ (const char *) ".....C...C ",
           /* line */ (const char *) "....CCCCCC ",
           /* line */ (const char *) "C..C.....C ",
           /* line */ (const char *) "CCCC.$.... ",
           /* line */ (const char *) "...C...... ",
           /* line */ (const char *) "....CCC... ",
           /* line */ (const char *) ".....G.C.. ",
           /* line */ (const char *) ".......C.. ",
           /* line */ (const char *) "......CCC.^",
           /* line */ (const char *) "......CCC. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " C.......G ",
           /* line */ (const char *) " CC..$..T. ",
           /* line */ (const char *) " CC..CCC.. ",
           /* line */ (const char *) " CCCCCCC.. ",
           /* line */ (const char *) "^.CC..CCCC ",
           /* line */ (const char *) " ....CCCC. ",
           /* line */ (const char *) " ....=C=.. ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) " G....C...^",
           /* line */ (const char *) " .....C... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .C.$..C.. ",
           /* line */ (const char *) " .C....C.. ",
           /* line */ (const char *) "^.CC...C.g ",
           /* line */ (const char *) " ..C...CCC ",
           /* line */ (const char *) " ..C.CCC.. ",
           /* line */ (const char *) " ..CCCCC.C ",
           /* line */ (const char *) " ..=====.C ",
           /* line */ (const char *) " ..CCCCCCC ",
           /* line */ (const char *) " g..CCCCC.^",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......CC. ",
           /* line */ (const char *) " CC...CCC. ",
           /* line */ (const char *) " CCCCCCC..^",
           /* line */ (const char *) " CCg..CCC. ",
           /* line */ (const char *) " .C.$.C... ",
           /* line */ (const char *) " CC..gCCCC ",
           /* line */ (const char *) " CCCCCCC.. ",
           /* line */ (const char *) "^.C..CCC.. ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) "^.C..$.... ",
           /* line */ (const char *) " .C....... ",
           /* line */ (const char *) " .CCCC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..===.... ",
           /* line */ (const char *) " ..CGC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " ......C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) ".....C...G ",
           /* line */ (const char *) ".....C.... ",
           /* line */ (const char *) "...CCC.... ",
           /* line */ (const char *) "...C...... ",
           /* line */ (const char *) "...C.$.... ",
           /* line */ (const char *) "...C...... ",
           /* line */ (const char *) "...CCCCC.. ",
           /* line */ (const char *) ".....G.C.. ",
           /* line */ (const char *) ".......C.. ",
           /* line */ (const char *) ".......C..^",
           /* line */ (const char *) ".......C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ........G ",
           /* line */ (const char *) " ....$..T. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) "^.....C... ",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " ....=C=.. ",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " G....C...^",
           /* line */ (const char *) " G....C... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .C.$..C.. ",
           /* line */ (const char *) " .C....C.. ",
           /* line */ (const char *) "^.CCCCCC.g ",
           /* line */ (const char *) " ..C...CCC ",
           /* line */ (const char *) " ..C.CCC.. ",
           /* line */ (const char *) " ..C.C...C ",
           /* line */ (const char *) " ..CCCCCCC ",
           /* line */ (const char *) " ....C..CC ",
           /* line */ (const char *) " g...C....^",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CC....... ",
           /* line */ (const char *) " CCCCCC...^",
           /* line */ (const char *) " .Cg..C... ",
           /* line */ (const char *) " .C.$.C... ",
           /* line */ (const char *) " .C..gC... ",
           /* line */ (const char *) " .CCCCCC.. ",
           /* line */ (const char *) "^.....CC.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..=CC.$g ",
           /* line */ (const char *) " ...=CC... ",
           /* line */ (const char *) " ...=CCCCC ",
           /* line */ (const char *) " ====CCC   ",
           /* line */ (const char *) " CCCCC.... ",
           /* line */ (const char *) " C..m.C... ",
           /* line */ (const char *) " CC...C..C ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ..CCCCCC. ",
           /* line */ (const char *) " ..CC.gCC.^",
           /* line */ (const char *) " ..CC$.CC. ",
           /* line */ (const char *) " ..CCCCCC. ",
           /* line */ (const char *) " g........ ",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " .CC$CC... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ..C..g.C. ",
           /* line */ (const char *) " ..C$..CC. ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ...C.C...^",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " g...T...$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  C=CCC..g ",
           /* line */ (const char *) " CC=CCC.$. ",
           /* line */ (const char *) " CC=CCC... ",
           /* line */ (const char *) " ===CCCCCC ",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " C.......C ",
           /* line */ (const char *) "   CC.CC   ",
           /* line */ (const char *) "    C.C  . ",
           /* line */ (const char *) "    |g|..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "^.....CC.$ ",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " CCC.CCCCC ",
           /* line */ (const char *) " ......CC. ",
           /* line */ (const char *) " ......C.g ",
           /* line */ (const char *) "  ....C..$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    CCCC   ",
           /* line */ (const char *) " CCCCCCCCC.",
           /* line */ (const char *) "^=========m",
           /* line */ (const char *) " CCCCCCCCC.",
           /* line */ (const char *) "  CCCC..CC ",
           /* line */ (const char *) "    CC$.CC.",
           /* line */ (const char *) "    CC..C..",
           /* line */ (const char *) "     C.....",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   CCC     ",
           /* line */ (const char *) "  CCCCCC   ",
           /* line */ (const char *) " CCC...CCC ",
           /* line */ (const char *) "^===.$.CCC.",
           /* line */ (const char *) " CCC...===.",
           /* line */ (const char *) "  CCCC=CCC.",
           /* line */ (const char *) "   CCC=CC .",
           /* line */ (const char *) "    CC=C ..",
           /* line */ (const char *) "     C....m",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    .T.    ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "  CC$..CC  ",
           /* line */ (const char *) " CCCCCCCCC.",
           /* line */ (const char *) "^=========.",
           /* line */ (const char *) " CCCCCCCCC.",
           /* line */ (const char *) "  CCCCCCC .",
           /* line */ (const char *) "      ..CC.",
           /* line */ (const char *) "      .$CC.",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CCCCCC.... ",
           /* line */ (const char *) " CCCCCC.$.. ",
           /* line */ (const char *) " CCCCCCCCCC ",
           /* line */ (const char *) "^==========^",
           /* line */ (const char *) " CCCCCCCCC  ",
           /* line */ (const char *) " CCCCCCCCC  ",
           /* line */ (const char *) " CCCCCCCCC  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "^...CCCC.. ",
           /* line */ (const char *) " ...====.. ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) " ......CC.^",
           /* line */ (const char *) " ......C.g ",
           /* line */ (const char *) "  ....C.$$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..=C...g ",
           /* line */ (const char *) " ...=C.... ",
           /* line */ (const char *) " ...=C$... ",
           /* line */ (const char *) " ====C..   ",
           /* line */ (const char *) " CCCCC.... ",
           /* line */ (const char *) " L..m.L... ",
           /* line */ (const char *) " LL...L..L ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  T....... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " ...C$.C.. ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " g........^",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " .CC$CC... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..C....C. ",
           /* line */ (const char *) " ..C$..CC. ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "^...C.C... ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " g.......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "  C=C.C..g ",
           /* line */ (const char *) " CC=CCC.$. ",
           /* line */ (const char *) " CC=CCC...^",
           /* line */ (const char *) "^===C.CCCC ",
           /* line */ (const char *) " CCCC..C.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " C.......C ",
           /* line */ (const char *) "   CC.CC   ",
           /* line */ (const char *) "    C.C  . ",
           /* line */ (const char *) "    |g|..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "^.....LL.$ ",
           /* line */ (const char *) " ....L.L.. ",
           /* line */ (const char *) " ...L..LLL ",
           /* line */ (const char *) " LLL.m...L ",
           /* line */ (const char *) " .......L. ",
           /* line */ (const char *) " ......L.. ",
           /* line */ (const char *) "  ....L..$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     .     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......g ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " |....$... ",
           /* line */ (const char *) " ...CCCC..^",
           /* line */ (const char *) " |.CCCCCC. ",
           /* line */ (const char *) " ...m.CCC. ",
           /* line */ (const char *) " B........ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  |.|...B$ ",
           /* line */ (const char *) " ........B ",
           /* line */ (const char *) "^...CCC... ",
           /* line */ (const char *) " ...C.CC.. ",
           /* line */ (const char *) " ...C$.C.. ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " g........ ",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " .CC$CC... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ..CCC$.C. ",
           /* line */ (const char *) " ..CCCCCC. ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ......CC. ",
           /* line */ (const char *) " .....CC..^",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " .....CC.. ",
           /* line */ (const char *) " B   .CCC. ",
           /* line */ (const char *) " .   .CCC. ",
           /* line */ (const char *) " g$  ....$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  ...CC..g ",
           /* line */ (const char *) " ....CC...^",
           /* line */ (const char *) " ....CC..$ ",
           /* line */ (const char *) "^.....CCCC ",
           /* line */ (const char *) " ......CCC ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "    C.C    ",
           /* line */ (const char *) "    C.C  $ ",
           /* line */ (const char *) "    CgC..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " $.. .CC.$ ",
           /* line */ (const char *) " ... ..C.. ",
           /* line */ (const char *) " ... ..CCC ",
           /* line */ (const char *) " LLL m...C ",
           /* line */ (const char *) " ... ...C.^",
           /* line */ (const char *) " ......C.. ",
           /* line */ (const char *) " B.......$ ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   LLL...g ",
           /* line */ (const char *) "   LL..... ",
           /* line */ (const char *) "   LL.LLLL ",
           /* line */ (const char *) " ...L.$L.. ",
           /* line */ (const char *) "   .LLLL.. ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ...B.B  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ......B  ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ...CgCC.. ",
           /* line */ (const char *) " .  C..C.. ",
           /* line */ (const char *) " .  C..C.. ",
           /* line */ (const char *) " t  C..C.. ",
           /* line */ (const char *) " .  C..CC. ",
           /* line */ (const char *) " $  C..$CC ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " .C.....C. ",
           /* line */ (const char *) " .C.CCC.C. ",
           /* line */ (const char *) " .C.C$..C. ",
           /* line */ (const char *) " .C.CCCCC. ",
           /* line */ (const char *) " .C.......^",
           /* line */ (const char *) "^........B ",
           /* line */ (const char *) " CCC   CCC ",
           /* line */ (const char *) " g.......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " .m..C.C.C ",
           /* line */ (const char *) " .....C.C$ ",
           /* line */ (const char *) " ....C.C.C ",
           /* line */ (const char *) " ...C.C.C. ",
           /* line */ (const char *) " ....C.C.. ",
           /* line */ (const char *) " .....C..m ",
           /* line */ (const char *) " .T....... ",
           /* line */ (const char *) " ........$ ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .CCCCCC ",
           /* line */ (const char *) "   .CCC.$C ",
           /* line */ (const char *) "   .CCC..C ",
           /* line */ (const char *) "   .CCCCCC ",
           /* line */ (const char *) "   .CCm.C  ",
           /* line */ (const char *) "   ..C..C  ",
           /* line */ (const char *) " CCC..CCC  ",
           /* line */ (const char *) " m.C...... ",
           /* line */ (const char *) " $.C....m. ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    B...LLL ",
           /* line */ (const char *) "    .....LL ",
           /* line */ (const char *) "    ......L ",
           /* line */ (const char *) "^......g..L ",
           /* line */ (const char *) "    .......^",
           /* line */ (const char *) "    ....... ",
           /* line */ (const char *) "  LL......B ",
           /* line */ (const char *) " LL$LL  .   ",
           /* line */ (const char *) " LLLL   .   ",
           /* line */ (const char *) " LL     .   ",
           /* line */ (const char *) "        ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " CCCCCCB..^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..BCCCCCC ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "   CCCCCB.^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ..BCCCCC ",
           /* line */ (const char *) "^.......g$ ",
           /* line */ (const char *) "  ......   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...C$C... ",
           /* line */ (const char *) " .|CCCCCC. ",
           /* line */ (const char *) " .CCCCCCg. ",
           /* line */ (const char *) "^.=======.^",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " .gCCCCCC. ",
           /* line */ (const char *) " .CCCCCC|. ",
           /* line */ (const char *) " .....CC.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " B...C.C.C ",
           /* line */ (const char *) " .....C.C. ",
           /* line */ (const char *) " ....C.C.C ",
           /* line */ (const char *) " ...C.C$C. ",
           /* line */ (const char *) " ....C.C.. ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " B......$. ",
           /* line */ (const char *) " .B.......^",
           /* line */ (const char *) " ..B...... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .CCCCCC ",
           /* line */ (const char *) "   .CCC.$C ",
           /* line */ (const char *) "   .CCC..C ",
           /* line */ (const char *) "   .CCCCCC ",
           /* line */ (const char *) "   .CC..C  ",
           /* line */ (const char *) "   ..C.mC  ",
           /* line */ (const char *) " CCC..CCC  ",
           /* line */ (const char *) " $.B......^",
           /* line */ (const char *) " ..B...... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.....g... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "  L....... ",
           /* line */ (const char *) " LL....... ",
           /* line */ (const char *) " L$LL  .   ",
           /* line */ (const char *) " LLL   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......5 ",
           /* line */ (const char *) "5LLLLLLL.. ",
           /* line */ (const char *) "5......... ",
           /* line */ (const char *) "5..LLLLLLL ",
           /* line */ (const char *) " 5........ ",
           /* line */ (const char *) "  5LLLLLL.^",
           /* line */ (const char *) "  5....... ",
           /* line */ (const char *) " ...LLLLLL ",
           /* line */ (const char *) "  ......g$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " 5..L$L..5 ",
           /* line */ (const char *) " ..LLgLL.. ",
           /* line */ (const char *) " .LLL.LLL. ",
           /* line */ (const char *) " .LLL.LLL.^",
           /* line */ (const char *) " .LLL.LLL. ",
           /* line */ (const char *) " .LLL.LLL. ",
           /* line */ (const char *) " ..LL.LL.. ",
           /* line */ (const char *) " 5.......5 ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  .....L.L ",
           /* line */ (const char *) " .......L. ",
           /* line */ (const char *) " ....L.L$L ",
           /* line */ (const char *) " ...L...L. ",
           /* line */ (const char *) " ....L....^",
           /* line */ (const char *) " .....L... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "   ......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "^.....LLLL ",
           /* line */ (const char *) " L...LL.$L ",
           /* line */ (const char *) " LL.LLL..L ",
           /* line */ (const char *) " LL.LLL.LL ",
           /* line */ (const char *) " LLLLL..L  ",
           /* line */ (const char *) " .L..L..L  ",
           /* line */ (const char *) " .LL....L  ",
           /* line */ (const char *) " ..L...... ",
           /* line */ (const char *) " L........^",
           /* line */ (const char *) " L........ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .....LL ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.g....... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " LLL...... ",
           /* line */ (const char *) " L$LLLL.   ",
           /* line */ (const char *) " .....g.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " LLLLLLL.. ",
           /* line */ (const char *) " ..L...... ",
           /* line */ (const char *) " ..LLL.LLL ",
           /* line */ (const char *) "  ...L.... ",
           /* line */ (const char *) "   LLL.LL.^",
           /* line */ (const char *) "  .....L.. ",
           /* line */ (const char *) "  ..LLLLLL ",
           /* line */ (const char *) "  ......g$ ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...L$L... ",
           /* line */ (const char *) " ..LLgLL.. ",
           /* line */ (const char *) " .LL...LL. ",
           /* line */ (const char *) " ......LL. ",
           /* line */ (const char *) " .LL......^",
           /* line */ (const char *) " .LL...LL. ",
           /* line */ (const char *) " ..LLgLL.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  .....L.L ",
           /* line */ (const char *) " .......L$ ",
           /* line */ (const char *) " ....L.L.L ",
           /* line */ (const char *) " ...L.g.L. ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " .....L... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "   ......$ ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " .....LLLL ",
           /* line */ (const char *) " ....LL.$L ",
           /* line */ (const char *) " L..LLL..L ",
           /* line */ (const char *) " L..LL...L ",
           /* line */ (const char *) " LLLL...L  ",
           /* line */ (const char *) " .L.....L  ",
           /* line */ (const char *) " .LL....L  ",
           /* line */ (const char *) " ..LL..... ",
           /* line */ (const char *) " ...LL.... ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .....CC ",
           /* line */ (const char *) "   ......C ",
           /* line */ (const char *) "   .....C. ",
           /* line */ (const char *) "^.g....C.. ",
           /* line */ (const char *) "   ....C..^",
           /* line */ (const char *) "   ...C... ",
           /* line */ (const char *) " CCC.CC... ",
           /* line */ (const char *) " C$CCCC.   ",
           /* line */ (const char *) " .....g.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " CCCCCCC.. ",
           /* line */ (const char *) " ..CC..... ",
           /* line */ (const char *) " ..CCC.CCC ",
           /* line */ (const char *) "  ..CC.... ",
           /* line */ (const char *) "   CCC.CC.^",
           /* line */ (const char *) "  .....C.. ",
           /* line */ (const char *) "  ..CCCCCC ",
           /* line */ (const char *) "  ......g$ ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...C$C... ",
           /* line */ (const char *) " ..CCgCC.. ",
           /* line */ (const char *) " .CC...CC. ",
           /* line */ (const char *) " .C....CC. ",
           /* line */ (const char *) " .CC....C.^",
           /* line */ (const char *) " .CC...CC. ",
           /* line */ (const char *) " ..CCgCC.. ",
           /* line */ (const char *) " ...C.C... ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  ...CCCCC ",
           /* line */ (const char *) " ......CC$ ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) " ...CCg.CC ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ...C.CCCC ",
           /* line */ (const char *) "  ...C.... ",
           /* line */ (const char *) "   .C....$ ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " .....CCCC ",
           /* line */ (const char *) " ....CC.$C ",
           /* line */ (const char *) " C..CCC..C ",
           /* line */ (const char *) " C..CC...C ",
           /* line */ (const char *) " CCCC...C  ",
           /* line */ (const char *) " .C.....C  ",
           /* line */ (const char *) " .CC....C  ",
           /* line */ (const char *) " ..CC..... ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^.....g... ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " ..B...... ",
           /* line */ (const char *) " .$.   .   ",
           /* line */ (const char *) " ... $ .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....C..  ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " .....CC.. ",
           /* line */ (const char *) " ......C.. ",
           /* line */ (const char *) "  .....CC. ",
           /* line */ (const char *) "   .....C.^",
           /* line */ (const char *) "  ......C. ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ......g$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CC..$.... ",
           /* line */ (const char *) " C...g.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  ...C.... ",
           /* line */ (const char *) " ....C..$. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "   ......$ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " .......$. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..   .... ",
           /* line */ (const char *) " .. .....  ",
           /* line */ (const char *) " CC .. CC  ",
           /* line */ (const char *) " ..... ..  ",
           /* line */ (const char *) " ...   ... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " g........ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ..CCCCC ",
           /* line */ (const char *) "   ..Cg..C ",
           /* line */ (const char *) "^.t..C$C.C ",
           /* line */ (const char *) "   ..CCC.C^",
           /* line */ (const char *) "   ......C ",
           /* line */ (const char *) " ..CCCCCCC ",
           /* line */ (const char *) " .$.   .   ",
           /* line */ (const char *) " ...   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) "  ..CCC... ",
           /* line */ (const char *) "   ..C....^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .......g ",
           /* line */ (const char *) "  ......g$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ...C$C... ",
           /* line */ (const char *) " ....g.... ",
           /* line */ (const char *) " CC......C ",
           /* line */ (const char *) " .CC...CCC ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " .....CC.. ",
           /* line */ (const char *) " ...C.....^",
           /* line */ (const char *) "  .CC....  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  .... .CC ",
           /* line */ (const char *) " ..... ... ",
           /* line */ (const char *) " ..... $.. ",
           /* line */ (const char *) " ..... CgC ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "  ........^",
           /* line */ (const char *) "   ......$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..... ...^",
           /* line */ (const char *) " ..... .$. ",
           /* line */ (const char *) " ..... ... ",
           /* line */ (const char *) " ..... ... ",
           /* line */ (const char *) " ..... ..  ",
           /* line */ (const char *) " ..... ..  ",
           /* line */ (const char *) " ..... ..  ",
           /* line */ (const char *) " ..... ... ",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ..... ",
           /* line */ (const char *) "^....  .   . ",
           /* line */ (const char *) "    .      . ",
           /* line */ (const char *) " ...... .... ",
           /* line */ (const char *) " .    . ~  ~ ",
           /* line */ (const char *) " .  ... ~  ~ ",
           /* line */ (const char *) "    .   ~  ~ ",
           /* line */ (const char *) "   ....~~ ~~ ",
           /* line */ (const char *) " ...  .   ~  ",
           /* line */ (const char *) "   .  .~~ ~.^",
           /* line */ (const char *) " .....M      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .  .~~~.  . ",
           /* line */ (const char *) " .  . ~ .  . ",
           /* line */ (const char *) " .  . ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) " .... .  ... ",
           /* line */ (const char *) " .  . .    . ",
           /* line */ (const char *) " .    .~~... ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .  .~~~..$. ",
           /* line */ (const char *) " .  . ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^.~~~~~  ~   ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) " ......  ...^",
           /* line */ (const char *) " ..LLL.  M.  ",
           /* line */ (const char *) " .LLL..~~..  ",
           /* line */ (const char *) " ......  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   ...M ",
           /* line */ (const char *) " .~..~~~.  . ",
           /* line */ (const char *) " ..~. ~ .  . ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^.~~~~~  ~..^",
           /* line */ (const char *) "      s  s   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ..M.~~  ... ",
           /* line */ (const char *) " ..~~~~~~..$ ",
           /* line */ (const char *) " .~~~~~      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^    ",
           /* line */ (const char *) " ...M   .    ",
           /* line */ (const char *) " .LL.s~~.... ",
           /* line */ (const char *) " .LL. ~ .  . ",
           /* line */ (const char *) " $... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^.~~~~~  ~..^",
           /* line */ (const char *) "      s  ~   ",
           /* line */ (const char *) "  .....  ... ",
           /* line */ (const char *) "^..LLL.  ... ",
           /* line */ (const char *) "  .LLL.~~... ",
           /* line */ (const char *) "  ...L.  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "....   .... ",
           /* line */ (const char *) ".M..~~~.... ",
           /* line */ (const char *) ".... ~ .... ",
           /* line */ (const char *) ".... ~ .... ",
           /* line */ (const char *) "     ~  ~   ",
           /* line */ (const char *) "     ~  ~..^",
           /* line */ (const char *) "     ~  ~   ",
           /* line */ (const char *) "......  ... ",
           /* line */ (const char *) "......  ... ",
           /* line */ (const char *) "......~~... ",
           /* line */ (const char *) "......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^.~~~~~  ~t.^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......~~... ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......~~... ",
           /* line */ (const char *) " ......  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      s  s   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ..M...  ... ",
           /* line */ (const char *) " ......~~..$ ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^    ",
           /* line */ (const char *) " ....   .    ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "  .....  ... ",
           /* line */ (const char *) "^......  ... ",
           /* line */ (const char *) "  .....~~... ",
           /* line */ (const char *) "  .....  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "....   .... ",
           /* line */ (const char *) ".M..~~~.... ",
           /* line */ (const char *) ".... ~ .... ",
           /* line */ (const char *) ".... ~ .... ",
           /* line */ (const char *) "     ~  ~   ",
           /* line */ (const char *) "     ~  ~..^",
           /* line */ (const char *) "     ~  ~   ",
           /* line */ (const char *) "......  ... ",
           /* line */ (const char *) ". ....  ... ",
           /* line */ (const char *) ".... .~~... ",
           /* line */ (const char *) "......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^.~~~~~  ~..^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " . ....  ... ",
           /* line */ (const char *) " ......~~... ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......~~... ",
           /* line */ (const char *) " ......  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .. . ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      s  s   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ..M...  ... ",
           /* line */ (const char *) " ......~~..$ ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^    ",
           /* line */ (const char *) " ....   .    ",
           /* line */ (const char *) " .M..~~~.... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) " .... ~ .... ",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "^~~~~~~  ~..^",
           /* line */ (const char *) "      ~  ~   ",
           /* line */ (const char *) "  .....  ... ",
           /* line */ (const char *) "^.... .  ... ",
           /* line */ (const char *) "  .....~~... ",
           /* line */ (const char *) "  .....  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "....   ...$ ",
           /* line */ (const char *) ".M..'''.LL. ",
           /* line */ (const char *) ".... ' .LL. ",
           /* line */ (const char *) ".... ' .... ",
           /* line */ (const char *) "     '  '   ",
           /* line */ (const char *) "     '  '..^",
           /* line */ (const char *) "     '  '   ",
           /* line */ (const char *) "......  ... ",
           /* line */ (const char *) ". ....  ... ",
           /* line */ (const char *) ".... .''... ",
           /* line */ (const char *) "......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..'''.... ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) "^.'''''  '..^",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " . ....  ... ",
           /* line */ (const char *) " ......''... ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..'''.... ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) "^.''''t  '..^",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ......''... ",
           /* line */ (const char *) " ......  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....   .... ",
           /* line */ (const char *) " .M..'''.... ",
           /* line */ (const char *) " .... ' .. . ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) "^.'''''  '..^",
           /* line */ (const char *) "      s  s   ",
           /* line */ (const char *) " ......  ... ",
           /* line */ (const char *) " ..M...  ... ",
           /* line */ (const char *) " ......''..$ ",
           /* line */ (const char *) " ......      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^    ",
           /* line */ (const char *) " ....   .    ",
           /* line */ (const char *) " .M..'''.... ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) " .... ' .... ",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) "^.'''''  '..^",
           /* line */ (const char *) "      '  '   ",
           /* line */ (const char *) "  .....  ... ",
           /* line */ (const char *) "^.... .  .L. ",
           /* line */ (const char *) "  .....''... ",
           /* line */ (const char *) "  .....  .   ",
           /* line */ (const char *) "         ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ..        ",
           /* line */ (const char *) " ..        ",
           /* line */ (const char *) "^..        ",
           /* line */ (const char *) " .m        ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ...       ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "   ...     ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..    .   ",
           /* line */ (const char *) "  ..   .   ",
           /* line */ (const char *) "   ..  .   ",
           /* line */ (const char *) "    ...t..^",
           /* line */ (const char *) "     ..    ",
           /* line */ (const char *) "     ..    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ..m..     ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    ..     ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    .m...  ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ..  ..  ",
           /* line */ (const char *) "   ..  ..  ",
           /* line */ (const char *) "   ..  ..  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "   ..m...  ",
           /* line */ (const char *) "^...    .  ",
           /* line */ (const char *) "   .    ..^",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  .$..M..  ",
           /* line */ (const char *) "  ...|s|. $",
           /* line */ (const char *) "      ~   .",
           /* line */ (const char *) "      ~s..s",
           /* line */ (const char *) "^..   s   .",
           /* line */ (const char *) "  .....   m",
           /* line */ (const char *) "  ~....    ",
           /* line */ (const char *) "  ~~....   ",
           /* line */ (const char *) "       ... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .CCCCCCCC",
           /* line */ (const char *) "  .CCC$.m.C",
           /* line */ (const char *) "  .CCC....C",
           /* line */ (const char *) "  .CCC....C",
           /* line */ (const char *) "  .CCC..T.C",
           /* line */ (const char *) "  .CCCCCCCC",
           /* line */ (const char *) "  .CCCCCCCC",
           /* line */ (const char *) "  ...CCCCCC",
           /* line */ (const char *) "  .~.C..T  ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       t   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "^...   t   ",
           /* line */ (const char *) " .~.   .   ",
           /* line */ (const char *) " .~.....   ",
           /* line */ (const char *) " ..m.      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "   .~~...^ ",
           /* line */ (const char *) "   ..~.    ",
           /* line */ (const char *) "   ....    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..        ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  .~~....^ ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ....",
           /* line */ (const char *) "       $...",
           /* line */ (const char *) "       ....",
           /* line */ (const char *) "       s   ",
           /* line */ (const char *) "       ~   ",
           /* line */ (const char *) "^..    ~   ",
           /* line */ (const char *) "  .....s   ",
           /* line */ (const char *) "  L....    ",
           /* line */ (const char *) "  LL....   ",
           /* line */ (const char *) "       ... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .   ...$ ",
           /* line */ (const char *) "  ... .... ",
           /* line */ (const char *) "  .T. T..m ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "^...   .   ",
           /* line */ (const char *) " .L.   .   ",
           /* line */ (const char *) " .L.....   ",
           /* line */ (const char *) " ..m.      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "   .LL...^ ",
           /* line */ (const char *) "   ..L.    ",
           /* line */ (const char *) "   ....    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..        ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  .LL....^ ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) "  C....    ",
           /* line */ (const char *) "  CC....   ",
           /* line */ (const char *) "       ... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .C.      ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "^...   .   ",
           /* line */ (const char *) " .C.   .   ",
           /* line */ (const char *) " .C.....   ",
           /* line */ (const char *) " ..m.      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "   .CC...^ ",
           /* line */ (const char *) "   ..C.    ",
           /* line */ (const char *) "   ....    ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..        ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  .CC....^ ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "C..C       ",
           /* line */ (const char *) " ...C      ",
           /* line */ (const char *) " C..mCC    ",
           /* line */ (const char *) " CC...CC   ",
           /* line */ (const char *) " CC...CC   ",
           /* line */ (const char *) " CC...CC   ",
           /* line */ (const char *) "  CC...C   ",
           /* line */ (const char *) "    C...C  ",
           /* line */ (const char *) "     C...C ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ..C       ",
           /* line */ (const char *) " ..C       ",
           /* line */ (const char *) " ..C       ",
           /* line */ (const char *) " .mCCCCCCC ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " C...C     ",
           /* line */ (const char *) "  C...C    ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..   C.C  ",
           /* line */ (const char *) "  ..  C.C  ",
           /* line */ (const char *) "   ..CC.C  ",
           /* line */ (const char *) "   C......^",
           /* line */ (const char *) "    C..CC  ",
           /* line */ (const char *) "     ..    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ..m..     ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    ..     ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    .m...  ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "   ..m...  ",
           /* line */ (const char *) "^...CCCC.  ",
           /* line */ (const char *) "   .CCCC..^",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "C..C       ",
           /* line */ (const char *) " ...C      ",
           /* line */ (const char *) " C..mCC    ",
           /* line */ (const char *) "    C...C  ",
           /* line */ (const char *) "     C...C ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "  ....  .  ",
           /* line */ (const char *) "  .  .  .  ",
           /* line */ (const char *) " ..C ....  ",
           /* line */ (const char *) " ..C       ",
           /* line */ (const char *) "^..C       ",
           /* line */ (const char *) "  C...C    ",
           /* line */ (const char *) "   C...C   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..   C.C  ",
           /* line */ (const char *) "  ..  C.C  ",
           /* line */ (const char *) "   ..CC.C  ",
           /* line */ (const char *) " ..m..     ",
           /* line */ (const char *) " ....^     ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    ..     ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ......^ ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....^     ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "^...       ",
           /* line */ (const char *) " CC..      ",
           /* line */ (const char *) " CCC=CC    ",
           /* line */ (const char *) " CCC=CCC   ",
           /* line */ (const char *) " CCC=CCC   ",
           /* line */ (const char *) " CCC=CCC   ",
           /* line */ (const char *) "  CC=CCC   ",
           /* line */ (const char *) "   C=CCCC  ",
           /* line */ (const char *) "   C=CCCCC ",
           /* line */ (const char *) "   C......^",
           /* line */ (const char *) "   C.....  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " C=C       ",
           /* line */ (const char *) " C=C       ",
           /* line */ (const char *) " C=CCC.... ",
           /* line */ (const char *) " C=CCC...m ",
           /* line */ (const char *) " C=CCC.... ",
           /* line */ (const char *) " C=CCC..$. ",
           /* line */ (const char *) " C=CCCs    ",
           /* line */ (const char *) " C=CCCs    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "     CC=CC ",
           /* line */ (const char *) "     CC=CC ",
           /* line */ (const char *) "    CCC=CCC",
           /* line */ (const char *) "    C.....C",
           /* line */ (const char *) "    C.....C",
           /* line */ (const char *) "    CCC=CCC",
           /* line */ (const char *) "     CC=CC ",
           /* line */ (const char *) "     CC=CC ",
           /* line */ (const char *) "     CC=CC ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "  CC=CC    ",
           /* line */ (const char *) "  CC=CC    ",
           /* line */ (const char *) "  CC=CC    ",
           /* line */ (const char *) "  CC=CC    ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ..CC..  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "   C=C     ",
           /* line */ (const char *) "   C=C     ",
           /* line */ (const char *) "   C=C...  ",
           /* line */ (const char *) "^....CCC.  ",
           /* line */ (const char *) "   ....C..^",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "~..~       ",
           /* line */ (const char *) " ...~      ",
           /* line */ (const char *) " ~...~~    ",
           /* line */ (const char *) " ~~...~~   ",
           /* line */ (const char *) " ~~t.m~~   ",
           /* line */ (const char *) " ~~.t.~~   ",
           /* line */ (const char *) "  ~~...~   ",
           /* line */ (const char *) "    ~...~  ",
           /* line */ (const char *) "     ~...~ ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ..~       ",
           /* line */ (const char *) " ..~       ",
           /* line */ (const char *) " ..~       ",
           /* line */ (const char *) " ..~~~~~~~ ",
           /* line */ (const char *) " .....m...^",
           /* line */ (const char *) " ...~~~~~~ ",
           /* line */ (const char *) " ~...~     ",
           /* line */ (const char *) "  ~...~    ",
           /* line */ (const char *) "   ~...~   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..   ~.~  ",
           /* line */ (const char *) "  m.  ~.~  ",
           /* line */ (const char *) "   ..~~.~  ",
           /* line */ (const char *) "   ~......^",
           /* line */ (const char *) "    ~..~~  ",
           /* line */ (const char *) "     ..    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    ..     ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    ..m..  ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ..~~..  ",
           /* line */ (const char *) "   ..~~..  ",
           /* line */ (const char *) "   ..~~..  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "^...~~~~.  ",
           /* line */ (const char *) "   .~~~~..^",
           /* line */ (const char *) "   .m....  ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "....       ",
           /* line */ (const char *) " .m..      ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ..CCC..CCC",
           /* line */ (const char *) " ..CCC..CCC",
           /* line */ (const char *) " ..CCC.tCCC",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "     ..... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ...CC     ",
           /* line */ (const char *) " m..CCC    ",
           /* line */ (const char *) " ...CCCC   ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCCCCCCCC^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..   ...  ",
           /* line */ (const char *) " C..  ...  ",
           /* line */ (const char *) " CC......  ",
           /* line */ (const char *) " CC...m...^",
           /* line */ (const char *) " CCC.....  ",
           /* line */ (const char *) " CCCC..    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " CCC..     ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) " CCC....   ",
           /* line */ (const char *) "   C.....  ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   .m....  ",
           /* line */ (const char *) "   .CCCC.  ",
           /* line */ (const char *) "   .CCCC.  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....C     ",
           /* line */ (const char *) "   C.C     ",
           /* line */ (const char *) "  CC.C     ",
           /* line */ (const char *) "  C......  ",
           /* line */ (const char *) "^...CCCC.  ",
           /* line */ (const char *) "   .CCCC..^",
           /* line */ (const char *) "   .m....C ",
           /* line */ (const char *) "    .CCCCC ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ...       ",
           /* line */ (const char *) "^....      ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ........C.",
           /* line */ (const char *) " ..m.....C.",
           /* line */ (const char *) " ........C.",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "     ..... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) " .C....    ",
           /* line */ (const char *) " CCC....   ",
           /* line */ (const char *) " .C...|... ",
           /* line */ (const char *) " .C.....m.^",
           /* line */ (const char *) " .C...|... ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..   .m.  ",
           /* line */ (const char *) " ...  ...  ",
           /* line */ (const char *) " C.......  ",
           /* line */ (const char *) " CCCCCCC..^",
           /* line */ (const char *) " C.......  ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) "^m.....    ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) "   .C...|  ",
           /* line */ (const char *) "   .C.....^",
           /* line */ (const char *) "   .CC..|  ",
           /* line */ (const char *) "   .CCC..  ",
           /* line */ (const char *) "   .CCCC.  ",
           /* line */ (const char *) "   ......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " .....     ",
           /* line */ (const char *) "   .C.     ",
           /* line */ (const char *) "  ..C.     ",
           /* line */ (const char *) "  ..C....  ",
           /* line */ (const char *) "^...CCCC.  ",
           /* line */ (const char *) "   ....C..^",
           /* line */ (const char *) "   ..m.C.. ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "^........B ",
           /* line */ (const char *) " ....C....^",
           /* line */ (const char *) " ...CC...B ",
           /* line */ (const char *) "  CCC..... ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .m.      ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ~~..C...B ",
           /* line */ (const char *) " ~...CC... ",
           /* line */ (const char *) " .....CCCC ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " .....~~.. ",
           /* line */ (const char *) " ...~~~~.. ",
           /* line */ (const char *) " ..~~~~~~. ",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " . $.~~~~. ",
           /* line */ (const char *) " ..~~m~~~. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...C....  ",
           /* line */ (const char *) " ...CC.m.. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) "^....C.... ",
           /* line */ (const char *) " ....C....^",
           /* line */ (const char *) "  ...CC... ",
           /* line */ (const char *) "   ...CC.. ",
           /* line */ (const char *) "      C    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  |.|..... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "     .. CC ",
           /* line */ (const char *) "     .. CC ",
           /* line */ (const char *) " .C.... CC.",
           /* line */ (const char *) " .C.... ..$",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " .|.|..... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...m..... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "      ..   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....~.~. ",
           /* line */ (const char *) " ...~~~~~~ ",
           /* line */ (const char *) " ....~~~~~ ",
           /* line */ (const char *) "^....~~..B ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ..m~~~..B ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .$   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ~~......B ",
           /* line */ (const char *) " ~~~...... ",
           /* line */ (const char *) " .~.~..... ",
           /* line */ (const char *) "^...~~~... ",
           /* line */ (const char *) " ...m~~~.. ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ..~~..... ",
           /* line */ (const char *) "   ~~    . ",
           /* line */ (const char *) "    ~~  $. ",
           /* line */ (const char *) " $~~~      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " $.~~....  ",
           /* line */ (const char *) " ...~~.m.. ",
           /* line */ (const char *) " ..~~ ~~.. ",
           /* line */ (const char *) "^..~~ ~~.. ",
           /* line */ (const char *) " ...~ ~... ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " B....~~.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ... ..... ",
           /* line */ (const char *) " ...  ..$. ",
           /* line */ (const char *) " .... .... ",
           /* line */ (const char *) "^.... ..m. ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " LLLLLL... ",
           /* line */ (const char *) " ..... ..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ...L....$ ",
           /* line */ (const char *) " ...LL.... ",
           /* line */ (const char *) " ....Lm... ",
           /* line */ (const char *) " m...L.... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " LLL.LL...^",
           /* line */ (const char *) " $.....L.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ......    ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..m.....B ",
           /* line */ (const char *) "  ....~~.. ",
           /* line */ (const char *) "      ~~   ",
           /* line */ (const char *) "       ~   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "  .....B.B ",
           /* line */ (const char *) "  .CCC.... ",
           /* line */ (const char *) "  .CCCCC.  ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ...mC.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) "   CCCC .. ",
           /* line */ (const char *) "        $. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " $...C...  ",
           /* line */ (const char *) " ....C.m.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " B...CC... ",
           /* line */ (const char *) "   CCCCC   ",
           /* line */ (const char *) "  CCC      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ...~..... ",
           /* line */ (const char *) " ...~~..$. ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ....~..m. ",
           /* line */ (const char *) " ...~~.... ",
           /* line */ (const char *) " ~~~~~~... ",
           /* line */ (const char *) " ~~~~~~~.. ",
           /* line */ (const char *) "  ~~~~     ",
           /* line */ (const char *) "   ~~~~    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " .~~~~..   ",
           /* line */ (const char *) " .~~~~...  ",
           /* line */ (const char *) " ...~~~~.. ",
           /* line */ (const char *) " m...~~~~. ",
           /* line */ (const char *) "^...~~~~.. ",
           /* line */ (const char *) "  ..~~~~.. ",
           /* line */ (const char *) "   ...~~~~ ",
           /* line */ (const char *) "     ~~~~  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....L.L. ",
           /* line */ (const char *) " ...LLLLLL ",
           /* line */ (const char *) " ....LLLLL ",
           /* line */ (const char *) " ....LL... ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) "  $....... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " LL......  ",
           /* line */ (const char *) " LLL....$. ",
           /* line */ (const char *) " .L.L..... ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " ....LLL.. ",
           /* line */ (const char *) " ...LLL...^",
           /* line */ (const char *) " ..LL..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ..LL....  ",
           /* line */ (const char *) " ...LL.m.. ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) "  ....LL..^",
           /* line */ (const char *) "  ....LL.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ...LL.... ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " .......m. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " LLLL.....^",
           /* line */ (const char *) " .....L..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ...LL.... ",
           /* line */ (const char *) " ..LLLLL..^",
           /* line */ (const char *) " m.LL.LL.. ",
           /* line */ (const char *) " ..LL.$L.. ",
           /* line */ (const char *) " ...LLLLL. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .$..      ",
           /* line */ (const char *) " ....      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  ...   .  ",
           /* line */ (const char *) "  .m.  $.  ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .....b.. ",
           /* line */ (const char *) "  B....... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ...$    ",
           /* line */ (const char *) "   ..b.    ",
           /* line */ (const char *) "   B......^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......L.. ",
           /* line */ (const char *) " C         ",
           /* line */ (const char *) " . $...... ",
           /* line */ (const char *) " .       m ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      L    ",
           /* line */ (const char *) "    LLLL   ",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) "^....m....^",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) "   LLLL    ",
           /* line */ (const char *) "     L     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....L  $. ",
           /* line */ (const char *) " ...LL  .. ",
           /* line */ (const char *) " ...LL  .. ",
           /* line */ (const char *) "^...LL  .. ",
           /* line */ (const char *) " .LLLL   . ",
           /* line */ (const char *) " LLLL.....^",
           /* line */ (const char *) " LL      . ",
           /* line */ (const char *) "   $$..... ",
           /* line */ (const char *) "   $$      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ..m.     ",
           /* line */ (const char *) "  $..B     ",
           /* line */ (const char *) "  C D      ",
           /* line */ (const char *) "  C ...$   ",
           /* line */ (const char *) "  C ....^  ",
           /* line */ (const char *) "  C .m..   ",
           /* line */ (const char *) "  C    s   ",
           /* line */ (const char *) "^.$    ... ",
           /* line */ (const char *) " ..D.ms..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....LLL ",
           /* line */ (const char *) "   .b..LLL ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "    |.|  . ",
           /* line */ (const char *) "     .   C ",
           /* line */ (const char *) "     s   C ",
           /* line */ (const char *) "   .....CC ",
           /* line */ (const char *) "   .....C  ",
           /* line */ (const char *) "   .$..$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " .LLL.LLL. ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "  C.....C  ",
           /* line */ (const char *) "  C...$.C  ",
           /* line */ (const char *) "  CCCCCCC  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "^...LL  .. ",
           /* line */ (const char *) " ...LLL .. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...LL  .. ",
           /* line */ (const char *) " .LLLL   . ",
           /* line */ (const char *) " LLLL    . ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) " $L      C ",
           /* line */ (const char *) " .LLLLL  C ",
           /* line */ (const char *) " LLLLLL    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   LL      ",
           /* line */ (const char *) "   LLLL    ",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " .LLLLLLL. ",
           /* line */ (const char *) "   L LLL   ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) " CC.....   ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " m....$.   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ...LL  $. ",
           /* line */ (const char *) " ...LL  .. ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " ...LL  .. ",
           /* line */ (const char *) " LLLLLL  . ",
           /* line */ (const char *) " LLLLL.... ",
           /* line */ (const char *) "    LLL  . ",
           /* line */ (const char *) " $L .LL  C ",
           /* line */ (const char *) " .LLLLL  L ",
           /* line */ (const char *) " LLLLLL    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....C.C. ",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ...===... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "  $.CCC... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " CC......  ",
           /* line */ (const char *) " CCC....$. ",
           /* line */ (const char *) " .C.C..... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " ...CCC...^",
           /* line */ (const char *) " ..CC..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ..CC....  ",
           /* line */ (const char *) " ...CC.m.. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "  ....CC..^",
           /* line */ (const char *) "  ....CC.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " .......m. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCCC.....^",
           /* line */ (const char *) " .....C..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ..CCCCC..^",
           /* line */ (const char *) " m.CC.CC.. ",
           /* line */ (const char *) " ..CC.$C.. ",
           /* line */ (const char *) " ...CCCCC. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .$..      ",
           /* line */ (const char *) " ....      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  ...   .  ",
           /* line */ (const char *) "  .m.  $.  ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .....b.. ",
           /* line */ (const char *) "  B....... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ...$    ",
           /* line */ (const char *) "   ..b.    ",
           /* line */ (const char *) "   B......^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......C.. ",
           /* line */ (const char *) " C         ",
           /* line */ (const char *) " . $...... ",
           /* line */ (const char *) " .       m ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      C    ",
           /* line */ (const char *) "    C C  C ",
           /* line */ (const char *) "    CCCCCC ",
           /* line */ (const char *) " .CCCCCCCC ",
           /* line */ (const char *) "^....m....^",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) " CC CCCC C ",
           /* line */ (const char *) "  C  CCC   ",
           /* line */ (const char *) "     CC    ",
           /* line */ (const char *) "     C     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....C  $. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) "^...CC  .. ",
           /* line */ (const char *) " .CCCC   . ",
           /* line */ (const char *) " CCCC.....^",
           /* line */ (const char *) " CC      . ",
           /* line */ (const char *) "   $$..... ",
           /* line */ (const char *) "   $$      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^        ",
           /* line */ (const char *) "   ....     ",
           /* line */ (const char *) "   ..m.     ",
           /* line */ (const char *) "  .$..B     ",
           /* line */ (const char *) " C.C D      ",
           /* line */ (const char *) " C=C ...$   ",
           /* line */ (const char *) " C=C ....^  ",
           /* line */ (const char *) " C=C .m..   ",
           /* line */ (const char *) " C.C    s   ",
           /* line */ (const char *) "^...    ... ",
           /* line */ (const char *) "  ..D.ms..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .m.      ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "^....      ",
           /* line */ (const char *) "  $....... ",
           /* line */ (const char *) "    . ..$. ",
           /* line */ (const char *) " $..s .... ",
           /* line */ (const char *) " ....  .   ",
           /* line */ (const char *) " m...  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....CCC ",
           /* line */ (const char *) "   .b..CCC ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "    |.|  . ",
           /* line */ (const char *) "     .   C ",
           /* line */ (const char *) "     s   C ",
           /* line */ (const char *) "   .....CC ",
           /* line */ (const char *) "   .....C  ",
           /* line */ (const char *) "   .$..$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " .CCC.CCC. ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "  C.....C  ",
           /* line */ (const char *) "  C...$.C  ",
           /* line */ (const char *) "  CCCCCCC  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "^...CC  .. ",
           /* line */ (const char *) " ...CCC .. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " .CCCC   . ",
           /* line */ (const char *) " CCCC    . ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) " $C      C ",
           /* line */ (const char *) " .CCCCC  C ",
           /* line */ (const char *) " CCCCCC    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "$.. ...$   ",
           /* line */ (const char *) "...D....   ",
           /* line */ (const char *) "... ..m.^  ",
           /* line */ (const char *) " s         ",
           /* line */ (const char *) "..... $..  ",
           /* line */ (const char *) "$.... $..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ...CCCC. ",
           /* line */ (const char *) "  ...C.. C ",
           /* line */ (const char *) "  ...CC..C ",
           /* line */ (const char *) "^.....CCCC ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "    s  ... ",
           /* line */ (const char *) " $... .... ",
           /* line */ (const char *) " .C..  .   ",
           /* line */ (const char *) " m...  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ..CCCCC ",
           /* line */ (const char *) "  $C....CCC ",
           /* line */ (const char *) "    ..C...C ",
           /* line */ (const char *) "^.........$ ",
           /* line */ (const char *) "    .|.|... ",
           /* line */ (const char *) "      .     ",
           /* line */ (const char *) "      s     ",
           /* line */ (const char *) " $C.........",
           /* line */ (const char *) " CC..C.C..CC",
           /* line */ (const char *) " ...$.m.$.C$",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   CC      ",
           /* line */ (const char *) "   CCCC    ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) "   C CCC   ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) " CC.....   ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " m....$.   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ...CC  $. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " CCCCCC  . ",
           /* line */ (const char *) " CCCCC.... ",
           /* line */ (const char *) "    CCC  . ",
           /* line */ (const char *) " $C .CC  C ",
           /* line */ (const char *) " .CCCCC  C ",
           /* line */ (const char *) " CCCCCC    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^          ",
           /* line */ (const char *) " ...CC.CC.. ",
           /* line */ (const char *) " ....CCCC.$ ",
           /* line */ (const char *) " $$....CC.. ",
           /* line */ (const char *) "     D      ",
           /* line */ (const char *) "..C CCC...  ",
           /* line */ (const char *) "..CD......  ",
           /* line */ (const char *) "..C ..m...  ",
           /* line */ (const char *) " s    D     ",
           /* line */ (const char *) ".CC.. ..$..^",
           /* line */ (const char *) "..$.. $$$.  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....~.~. ",
           /* line */ (const char *) " $..~~~~~~ ",
           /* line */ (const char *) " ....~~~~~ ",
           /* line */ (const char *) " ....~~..B ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ..m~~~..B ",
           /* line */ (const char *) "  ........^",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ~~......B ",
           /* line */ (const char *) " ~~~...... ",
           /* line */ (const char *) " .~.~..... ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ...m~~~.. ",
           /* line */ (const char *) " ...~~~...^",
           /* line */ (const char *) " ..~~...$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..~~....  ",
           /* line */ (const char *) " $..~~.m.. ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ...~~~...^",
           /* line */ (const char *) " B....~~.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...CC..$. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ....C..m. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " .....C..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ...C....$ ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ....Cm...^",
           /* line */ (const char *) " m...C.... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " CCC.CC... ",
           /* line */ (const char *) " $.....C.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....~.~. ",
           /* line */ (const char *) " $..~~~~~~ ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ..m~~~..B ",
           /* line */ (const char *) "  ........^",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ~~......B ",
           /* line */ (const char *) " ~~~...... ",
           /* line */ (const char *) " ...m~~~.. ",
           /* line */ (const char *) " ...~~~...^",
           /* line */ (const char *) " ..~~...$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..~~....  ",
           /* line */ (const char *) " $..~~.m.. ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " B....~~.. ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...C.....^",
           /* line */ (const char *) " ...CC..$. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) "^.....C..$ ",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ...C....$ ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " CCC.CC... ",
           /* line */ (const char *) " $.....C.. ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....C.C. ",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " ....C..$. ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CC....... ",
           /* line */ (const char *) " CCC...$.. ",
           /* line */ (const char *) " .C.C..... ",
           /* line */ (const char *) " ...CCC...^",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "^..CC..... ",
           /* line */ (const char *) " ..CC..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..CC....$ ",
           /* line */ (const char *) " ...CC.m..^",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) "  ....CC.. ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) "^...CC..$. ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " .......m. ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " .....C..$ ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " ...C...$. ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " m.CC.CC.. ",
           /* line */ (const char *) " ..CC.$C.. ",
           /* line */ (const char *) "^...CCCCC. ",
           /* line */ (const char *) "  ....C...^",
           /* line */ (const char *) "  ....C... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .m.      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .....b.. ",
           /* line */ (const char *) "  B.$.....^",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....    ",
           /* line */ (const char *) "   ..b.    ",
           /* line */ (const char *) "   B.....$ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......C..^",
           /* line */ (const char *) " C         ",
           /* line */ (const char *) " . $...... ",
           /* line */ (const char *) " .       m ",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  CCCCCCC..",
           /* line */ (const char *) "^..........",
           /* line */ (const char *) "  CCCCCCC..",
           /* line */ (const char *) "   CC.$Cm..",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ...CC  $. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " CCCCC   .^",
           /* line */ (const char *) " CCCC..... ",
           /* line */ (const char *) " CC        ",
           /* line */ (const char *) "  C      $ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ..m.     ",
           /* line */ (const char *) "  $..B     ",
           /* line */ (const char *) "    D      ",
           /* line */ (const char *) "    ......^",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    .m..   ",
           /* line */ (const char *) "       D   ",
           /* line */ (const char *) " .$    ... ",
           /* line */ (const char *) " ..s.mD..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  $.. .... ",
           /* line */ (const char *) "  .m.s.... ",
           /* line */ (const char *) "  ... ...$ ",
           /* line */ (const char *) " ..        ",
           /* line */ (const char *) " ..s......^",
           /* line */ (const char *) "    . ..$. ",
           /* line */ (const char *) " $..s .... ",
           /* line */ (const char *) " ....  ^   ",
           /* line */ (const char *) " m...      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   $...CCC ",
           /* line */ (const char *) "   .b..CCC ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "    |.|  .^",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "   m....   ",
           /* line */ (const char *) "   ..m..   ",
           /* line */ (const char *) "   ....$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " .CCC.CCC. ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "  C.....C  ",
           /* line */ (const char *) "  C.m.$.C  ",
           /* line */ (const char *) "  CCCCCCC  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ...CC  $.^",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " CCCCC   . ",
           /* line */ (const char *) " CCCC    . ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) " $C      C ",
           /* line */ (const char *) " .CCCCC  C ",
           /* line */ (const char *) " CCCCCC    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....  ..^",
           /* line */ (const char *) "  ....D..m ",
           /* line */ (const char *) "  ....  .. ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "$.. ...$   ",
           /* line */ (const char *) "...D.... $ ",
           /* line */ (const char *) "... ..m. $ ",
           /* line */ (const char *) " s         ",
           /* line */ (const char *) "..... $..  ",
           /* line */ (const char *) "$...$ $..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ...CCCCC ",
           /* line */ (const char *) "  ...C...C ",
           /* line */ (const char *) "  ...C...C ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "    s  ... ",
           /* line */ (const char *) " .... .... ",
           /* line */ (const char *) " .C..  .   ",
           /* line */ (const char *) " m..$  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....CCC ",
           /* line */ (const char *) " $C....CCC ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "   .|.|...^",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   .C.C.   ",
           /* line */ (const char *) "   $.m.$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " CC.....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   .....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " ...CC  .. ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " CCCCC.  . ",
           /* line */ (const char *) "    CCC  . ",
           /* line */ (const char *) " $C .CC  C ",
           /* line */ (const char *) " .CCCCC  C ",
           /* line */ (const char *) " CCCCCC    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " .$.....   ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "..C CCC... ",
           /* line */ (const char *) "..CD...... ",
           /* line */ (const char *) "..C ..m... ",
           /* line */ (const char *) " s    s    ",
           /* line */ (const char *) ".CC.. ..$. ",
           /* line */ (const char *) "...$. $$$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ....~.~. ",
           /* line */ (const char *) " ...~~~~~~ ",
           /* line */ (const char *) " ....~~~~~ ",
           /* line */ (const char *) " ....~~..B ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ..m~~~..B ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ~~......B ",
           /* line */ (const char *) " ~~~...... ",
           /* line */ (const char *) " .~.~..... ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ...m~~~.. ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ..~~..... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ..~~....  ",
           /* line */ (const char *) " ...~~.m..^",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " B....~~.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  . .....  ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " .......m. ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "  . .....$ ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " .....m...^",
           /* line */ (const char *) " m......   ",
           /* line */ (const char *) " .......s. ",
           /* line */ (const char *) "^....... . ",
           /* line */ (const char *) " $...... $ ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "...~~~~~~~ ",
           /* line */ (const char *) ".....~~..B ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ~~......B.",
           /* line */ (const char *) " ~~~~~~....",
           /* line */ (const char *) " ~~~~......",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "^..~~~~....",
           /* line */ (const char *) " ...~~~~~..",
           /* line */ (const char *) " B.~~~~~~~.",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ..~~~~...",
           /* line */ (const char *) "^...~~~.m..",
           /* line */ (const char *) "  .~~~~..$.",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "   ..~~~.. ",
           /* line */ (const char *) " m..~~~...^",
           /* line */ (const char *) " $.~~~...$ ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "$..LLLLLLL ",
           /* line */ (const char *) "..LL.LL... ",
           /* line */ (const char *) ".LLL...... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " LL........",
           /* line */ (const char *) " .LLLLL....",
           /* line */ (const char *) " .LLL......",
           /* line */ (const char *) " ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "^..LLLL....",
           /* line */ (const char *) " ...LLLLL..",
           /* line */ (const char *) " ..LLLLLLL.",
           /* line */ (const char *) "  s       s",
           /* line */ (const char *) "  .........",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) "  ..LLLL... ",
           /* line */ (const char *) "^...LLL.m.. ",
           /* line */ (const char *) "  .LLLL..$. ",
           /* line */ (const char *) "  s    s. . ",
           /* line */ (const char *) "  ......  .^",
           /* line */ (const char *) "            ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "   ..LLL.. ",
           /* line */ (const char *) " m..L.L...^",
           /* line */ (const char *) " $.LLLL..$ ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ~~~~~~~~ ",
           /* line */ (const char *) " ~~~~~~~~~^",
           /* line */ (const char *) " ~~~~ ~~~~ ",
           /* line */ (const char *) " ~~~~~~ ~  ",
           /* line */ (const char *) " ~~~~~~~~~ ",
           /* line */ (const char *) " ~~~ ~~~~~ ",
           /* line */ (const char *) "  ~~~~~~~~ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "   ~~~~~~~ ",
           /* line */ (const char *) "  ~`~~~~ ~ ",
           /* line */ (const char *) " ~~``~~~~~ ",
           /* line */ (const char *) " ~~~`~~~~~^",
           /* line */ (const char *) " ~~~~~~~~~ ",
           /* line */ (const char *) " ~~~~~~~~  ",
           /* line */ (const char *) " ~~~~~~~   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ~~~~~~~~  ",
           /* line */ (const char *) " ~~~~~~m~~ ",
           /* line */ (const char *) " ~    ~~~~ ",
           /* line */ (const char *) " ~ m~s`~~~ ",
           /* line */ (const char *) " ~    `~~~ ",
           /* line */ (const char *) " ~~```~~~~ ",
           /* line */ (const char *) "  ~~~~~~~~^",
           /* line */ (const char *) "  ~~~~~~~~ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " ~~~~~~~`` ",
           /* line */ (const char *) " ~~~~~~~~` ",
           /* line */ (const char *) " ~~~~~~~~~ ",
           /* line */ (const char *) " ~~~~~~~m~ ",
           /* line */ (const char *) " ~     ~~~ ",
           /* line */ (const char *) " ~ ~m~ ~~~^",
           /* line */ (const char *) " ~s~~$ ~~$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ~~~~~~~~~ ",
           /* line */ (const char *) " ~~~~~   ~ ",
           /* line */ (const char *) " ~~~~~ $ ~ ",
           /* line */ (const char *) " m~~~~ s ~ ",
           /* line */ (const char *) " ~~~~~ ~~~ ",
           /* line */ (const char *) "^~~~~~~~~~ ",
           /* line */ (const char *) "  ~~~~~~~~ ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .m.      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .....b..^",
           /* line */ (const char *) "  B....... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ....    ",
           /* line */ (const char *) "   ..b.    ",
           /* line */ (const char *) "   B...... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " C         ",
           /* line */ (const char *) " . $...... ",
           /* line */ (const char *) " .       m ",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " $..... .. ",
           /* line */ (const char *) " ....m. .. ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "^.....   . ",
           /* line */ (const char *) " .m...   . ",
           /* line */ (const char *) " .....   . ",
           /* line */ (const char *) " .....   . ",
           /* line */ (const char *) " .....   . ",
           /* line */ (const char *) " ......... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ..m.....^",
           /* line */ (const char *) "  $..B     ",
           /* line */ (const char *) "    D      ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    .m..   ",
           /* line */ (const char *) "       D   ",
           /* line */ (const char *) " .$    ... ",
           /* line */ (const char *) " ..s.mD..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .m.      ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "    . ..$. ",
           /* line */ (const char *) "....D ....^",
           /* line */ (const char *) ".....  ^   ",
           /* line */ (const char *) ".m...      ",
           /* line */ (const char *) "....$      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^  ",
           /* line */ (const char *) "    .......  ",
           /* line */ (const char *) "    .b.....  ",
           /* line */ (const char *) "    .......  ",
           /* line */ (const char *) "^..........  ",
           /* line */ (const char *) "     |.|  ..^",
           /* line */ (const char *) "      .      ",
           /* line */ (const char *) "      s      ",
           /* line */ (const char *) " m.. ... $.$ ",
           /* line */ (const char *) " .m.s...s... ",
           /* line */ (const char *) " m.. ... $.$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ........L ",
           /* line */ (const char *) " L......LL ",
           /* line */ (const char *) " LL.....LL ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "  C.....C  ",
           /* line */ (const char *) "  CC.m.CC  ",
           /* line */ (const char *) "  $CCCCCC  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " .L...  .. ",
           /* line */ (const char *) " .L....... ",
           /* line */ (const char *) " .L...  .. ",
           /* line */ (const char *) " .L...   . ",
           /* line */ (const char *) " ....    . ",
           /* line */ (const char *) " s       . ",
           /* line */ (const char *) " $.      C ",
           /* line */ (const char *) " ......  C ",
           /* line */ (const char *) " ......    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "$.. ...$   ",
           /* line */ (const char *) "...s....   ",
           /* line */ (const char *) "... ..m.   ",
           /* line */ (const char *) " s         ",
           /* line */ (const char *) "..... $..  ",
           /* line */ (const char *) "$....s$..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "  LL...... ",
           /* line */ (const char *) "  L....... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "    s  ... ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " ....CC.   ",
           /* line */ (const char *) " m..$CC.   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "   ......L ",
           /* line */ (const char *) " $C....... ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   .|.|... ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   $.m.$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " LL......L ",
           /* line */ (const char *) " L.......L ",
           /* line */ (const char *) " L......LL ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) "$CC.....   ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ..... C.. ",
           /* line */ (const char *) " ..... C.. ",
           /* line */ (const char *) " ..... C.. ",
           /* line */ (const char *) " .....CC.. ",
           /* line */ (const char *) " ......CC. ",
           /* line */ (const char *) " ......CC. ",
           /* line */ (const char *) "    ```CC.^",
           /* line */ (const char *) " $. ..`CCC ",
           /* line */ (const char *) " ......CCC ",
           /* line */ (const char *) " ...$..  $ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " .......   ",
           /* line */ (const char *) " .$.......^",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "..C CCC... ",
           /* line */ (const char *) "..CD...... ",
           /* line */ (const char *) "..C ..m... ",
           /* line */ (const char *) " s    s    ",
           /* line */ (const char *) ".CC.. ..$. ",
           /* line */ (const char *) "..... $$$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".CCCCCCCCC.",
           /* line */ (const char *) "CCCCCCCCC. ",
           /* line */ (const char *) "CCCCCCCC.CC",
           /* line */ (const char *) "CCC.CCC.CCC",
           /* line */ (const char *) "$CCCCCCC.CC",
           /* line */ (const char *) "..CCCCCCC. ",
           /* line */ (const char *) "...CCCCC.  ",
           /* line */ (const char *) ".m..CCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".CCCCCCCCC.",
           /* line */ (const char *) "CC.CC.CCC. ",
           /* line */ (const char *) "CCCCCCCC.C ",
           /* line */ (const char *) "=======.CCC",
           /* line */ (const char *) ".CCCCCCC.CC",
           /* line */ (const char *) "..CCC.CCC. ",
           /* line */ (const char *) "...CCCCC.  ",
           /* line */ (const char *) ".m..CCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".C.==.CCCC.",
           /* line */ (const char *) "CC=CCCCCC. ",
           /* line */ (const char *) "CC=CCCCC.CC",
           /* line */ (const char *) "CC.CCCC.CCC",
           /* line */ (const char *) "$CCCCCCC.C ",
           /* line */ (const char *) "..CCCCCCC. ",
           /* line */ (const char *) "...CCCCC.  ",
           /* line */ (const char *) ".m..CCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".CC.==.CCC.",
           /* line */ (const char *) "CCCCCCCCC. ",
           /* line */ (const char *) ".CCCCCCC.CC",
           /* line */ (const char *) "CCCCCCC.CC ",
           /* line */ (const char *) "$CCCCCCC.CC",
           /* line */ (const char *) "..CCCCCCC. ",
           /* line */ (const char *) "..CCCCCC.  ",
           /* line */ (const char *) ".mCCCCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".CCCCCCCCC.",
           /* line */ (const char *) "CCCCCCCCC. ",
           /* line */ (const char *) "CCCCCCCC.C ",
           /* line */ (const char *) "CCC.CCC.CCC",
           /* line */ (const char *) "$CCCCCCC.C ",
           /* line */ (const char *) "..CCCCCCC. ",
           /* line */ (const char *) "..CCCCCC.  ",
           /* line */ (const char *) ".m.CCCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".CCCCCCCCC.",
           /* line */ (const char *) "CCCCCCCCC. ",
           /* line */ (const char *) "CCCCCCCC.CC",
           /* line */ (const char *) "CCC.CCC.CC ",
           /* line */ (const char *) "$CCCCCCC.CC",
           /* line */ (const char *) "..CCCCCCC. ",
           /* line */ (const char *) "...CCCCC.  ",
           /* line */ (const char *) ".m..CCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) ".CCCCCCCCC.",
           /* line */ (const char *) "CCCCCCCCC. ",
           /* line */ (const char *) "CC...CCC.C ",
           /* line */ (const char *) "CC.m.CC.CCC",
           /* line */ (const char *) "$CC..CCC.C ",
           /* line */ (const char *) ".CCCCCCCC. ",
           /* line */ (const char *) "..CCCCCC.  ",
           /* line */ (const char *) ".m.CCCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ..=CCCCC. ",
           /* line */ (const char *) ".CC=CCCCCC.",
           /* line */ (const char *) "=CC=CCCCC. ",
           /* line */ (const char *) "=CC=CCCC.C ",
           /* line */ (const char *) "=CC.===.CC ",
           /* line */ (const char *) "=CCCCCCC.C ",
           /* line */ (const char *) "...CCCCCC. ",
           /* line */ (const char *) "...CCCCC.  ",
           /* line */ (const char *) "$m.CCCC..  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) ". .........",
           /* line */ (const char *) ".. ....... ",
           /* line */ (const char *) "..g .......",
           /* line */ (const char *) ".... ......",
           /* line */ (const char *) "$.... g....",
           /* line */ (const char *) "...... ... ",
           /* line */ (const char *) "....... .  ",
           /* line */ (const char *) ".m.......  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) ". .........",
           /* line */ (const char *) ".. ....... ",
           /* line */ (const char *) "... ...... ",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "..... .....",
           /* line */ (const char *) "...... ... ",
           /* line */ (const char *) "....... .  ",
           /* line */ (const char *) ".m......   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ..........",
           /* line */ (const char *) ". .........",
           /* line */ (const char *) ".. ...g... ",
           /* line */ (const char *) "... ..... .",
           /* line */ (const char *) ".... ... ..",
           /* line */ (const char *) "$.... . .. ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) ".........  ",
           /* line */ (const char *) ".m.......  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "..C..... . ",
           /* line */ (const char *) ".. ..... ..",
           /* line */ (const char *) "..t..... . ",
           /* line */ (const char *) ".. . ... ..",
           /* line */ (const char *) "..  g .. . ",
           /* line */ (const char *) "$.   ......",
           /* line */ (const char *) "..         ",
           /* line */ (const char *) ".........  ",
           /* line */ (const char *) ".g.......  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) ".......g ..",
           /* line */ (const char *) "......g .. ",
           /* line */ (const char *) ".....g ... ",
           /* line */ (const char *) "...........",
           /* line */ (const char *) "$.. ...... ",
           /* line */ (const char *) ".... ..... ",
           /* line */ (const char *) "..... ...  ",
           /* line */ (const char *) ".m.......  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "...........",
           /* line */ (const char *) ".... . ... ",
           /* line */ (const char *) "..... .....",
           /* line */ (const char *) ".... . ... ",
           /* line */ (const char *) "$..........",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) ".........  ",
           /* line */ (const char *) ".m.......  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "........ ..",
           /* line */ (const char *) ".. ....... ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) "...m... ...",
           /* line */ (const char *) "$......... ",
           /* line */ (const char *) ".... ..... ",
           /* line */ (const char *) ".........  ",
           /* line */ (const char *) ".m.......  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "...... ....",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) "... ...... ",
           /* line */ (const char *) "........ . ",
           /* line */ (const char *) ".......... ",
           /* line */ (const char *) ".... ..... ",
           /* line */ (const char *) ".........  ",
           /* line */ (const char *) "$m.. ....  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "        C.C",
           /* line */ (const char *) "      L.CCC",
           /* line */ (const char *) "     LL.C.C",
           /* line */ (const char *) "    LLL.CtC",
           /* line */ (const char *) " LLLLLL.C.C",
           /* line */ (const char *) " L   LL.CCC",
           /* line */ (const char *) " L    L.C.C",
           /* line */ (const char *) " ...$   C.C",
           /* line */ (const char *) " ...$  ... ",
           /* line */ (const char *) " $$$$  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "        C.C",
           /* line */ (const char *) "       CC.C",
           /* line */ (const char *) "      CCCCC",
           /* line */ (const char *) "     CCCCtC",
           /* line */ (const char *) "       CCCC",
           /* line */ (const char *) "     CCCC.C",
           /* line */ (const char *) "        C.C",
           /* line */ (const char *) "    CCCCC.C",
           /* line */ (const char *) "   CCCC...C",
           /* line */ (const char *) "  CCCCC.CCC",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) ".D.m.... . ",
           /* line */ (const char *) ".      D . ",
           /* line */ (const char *) ". .... . . ",
           /* line */ (const char *) ". .  . . . ",
           /* line */ (const char *) ". . $. m . ",
           /* line */ (const char *) ". .    . . ",
           /* line */ (const char *) ". .m..D. . ",
           /* line */ (const char *) ".        . ",
           /* line */ (const char *) "..C.C.C... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) "         C ",
           /* line */ (const char *) " LLLLLLL . ",
           /* line */ (const char *) " Lg..... t ",
           /* line */ (const char *) " L.$CC.. . ",
           /* line */ (const char *) " L.$CC..DC ",
           /* line */ (const char *) " Lg..... . ",
           /* line */ (const char *) " LLLLLLL . ",
           /* line */ (const char *) "       ... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) ".C.C.C.C.. ",
           /* line */ (const char *) ".        . ",
           /* line */ (const char *) ".  ....$ . ",
           /* line */ (const char *) ".  .~~~. . ",
           /* line */ (const char *) ".  .~~~. . ",
           /* line */ (const char *) ".  ..... . ",
           /* line */ (const char *) "D  D     . ",
           /* line */ (const char *) "....     . ",
           /* line */ (const char *) ".m..   ... ",
           /* line */ (const char *) "..$.   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "  CCCC   . ",
           /* line */ (const char *) "  CCCCC  . ",
           /* line */ (const char *) " CCCCCCCC. ",
           /* line */ (const char *) "$========t ",
           /* line */ (const char *) ".CCCCCCCC. ",
           /* line */ (const char *) ".  CCCCC . ",
           /* line */ (const char *) "..  CCC. . ",
           /* line */ (const char *) "....     . ",
           /* line */ (const char *) ".m..CCC... ",
           /* line */ (const char *) "....   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "m... ~~~ . ",
           /* line */ (const char *) "....D~$~ . ",
           /* line */ (const char *) "..C. ~~~ C ",
           /* line */ (const char *) "  D      . ",
           /* line */ (const char *) "....     t ",
           /* line */ (const char *) "....     . ",
           /* line */ (const char *) ".C..     C ",
           /* line */ (const char *) " D       . ",
           /* line */ (const char *) "....     . ",
           /* line */ (const char *) ".m..CCC... ",
           /* line */ (const char *) "....   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "..       . ",
           /* line */ (const char *) ".  ..... = ",
           /* line */ (const char *) "=  ...g. = ",
           /* line */ (const char *) "=  ..$.. = ",
           /* line */ (const char *) "=  .g... = ",
           /* line */ (const char *) "t  ..... = ",
           /* line */ (const char *) ".. s     = ",
           /* line */ (const char *) "....     . ",
           /* line */ (const char *) ".m..CCC... ",
           /* line */ (const char *) "....   .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   ..t..   ",
           /* line */ (const char *) "  ..`....  ",
           /* line */ (const char *) " ...|`|... ",
           /* line */ (const char *) "^...`T`...^",
           /* line */ (const char *) " ...|`|... ",
           /* line */ (const char *) "  ....`..  ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "     ...   ",
           /* line */ (const char *) "    .....  ",
           /* line */ (const char *) "   ..```.. ",
           /* line */ (const char *) " ...CCC`.. ",
           /* line */ (const char *) " ..`C$C`.  ",
           /* line */ (const char *) "  .`CCC.   ",
           /* line */ (const char *) "   ````    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    .t.    ",
           /* line */ (const char *) "   ..C..   ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ..CCCCC..^",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "    `..    ",
           /* line */ (const char *) "    |`|    ",
           /* line */ (const char *) "     $     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  ...C...  ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ..CC$CC.. ",
           /* line */ (const char *) " ...CCC...^",
           /* line */ (const char *) "  ...CCC.. ",
           /* line */ (const char *) "   ..$m... ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "     ...`  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "    ...    ",
           /* line */ (const char *) "   .. ..   ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " .. ` . $.^",
           /* line */ (const char *) "  ..``...  ",
           /* line */ (const char *) "   `````   ",
           /* line */ (const char *) "    CCC    ",
           /* line */ (const char *) "    .$.    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .m...C..$ ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " ..=====.. ",
           /* line */ (const char *) " .CCCCCCC. ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " B..CC...$ ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       ...^",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "     ..$.B ",
           /* line */ (const char *) "    .C.... ",
           /* line */ (const char *) "   .CC.... ",
           /* line */ (const char *) " .gCCCCC.. ",
           /* line */ (const char *) " ...CC....^",
           /* line */ (const char *) " ..$.C..   ",
           /* line */ (const char *) " B.....    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^  ",
           /* line */ (const char *) " B.m..C...  ",
           /* line */ (const char *) " ....C..$.  ",
           /* line */ (const char *) " ...CCCC..  ",
           /* line */ (const char *) " ..CCCCCC..^",
           /* line */ (const char *) "  CCCCC$    ",
           /* line */ (const char *) "   CCCCC    ",
           /* line */ (const char *) "   ..mCCCC  ",
           /* line */ (const char *) "   $.CCCCC  ",
           /* line */ (const char *) "  CCCCC     ",
           /* line */ (const char *) "    CCCCC.$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " B.......B ",
           /* line */ (const char *) " ....C...m ",
           /* line */ (const char *) " ...CC....M",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " t   T   . ",
           /* line */ (const char *) " .       . ",
           /* line */ (const char *) " .$..$m... ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .  M....",
           /* line */ (const char *) "   .  .$ T.",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     t     ",
           /* line */ (const char *) " $.. . ...M",
           /* line */ (const char *) " CCC . CCC ",
           /* line */ (const char *) " ...===..m ",
           /* line */ (const char *) " .$. . ... ",
           /* line */ (const char *) " ... C  .. ",
           /* line */ (const char *) " B...CCs.$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " C.C.C.C.C ",
           /* line */ (const char *) " .C...C. . ",
           /* line */ (const char *) " C. .C.C.C ",
           /* line */ (const char *) "^.C.C.t.C.^",
           /* line */ (const char *) " C.C.C.g.C ",
           /* line */ (const char *) " ... .C.C. ",
           /* line */ (const char *) " C.C.C. .C ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " $..C=C..  ",
           /* line */ (const char *) " ...C=C... ",
           /* line */ (const char *) " ...C=C..$ ",
           /* line */ (const char *) " CCCC=C... ",
           /* line */ (const char *) "^=====Ct..^",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ...m..... ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g.....C.. ",
           /* line */ (const char *) " .b...CCC. ",
           /* line */ (const char *) " ......C.. ",
           /* line */ (const char *) "^...C..... ",
           /* line */ (const char *) " ..CCC....^",
           /* line */ (const char *) " ...C..b.. ",
           /* line */ (const char *) " .......g. ",
           /* line */ (const char *) "  .......b ",
           /* line */ (const char *) "   . . .   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   . ...M. ",
           /* line */ (const char *) "   . .$... ",
           /* line */ (const char *) "   .    .. ",
           /* line */ (const char *) "^...... .T ",
           /* line */ (const char *) "      s    ",
           /* line */ (const char *) " ....|.|.. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCC....b. ",
           /* line */ (const char *) " ..C..m... ",
           /* line */ (const char *) " T.C......^",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  CCCCCCC.. ",
           /* line */ (const char *) "  ....===.m ",
           /* line */ (const char *) "  ....CCC.. ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  b..b      ",
           /* line */ (const char *) "  ........  ",
           /* line */ (const char *) "  ......m..^",
           /* line */ (const char *) "  ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " ..C.C.C.. ",
           /* line */ (const char *) " .C...C.C. ",
           /* line */ (const char *) " C.C.C.C.C ",
           /* line */ (const char *) " .C.C.t...^",
           /* line */ (const char *) " C.C.C.m.C ",
           /* line */ (const char *) " ...C...CC ",
           /* line */ (const char *) "^..C.C.CC. ",
           /* line */ (const char *) "         s ",
           /* line */ (const char *) "      .... ",
           /* line */ (const char *) "      ..$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   .C.....   ",
           /* line */ (const char *) "  C.C.|.|..  ",
           /* line */ (const char *) "  C.C......  ",
           /* line */ (const char *) " .CmCbCCC... ",
           /* line */ (const char *) "^========.g.^",
           /* line */ (const char *) " .C.CbCCC... ",
           /* line */ (const char *) "  C.C......  ",
           /* line */ (const char *) "  C.C. . ..  ",
           /* line */ (const char *) "   .C.....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  $C...C$  ",
           /* line */ (const char *) "  CC...CC  ",
           /* line */ (const char *) "^....g...  ",
           /* line */ (const char *) "  ........^",
           /* line */ (const char *) "  CC...CC  ",
           /* line */ (const char *) " .$C...C$. ",
           /* line */ (const char *) " .   .   . ",
           /* line */ (const char *) " ...m..... ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "  |.|      ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "^..t...    ",
           /* line */ (const char *) "      s    ",
           /* line */ (const char *) " g.......$ ",
           /* line */ (const char *) " .....m...^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCC  s    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) " LLLLL     ",
           /* line */ (const char *) " L....     ",
           /* line */ (const char *) "  ...mL    ",
           /* line */ (const char *) "  LLLLL    ",
           /* line */ (const char *) "  ....L    ",
           /* line */ (const char *) "  ....L    ",
           /* line */ (const char *) "^....LL... ",
           /* line */ (const char *) "  ...L....^",
           /* line */ (const char *) "  ..LL.... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " C........ ",
           /* line */ (const char *) " .C.CC.... ",
           /* line */ (const char *) " .CC..C... ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " m..C....g ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "  ....C... ",
           /* line */ (const char *) "  ....C.$. ",
           /* line */ (const char *) " ..m..C... ",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ...C.  .. ",
           /* line */ (const char *) " .g.C....  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ...C....B ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " . ..CC... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " . .C.m... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " B....C..m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ...C....G ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ..CCt.... ",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " .m....... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " G....C... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ....CCCC. ",
           /* line */ (const char *) " CCCCCCC.. ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ...C.C..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " ....C..g$ ",
           /* line */ (const char *) " ....Ct... ",
           /* line */ (const char *) " ....CCt.. ",
           /* line */ (const char *) " ....CCCCC ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " m........ ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) " ..m..C... ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " CCCCCCt.. ",
           /* line */ (const char *) " g....t..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   ..C...B ",
           /* line */ (const char *) "  ..CC.... ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ..C...... ",
           /* line */ (const char *) " .C...m... ",
           /* line */ (const char *) " ...   ... ",
           /* line */ (const char *) " B..   ..m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ........G ",
           /* line */ (const char *) " .b.... .. ",
           /* line */ (const char *) " ...C... . ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ...   ... ",
           /* line */ (const char *) " ...   .m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " G...  ... ",
           /* line */ (const char *) " ..... . . ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) "     .C. . ",
           /* line */ (const char *) "     .C... ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ..m.....$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  B.B .... ",
           /* line */ (const char *) "  ... ...$ ",
           /* line */ (const char *) "  ... T..M ",
           /* line */ (const char *) "^....      ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .m....T. ",
           /* line */ (const char *) "  B....... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   ...B  T ",
           /* line */ (const char *) "   ....  s ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " .......m. ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) "  ~        ",
           /* line */ (const char *) "  ~   M..$ ",
           /* line */ (const char *) "  ~   .LL. ",
           /* line */ (const char *) " |~|  .LL. ",
           /* line */ (const char *) "  ~   T..M ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " B.......B ",
           /* line */ (const char *) "^...m..... ",
           /* line */ (const char *) " B.......B ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "    |.|    ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   ....$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) " .B.B.  $. ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " B....  .. ",
           /* line */ (const char *) " .m...  .. ",
           /* line */ (const char *) " B....   . ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "       ~   ",
           /* line */ (const char *) "       ~   ",
           /* line */ (const char *) "       ~   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "  .m..     ",
           /* line */ (const char *) "  ......t.^",
           /* line */ (const char *) "  B$.B  ~  ",
           /* line */ (const char *) "        ~  ",
           /* line */ (const char *) "        ~  ",
           /* line */ (const char *) "        ~  ",
           /* line */ (const char *) "        ~  ",
           /* line */ (const char *) "^..~~~~~~  ",
           /* line */ (const char *) "        ~  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ...C.    ",
           /* line */ (const char *) "  ...C$    ",
           /* line */ (const char *) "  ...C.    ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  D   .... ",
           /* line */ (const char *) "  m   ....^",
           /* line */ (const char *) " .D..D.... ",
           /* line */ (const char *) " ....  .   ",
           /* line */ (const char *) " G... B.B  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) " .....   .^",
           /* line */ (const char *) " .CC..  .. ",
           /* line */ (const char *) " .C...CC.m ",
           /* line */ (const char *) " .CC..  .. ",
           /* line */ (const char *) " ..C..   . ",
           /* line */ (const char *) " ....    . ",
           /* line */ (const char *) "  s      . ",
           /* line */ (const char *) "  C      C ",
           /* line */ (const char *) " ......  C ",
           /* line */ (const char *) " ..m..$    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....C$   ",
           /* line */ (const char *) "  .CC.     ",
           /* line */ (const char *) "  ....     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "... ......^",
           /* line */ (const char *) "...D....   ",
           /* line */ (const char *) "... ..G.   ",
           /* line */ (const char *) " s         ",
           /* line */ (const char *) "..... ...  ",
           /* line */ (const char *) ".....D.m.  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ....B.... ",
           /* line */ (const char *) "^.......b. ",
           /* line */ (const char *) " ...B.B...^",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "   ...m$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " B....  .  ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " ..M..  .. ",
           /* line */ (const char *) " .....  .. ",
           /* line */ (const char *) " ......s.. ",
           /* line */ (const char *) " ......  m ",
           /* line */ (const char *) "    .t.  . ",
           /* line */ (const char *) " $. ...  C ",
           /* line */ (const char *) " ......  . ",
           /* line */ (const char *) " ......  $ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "^......     ",
           /* line */ (const char *) "   ....     ",
           /* line */ (const char *) "   B...     ",
           /* line */ (const char *) "      D     ",
           /* line */ (const char *) " ... ....   ",
           /* line */ (const char *) " ...D....   ",
           /* line */ (const char *) " ... ..G.   ",
           /* line */ (const char *) "  s    D    ",
           /* line */ (const char *) " ..... ....^",
           /* line */ (const char *) " $...B B..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  D        ",
           /* line */ (const char *) "  m.mm.D..^",
           /* line */ (const char *) "  .m.m.    ",
           /* line */ (const char *) "  $.mm.    ",
           /* line */ (const char *) "  .m.m$    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .......^",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) " .s....... ",
           /* line */ (const char *) " .  .....  ",
           /* line */ (const char *) " .   .t.   ",
           /* line */ (const char *) " .    .    ",
           /* line */ (const char *) " .    s    ",
           /* line */ (const char *) "$.LL..m..  ",
           /* line */ (const char *) "$.LL.m...  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  . $$   .^",
           /* line */ (const char *) "  C ..  .. ",
           /* line */ (const char *) "  . ..ss.m ",
           /* line */ (const char *) "  C ..   C ",
           /* line */ (const char *) "  . .. $ . ",
           /* line */ (const char *) "  Cs.. C C ",
           /* line */ (const char *) "  .    . . ",
           /* line */ (const char *) "  C .... C ",
           /* line */ (const char *) " .....m... ",
           /* line */ (const char *) " ..m....m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) "  D         ",
           /* line */ (const char *) "  m....D...^",
           /* line */ (const char *) "  .m...     ",
           /* line */ (const char *) "  $....     ",
           /* line */ (const char *) "  .m..$     ",
           /* line */ (const char *) "   s        ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  ...LL..$. ",
           /* line */ (const char *) "  ..LL.M..$ ",
           /* line */ (const char *) "  .LL....$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   . b..b  ",
           /* line */ (const char *) " .s.......^",
           /* line */ (const char *) " ` ...M... ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " .  b...b  ",
           /* line */ (const char *) " M   ...   ",
           /* line */ (const char *) " .    .    ",
           /* line */ (const char *) " .    s    ",
           /* line */ (const char *) "$.LL..m..  ",
           /* line */ (const char *) "$.LL.m...  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) " D         ",
           /* line */ (const char *) " m.... b.. ",
           /* line */ (const char *) " ..m......^",
           /* line */ (const char *) " m..m. b.. ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) "     D     ",
           /* line */ (const char *) "   .CCC.   ",
           /* line */ (const char *) "   $$$$$   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  . $$   .^",
           /* line */ (const char *) "  L ..  .. ",
           /* line */ (const char *) "  . ..ss.m ",
           /* line */ (const char *) "  L ..   L ",
           /* line */ (const char *) "  . .. $ . ",
           /* line */ (const char *) "  Ls.. L L ",
           /* line */ (const char *) "  .    . . ",
           /* line */ (const char *) "  L L... L ",
           /* line */ (const char *) " ..L..m... ",
           /* line */ (const char *) " .Lm....m. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) "  D         ",
           /* line */ (const char *) "  .....Dt..^",
           /* line */ (const char *) "  .....     ",
           /* line */ (const char *) "  $....     ",
           /* line */ (const char *) "  .b..$     ",
           /* line */ (const char *) "   s        ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  ...~~..$. ",
           /* line */ (const char *) "  ..~~....$ ",
           /* line */ (const char *) "  .~~....$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   . b..b  ",
           /* line */ (const char *) " .sb......^",
           /* line */ (const char *) " ` ....... ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " .  b...b  ",
           /* line */ (const char *) " .   ...   ",
           /* line */ (const char *) " .    .    ",
           /* line */ (const char *) " .    s    ",
           /* line */ (const char *) "$.~~.....  ",
           /* line */ (const char *) "$.~~.....  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) " ........   ",
           /* line */ (const char *) " D          ",
           /* line */ (const char *) " ..... b..  ",
           /* line */ (const char *) " .LLL......^",
           /* line */ (const char *) " ..... b..  ",
           /* line */ (const char *) "     s      ",
           /* line */ (const char *) "     s      ",
           /* line */ (const char *) "   .CCC.    ",
           /* line */ (const char *) "   .CCC.    ",
           /* line */ (const char *) "$$ ..... $$ ",
           /* line */ (const char *) "$$s..M..s$$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  . $$   .^",
           /* line */ (const char *) "  ~ ..  .. ",
           /* line */ (const char *) "  . ..ss.. ",
           /* line */ (const char *) "  ~ ..   ~ ",
           /* line */ (const char *) "  . .. $ . ",
           /* line */ (const char *) "  ~s.. ~ ~ ",
           /* line */ (const char *) "  .    . . ",
           /* line */ (const char *) "  ~ ~... ~ ",
           /* line */ (const char *) " ..~...... ",
           /* line */ (const char *) " .~....... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  m..bs... ",
           /* line */ (const char *) "  ....   . ",
           /* line */ (const char *) "  b..m   $ ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) "... G...C.^",
           /* line */ (const char *) "...C.G..   ",
           /* line */ (const char *) "... ..G.   ",
           /* line */ (const char *) " s         ",
           /* line */ (const char *) "..... .$$  ",
           /* line */ (const char *) ".....s.$$  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " B.......B ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " . .CCC. . ",
           /* line */ (const char *) " ..CCCCC.. ",
           /* line */ (const char *) " ..CCCC. . ",
           /* line */ (const char *) " . .CCC... ",
           /* line */ (const char *) " G.......B ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " .M....C.. ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ..CC$CC.. ",
           /* line */ (const char *) " ...CCCC.b ",
           /* line */ (const char *) " ....GC... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " B........ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " .b.....B  ",
           /* line */ (const char *) " ...CCC..  ",
           /* line */ (const char *) " . ..GC... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " . ...C... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " B.......M ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  ..CCC.   ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ..CCCCG.. ",
           /* line */ (const char *) " ..CM$C... ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) "  .......  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " G......B  ",
           /* line */ (const char *) " ...CCC..  ",
           /* line */ (const char *) "^. ...C..^ ",
           /* line */ (const char *) "  ..CCC.   ",
           /* line */ (const char *) " .....C.   ",
           /* line */ (const char *) "   .CCC.   ",
           /* line */ (const char *) "  ......B  ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .....L..L ",
           /* line */ (const char *) " M..LLL... ",
           /* line */ (const char *) " ...LLL..b ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " .....L..M ",
           /* line */ (const char *) " ..L..L... ",
           /* line */ (const char *) " ..L...... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ...t..L.. ",
           /* line */ (const char *) " M..L.LL.. ",
           /* line */ (const char *) " ...LLLL..^",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " ....LL... ",
           /* line */ (const char *) " L...LL... ",
           /* line */ (const char *) " LL..LL..L ",
           /* line */ (const char *) "    . L    ",
           /* line */ (const char *) "    t L    ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " ........L ",
           /* line */ (const char *) " LLLLLL... ",
           /* line */ (const char *) " ...LLLL.. ",
           /* line */ (const char *) " . .LLL... ",
           /* line */ (const char *) " .....L... ",
           /* line */ (const char *) " ..M..L. . ",
           /* line */ (const char *) "  ....t... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "  .t...... ",
           /* line */ (const char *) " ...L.LLLL ",
           /* line */ (const char *) " ...LMLL.. ",
           /* line */ (const char *) " ...LLLL..^",
           /* line */ (const char *) " . ..LL... ",
           /* line */ (const char *) " .. ..L... ",
           /* line */ (const char *) "  ....L.G$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "^...t.t..  ",
           /* line */ (const char *) " ...L.L...^",
           /* line */ (const char *) " ...L.L... ",
           /* line */ (const char *) " LLLLLL... ",
           /* line */ (const char *) " ..LLLLLLL ",
           /* line */ (const char *) " .....LL..^",
           /* line */ (const char *) " $..m.L..  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " M........ ",
           /* line */ (const char *) " ...LLLLLL ",
           /* line */ (const char *) " ..LLL...$ ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " .....L... ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) " ..L.....G ",
           /* line */ (const char *) "      ..~  ",
           /* line */ (const char *) "       .~  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ........M ",
           /* line */ (const char *) " M..LLL... ",
           /* line */ (const char *) " ...L..... ",
           /* line */ (const char *) " ..LL$L.$. ",
           /* line */ (const char *) " .....L... ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " M......b. ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....LL.. ",
           /* line */ (const char *) " ...LLLL..^",
           /* line */ (const char *) " ...L$LL.. ",
           /* line */ (const char *) " ..LL.LL.. ",
           /* line */ (const char *) " ..LM.L... ",
           /* line */ (const char *) " ..LLLL..  ",
           /* line */ (const char *) " ..M....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ........G ",
           /* line */ (const char *) " M..LLL... ",
           /* line */ (const char *) " ...LLLL.. ",
           /* line */ (const char *) " ..LLLL.M. ",
           /* line */ (const char *) " ..LLLL... ",
           /* line */ (const char *) "  .LLLL..  ",
           /* line */ (const char *) "   .LL..   ",
           /* line */ (const char *) "    L      ",
           /* line */ (const char *) "    LL  LL ",
           /* line */ (const char *) "        LL ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) " ...LLL..  ",
           /* line */ (const char *) " LLLLL...  ",
           /* line */ (const char *) " L$..$L... ",
           /* line */ (const char *) " L..M.L...^",
           /* line */ (const char *) " LLLLLL.   ",
           /* line */ (const char *) " ..L.L.... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " .....C..C ",
           /* line */ (const char *) " M..CCC... ",
           /* line */ (const char *) " ...CCC..b ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) " .....C..M ",
           /* line */ (const char *) " ..C..C... ",
           /* line */ (const char *) " ..C...... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ...t..C.. ",
           /* line */ (const char *) " M..C.CC.. ",
           /* line */ (const char *) " ...CCCC..^",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " ....CC... ",
           /* line */ (const char *) " C...CC... ",
           /* line */ (const char *) " CC..CC..C ",
           /* line */ (const char *) "    . C    ",
           /* line */ (const char *) "    t C    ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " ........C ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " . .CCC... ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ..M..C. . ",
           /* line */ (const char *) "  ....t... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "  .t...... ",
           /* line */ (const char *) " ...C.CCCC ",
           /* line */ (const char *) " ...CMCC.. ",
           /* line */ (const char *) " ...CCCC..^",
           /* line */ (const char *) " . ..CC... ",
           /* line */ (const char *) " .. ..C... ",
           /* line */ (const char *) "  ....C.G$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "^...t.t..  ",
           /* line */ (const char *) " ...C.C...^",
           /* line */ (const char *) " ...C.C... ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " ..CCCCCCC ",
           /* line */ (const char *) " .....CC..^",
           /* line */ (const char *) " $..m.C..  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " M........ ",
           /* line */ (const char *) " ...CCCCCC ",
           /* line */ (const char *) " ..CCC...$ ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) " ..C.....G ",
           /* line */ (const char *) "      ..~  ",
           /* line */ (const char *) "       .~  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ........M ",
           /* line */ (const char *) " M..CCC... ",
           /* line */ (const char *) " ...C..... ",
           /* line */ (const char *) " ..CC$C.$. ",
           /* line */ (const char *) " .....C... ",
           /* line */ (const char *) " ...CCC... ",
           /* line */ (const char *) " M......b. ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  ....CC.. ",
           /* line */ (const char *) " ...CCCC..^",
           /* line */ (const char *) " ...C$CC.. ",
           /* line */ (const char *) " ..CC.CC.. ",
           /* line */ (const char *) " ..CM.C... ",
           /* line */ (const char *) " ..CCCC..  ",
           /* line */ (const char *) " ..M....   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ........G ",
           /* line */ (const char *) " M..CCC... ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ..CCCC.M. ",
           /* line */ (const char *) " ..CCCC... ",
           /* line */ (const char *) "  .CCCC..  ",
           /* line */ (const char *) "   .CC..   ",
           /* line */ (const char *) "    C      ",
           /* line */ (const char *) "    CC  CC ",
           /* line */ (const char *) "        CC ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "^......    ",
           /* line */ (const char *) " ...CCC..  ",
           /* line */ (const char *) " CCCCC...  ",
           /* line */ (const char *) " C$..$C... ",
           /* line */ (const char *) " C..M.C...^",
           /* line */ (const char *) " CCCCCC.   ",
           /* line */ (const char *) " ..C.C.... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " B...~~~.. ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ...~~.M.. ",
           /* line */ (const char *) " ..~~~~... ",
           /* line */ (const char *) " ..~~~~... ",
           /* line */ (const char *) "  ..~~~... ",
           /* line */ (const char *) "   ......B ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "  ~~~~~~   ",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ~~~~....B ",
           /* line */ (const char *) " ..~~~~... ",
           /* line */ (const char *) " ...~..... ",
           /* line */ (const char *) " ...~~~M..^",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " B..~~~..b ",
           /* line */ (const char *) "   .~~~..  ",
           /* line */ (const char *) "    .~~.   ",
           /* line */ (const char *) "     .~.   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .~~~....B ",
           /* line */ (const char *) " ...~~~.M. ",
           /* line */ (const char *) " ...~..... ",
           /* line */ (const char *) " . .~~~... ",
           /* line */ (const char *) " ...~~~. . ",
           /* line */ (const char *) " M..~~~... ",
           /* line */ (const char *) " .....~~.. ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " B.......  ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " . .~....M ",
           /* line */ (const char *) " ...~~~...^",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " M.~~~~. . ",
           /* line */ (const char *) " .~~...... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "^........M ",
           /* line */ (const char *) " ...~~~... ",
           /* line */ (const char *) " ...~....B ",
           /* line */ (const char *) " ...~~~. .^",
           /* line */ (const char *) " M..~~~... ",
           /* line */ (const char *) " ..~~~~~.. ",
           /* line */ (const char *) " .~~~..~~. ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      .b.  ",
           /* line */ (const char *) "      M$..^",
           /* line */ (const char *) "      .b.  ",
           /* line */ (const char *) "       s   ",
           /* line */ (const char *) "      b.b  ",
           /* line */ (const char *) "      .$.  ",
           /* line */ (const char *) "      b.b  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   .$.     ",
           /* line */ (const char *) "   $.$     ",
           /* line */ (const char *) "   LLL     ",
           /* line */ (const char *) "   LLL     ",
           /* line */ (const char *) "    s      ",
           /* line */ (const char *) "    M.....^",
           /* line */ (const char *) "   ...b.   ",
           /* line */ (const char *) "   .$...   ",
           /* line */ (const char *) "   .b..    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  ^....    ",
           /* line */ (const char *) "    ...... ",
           /* line */ (const char *) "    .M..$. ",
           /* line */ (const char *) "      ....^",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "  M..      ",
           /* line */ (const char *) "  .....    ",
           /* line */ (const char *) "  .$...    ",
           /* line */ (const char *) "  ........^",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^     ",
           /* line */ (const char *) "    .     ",
           /* line */ (const char *) "    M     ",
           /* line */ (const char *) ".. ...    ",
           /* line */ (const char *) "$.s.$.    ",
           /* line */ (const char *) ".. ......^",
           /* line */ (const char *) "   ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " $t......B ",
           /* line */ (const char *) " t.LLL.... ",
           /* line */ (const char *) " LLLL$L... ",
           /* line */ (const char *) " ..L.L.... ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " $$....... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g........ ",
           /* line */ (const char *) " ...LL..$. ",
           /* line */ (const char *) " ..L$LL... ",
           /* line */ (const char *) " ..L.L.... ",
           /* line */ (const char *) " LLL.L....^",
           /* line */ (const char *) " ....LLL.. ",
           /* line */ (const char *) " $...L.... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " LL.....L  ",
           /* line */ (const char *) " L..LL...L ",
           /* line */ (const char *) " ..LLLL.$. ",
           /* line */ (const char *) " ...$L....^",
           /* line */ (const char *) " ....L.m.. ",
           /* line */ (const char *) " ..m.L.... ",
           /* line */ (const char *) " ....L...$ ",
           /* line */ (const char *) "  s  .     ",
           /* line */ (const char *) " $$  .     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " L......L$ ",
           /* line */ (const char *) " ...LLL... ",
           /* line */ (const char *) " LLLL$LLLL ",
           /* line */ (const char *) " ...LLL...^",
           /* line */ (const char *) " ....L..b. ",
           /* line */ (const char *) " L ..L.... ",
           /* line */ (const char *) " L ......$ ",
           /* line */ (const char *) " .     s   ",
           /* line */ (const char *) " .     ..$ ",
           /* line */ (const char *) "       .$$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " L.....L.$ ",
           /* line */ (const char *) " ...LL.L.. ",
           /* line */ (const char *) " ..LLLL.LL^",
           /* line */ (const char *) " ....L.... ",
           /* line */ (const char *) " ...$L..L. ",
           /* line */ (const char *) " LLLLL.LL. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "  s      . ",
           /* line */ (const char *) " $.   m..s ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " $.......B ",
           /* line */ (const char *) " ..CCC.... ",
           /* line */ (const char *) " CCCCCC... ",
           /* line */ (const char *) " ..CCC.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " $$....... ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g.......$ ",
           /* line */ (const char *) " ...CC.... ",
           /* line */ (const char *) " ..CCCC...^",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " CCC.C.... ",
           /* line */ (const char *) " ....CCC.. ",
           /* line */ (const char *) " $...C.... ",
           /* line */ (const char *) "    s      ",
           /* line */ (const char *) "   $..$    ",
           /* line */ (const char *) "   $..$    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " CC....CC$ ",
           /* line */ (const char *) " C..CC..CC^",
           /* line */ (const char *) " ..CCCC..C ",
           /* line */ (const char *) " ....C.... ",
           /* line */ (const char *) " ....C.m.. ",
           /* line */ (const char *) " ..m.C.... ",
           /* line */ (const char *) " $...C.... ",
           /* line */ (const char *) " s   .  s  ",
           /* line */ (const char *) " $   .  .$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " C....CCCC ",
           /* line */ (const char *) " ...CCC.$C ",
           /* line */ (const char *) " CCC..CCCC ",
           /* line */ (const char *) " ....CCCC. ",
           /* line */ (const char *) " ....C..b. ",
           /* line */ (const char *) " C ..C.... ",
           /* line */ (const char *) " C ......$ ",
           /* line */ (const char *) " s      s  ",
           /* line */ (const char *) " .   $. .$ ",
           /* line */ (const char *) " CCCC$. .. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " C.....C.$ ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) " ..CCCC$CC ",
           /* line */ (const char *) " ....CCCC. ",
           /* line */ (const char *) " ...$C..C.^",
           /* line */ (const char *) " CCCCC.CC$ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ..      . ",
           /* line */ (const char *) "^..      .^",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " $.......B ",
           /* line */ (const char *) " ..~~~.... ",
           /* line */ (const char *) " ~~~$~~... ",
           /* line */ (const char *) " ..~~~.... ",
           /* line */ (const char *) " ....~.CCCC",
           /* line */ (const char *) " ....~.CC..",
           /* line */ (const char *) "      ..C..",
           /* line */ (const char *) " ...$  .  .",
           /* line */ (const char *) " T...  .  T",
           /* line */ (const char *) " ...$  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " g.....b.$ ",
           /* line */ (const char *) " ...~~.... ",
           /* line */ (const char *) " ..~~~~... ",
           /* line */ (const char *) " ....~..$. ",
           /* line */ (const char *) " ~~~.~....^",
           /* line */ (const char *) " ....~~~.. ",
           /* line */ (const char *) " $...~.... ",
           /* line */ (const char *) " .m..C...T ",
           /* line */ (const char *) " T...C.$.m ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ~~......  ",
           /* line */ (const char *) " ~..~~...~ ",
           /* line */ (const char *) " ..~~$~... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " $...~.m..^",
           /* line */ (const char *) " ..m.~.... ",
           /* line */ (const char *) " $...~...$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " $..s.     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ~......~  ",
           /* line */ (const char *) " ..~~~~~.. ",
           /* line */ (const char *) " ~~~~$~~~~ ",
           /* line */ (const char *) " ..~~~~... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ~ ..~....^",
           /* line */ (const char *) " ~ ....... ",
           /* line */ (const char *) " .         ",
           /* line */ (const char *) " .$$   ..$ ",
           /* line */ (const char *) "        .. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ~.....~.  ",
           /* line */ (const char *) "^...~~.~.. ",
           /* line */ (const char *) " ..~~~~.~~ ",
           /* line */ (const char *) " ....~..$$ ",
           /* line */ (const char *) " ....~..~.^",
           /* line */ (const char *) " ~~~~~.~~. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " s       . ",
           /* line */ (const char *) " ..      . ",
           /* line */ (const char *) " $$        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ....x..$  ",
           /* line */ (const char *) " .b..s...  ",
           /* line */ (const char *) " ....x..$  ",
           /* line */ (const char *) " ....xxxx  ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " xxsxx C   ",
           /* line */ (const char *) " x..$x t   ",
           /* line */ (const char *) " x...x C   ",
           /* line */ (const char *) " x$m$x .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ~~~~..$ ",
           /* line */ (const char *) "  ~~$~~~.. ",
           /* line */ (const char *) "   ~~~~... ",
           /* line */ (const char *) " ...~~~...^",
           /* line */ (const char *) "  s .~~~.. ",
           /* line */ (const char *) "  $ .~~~.~ ",
           /* line */ (const char *) "  m .~~~~~ ",
           /* line */ (const char *) "  .      . ",
           /* line */ (const char *) "  .      C ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " ~~.....~  ",
           /* line */ (const char *) " ~.. B...~ ",
           /* line */ (const char *) " ...B$B... ",
           /* line */ (const char *) " ..$.B....^",
           /* line */ (const char *) " ....~.m.. ",
           /* line */ (const char *) " ..m.~.... ",
           /* line */ (const char *) " ....~...$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " $   .   $ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ~......~  ",
           /* line */ (const char *) " ..~~~~~.. ",
           /* line */ (const char *) " ~~~~$~~~~ ",
           /* line */ (const char *) " ..~~~~... ",
           /* line */ (const char *) " ....~.... ",
           /* line */ (const char *) " ~ ..~....^",
           /* line */ (const char *) " ~ ......$ ",
           /* line */ (const char *) " C         ",
           /* line */ (const char *) " .     ..$ ",
           /* line */ (const char *) "        .. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "  ......Ct ",
           /* line */ (const char *) "  .      C ",
           /* line */ (const char *) "^.. $$$$ . ",
           /* line */ (const char *) "  . ...$ . ",
           /* line */ (const char *) "  . s    .^",
           /* line */ (const char *) " s........ ",
           /* line */ (const char *) " .    .    ",
           /* line */ (const char *) " ..$  .    ",
           /* line */ (const char *) " $$$  .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " $.......B ",
           /* line */ (const char *) " ..```.... ",
           /* line */ (const char *) " ```$``... ",
           /* line */ (const char *) "   s `.... ",
           /* line */ (const char *) " ... `.... ",
           /* line */ (const char *) " ... `.... ",
           /* line */ (const char *) " $$. ..... ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " g.....b.$ ",
           /* line */ (const char *) " ...``.... ",
           /* line */ (const char *) " ..````... ",
           /* line */ (const char *) " ....`..$. ",
           /* line */ (const char *) " s         ",
           /* line */ (const char *) " ....s``.. ",
           /* line */ (const char *) " $... ...$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ``. ....  ",
           /* line */ (const char *) " `..s`...` ",
           /* line */ (const char *) " ..` $`... ",
           /* line */ (const char *) " ... `.... ",
           /* line */ (const char *) " $.. `.m.. ",
           /* line */ (const char *) " ..m `.... ",
           /* line */ (const char *) " $.. `...$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " $..s.     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " `......`  ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) " ````$```` ",
           /* line */ (const char *) " ..````... ",
           /* line */ (const char *) " ....`.... ",
           /* line */ (const char *) " s ..`.... ",
           /* line */ (const char *) " ` ....... ",
           /* line */ (const char *) " .         ",
           /* line */ (const char *) " .$$   ..$ ",
           /* line */ (const char *) "        .. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .... ..$  ",
           /* line */ (const char *) " .b..s...  ",
           /* line */ (const char *) " .... ..$  ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "   s   .   ",
           /* line */ (const char *) "  ..$  .   ",
           /* line */ (const char *) "  ...  .   ",
           /* line */ (const char *) "  $m$  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   ````..$ ",
           /* line */ (const char *) "  ``$```.. ",
           /* line */ (const char *) "   ````... ",
           /* line */ (const char *) "^...```... ",
           /* line */ (const char *) "    .```.. ",
           /* line */ (const char *) "  $ .```.` ",
           /* line */ (const char *) "  m .````` ",
           /* line */ (const char *) "  .      . ",
           /* line */ (const char *) "  .s.C.C.C ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " ``.....`  ",
           /* line */ (const char *) " `.. B...` ",
           /* line */ (const char *) " ...B$B... ",
           /* line */ (const char *) "^..$.B.... ",
           /* line */ (const char *) " ....`.m.. ",
           /* line */ (const char *) " ..m.`.... ",
           /* line */ (const char *) " ....`...$ ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) " $..s.s..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " `......`  ",
           /* line */ (const char *) " ..`````.. ",
           /* line */ (const char *) "^````$```` ",
           /* line */ (const char *) " ..````... ",
           /* line */ (const char *) " ....`.... ",
           /* line */ (const char *) " ` ..`.... ",
           /* line */ (const char *) " ` ......$ ",
           /* line */ (const char *) " C     s   ",
           /* line */ (const char *) " .     ..$ ",
           /* line */ (const char *) "       $.. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .      . ",
           /* line */ (const char *) "^.. $$$$ . ",
           /* line */ (const char *) "  . ...$ . ",
           /* line */ (const char *) "  . s    .^",
           /* line */ (const char *) " s........ ",
           /* line */ (const char *) " .    .    ",
           /* line */ (const char *) " .$   .    ",
           /* line */ (const char *) " $$   .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .... m.m  ",
           /* line */ (const char *) " ..m.D...  ",
           /* line */ (const char *) " m... ...  ",
           /* line */ (const char *) " ...m      ",
           /* line */ (const char *) " .....~~~. ",
           /* line */ (const char *) "   D  |~|  ",
           /* line */ (const char *) "  m.m  ~   ",
           /* line */ (const char *) "  .m.  ~   ",
           /* line */ (const char *) "  m$m  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " g.......g ",
           /* line */ (const char *) " ... $.... ",
           /* line */ (const char *) " ...$$$... ",
           /* line */ (const char *) " ....$.... ",
           /* line */ (const char *) " $.....m.. ",
           /* line */ (const char *) " ..m...... ",
           /* line */ (const char *) " g.......g ",
           /* line */ (const char *) " s  CCC  s ",
           /* line */ (const char *) " $...C...$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " ~~~~~..~  ",
           /* line */ (const char *) " ~ D       ",
           /* line */ (const char *) " ~ ....... ",
           /* line */ (const char *) " ~ ...$... ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " ~ ....~~~ ",
           /* line */ (const char *) " ~ M..~~~$ ",
           /* line */ (const char *) " .       s ",
           /* line */ (const char *) " ......s.$ ",
           /* line */ (const char *) " ...... $. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " m... ...  ",
           /* line */ (const char *) " ....s...  ",
           /* line */ (const char *) " .$.. ...  ",
           /* line */ (const char *) " .... .m.  ",
           /* line */ (const char *) " 5... .... ",
           /* line */ (const char *) "   D  |.|  ",
           /* line */ (const char *) " 5..5  .   ",
           /* line */ (const char *) " .... |.|  ",
           /* line */ (const char *) " ....  .   ",
           /* line */ (const char *) " ....  .   ",
           /* line */ (const char *) " ....  .   ",
           /* line */ (const char *) " $..$  .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "    ....   ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    ..     ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " ... $..$. ",
           /* line */ (const char *) " ...$$$... ",
           /* line */ (const char *) " ....$.... ",
           /* line */ (const char *) " .$....m.. ",
           /* line */ (const char *) " ..m...... ",
           /* line */ (const char *) "  .....$.  ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) " $..sCs..$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) " ~~~~~..~  ",
           /* line */ (const char *) " ~ D       ",
           /* line */ (const char *) " ~ ....... ",
           /* line */ (const char *) " ~ .....$. ",
           /* line */ (const char *) " . ....... ",
           /* line */ (const char *) " ~ ....~~~ ",
           /* line */ (const char *) " ~ M..~~~$ ",
           /* line */ (const char *) " ~~....  s ",
           /* line */ (const char *) "  ~~..  .$ ",
           /* line */ (const char *) "   ~~..s$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .    s . ",
           /* line */ (const char *) "^.. $$$M . ",
           /* line */ (const char *) "  s .... . ",
           /* line */ (const char *) "  . $... .^",
           /* line */ (const char *) "  . $..$ s ",
           /* line */ (const char *) "  .   s  . ",
           /* line */ (const char *) "  $..s.s.m ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "  |.|LLL   ",
           /* line */ (const char *) "  ...LLL   ",
           /* line */ (const char *) "  |.|      ",
           /* line */ (const char *) "  ....LLL  ",
           /* line */ (const char *) "   s  LLL  ",
           /* line */ (const char *) " $...$     ",
           /* line */ (const char *) " b....     ",
           /* line */ (const char *) " .m..m     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   ....L.$ ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) "         . ",
           /* line */ (const char *) " ....C...m ",
           /* line */ (const char *) "     s     ",
           /* line */ (const char *) " C...L...C ",
           /* line */ (const char *) "  .        ",
           /* line */ (const char *) "...m...... ",
           /* line */ (const char *) "s s        ",
           /* line */ (const char *) ". .     $$ ",
           /* line */ (const char *) "....$.sC$$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   =     $ ",
           /* line */ (const char *) "   =     . ",
           /* line */ (const char *) "   =     . ",
           /* line */ (const char *) "   =     . ",
           /* line */ (const char *) "   =     . ",
           /* line */ (const char *) "   =     . ",
           /* line */ (const char *) "   M     C ",
           /* line */ (const char *) "  x.x.$  s ",
           /* line */ (const char *) "  x...  .$ ",
           /* line */ (const char *) "   $.CCC$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   s       ",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  .    s . ",
           /* line */ (const char *) "  . $$$m . ",
           /* line */ (const char *) "  . g$m$ . ",
           /* line */ (const char *) "  . m$$m . ",
           /* line */ (const char *) "  . $m$$ s^",
           /* line */ (const char *) "^s.        ",
           /* line */ (const char *) "  ...m...s ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   L.LLL$  ",
           /* line */ (const char *) "   L.LLLm  ",
           /* line */ (const char *) "   s       ",
           /* line */ (const char *) "  .L..LLL$ ",
           /* line */ (const char *) " ..$..LLLm ",
           /* line */ (const char *) ".....      ",
           /* line */ (const char *) ".b....     ",
           /* line */ (const char *) " .....CCC$ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " CCCCCCCCC ",
           /* line */ (const char *) " ccccccccc ",
           /* line */ (const char *) " ........m ",
           /* line */ (const char *) "  ..s..    ",
           /* line */ (const char *) "   LLL     ",
           /* line */ (const char *) "  L.L      ",
           /* line */ (const char *) " LLL       ",
           /* line */ (const char *) " .$.       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) "    .      ",
           /* line */ (const char *) " LL.C...$  ",
           /* line */ (const char *) " $L..$..$  ",
           /* line */ (const char *) " LLL$$$.m  ",
           /* line */ (const char *) " LLL.$..$  ",
           /* line */ (const char *) " LL ...    ",
           /* line */ (const char *) "LL   LLL   ",
           /* line */ (const char *) "      LLL  ",
           /* line */ (const char *) "  $$$  LLL ",
           /* line */ (const char *) "  $$$.s..  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   = $CCC. ",
           /* line */ (const char *) "   =     . ",
           /* line */ (const char *) "   =     C ",
           /* line */ (const char *) "   =     C ",
           /* line */ (const char *) "   =     C ",
           /* line */ (const char *) "   =     C ",
           /* line */ (const char *) "   M     C ",
           /* line */ (const char *) "  ....$  s ",
           /* line */ (const char *) "  ....  .$ ",
           /* line */ (const char *) "  $..sCC$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "  s      s ",
           /* line */ (const char *) "  ..$$$m.. ",
           /* line */ (const char *) " L..g$m$.. ",
           /* line */ (const char *) " L..m$$m.. ",
           /* line */ (const char *) " L..$m$$.. ",
           /* line */ (const char *) " L.$...... ",
           /* line */ (const char *) " L......$. ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      B.BGB.s....b ",
           /* line */ (const char *) "      |.....| .$.b ",
           /* line */ (const char *) "      ....... ...b ",
           /* line */ (const char *) "      |.....| bbbb ",
           /* line */ (const char *) "      CCCCCCC      ",
           /* line */ (const char *) "^....B|.....|B....^",
           /* line */ (const char *) " ................. ",
           /* line */ (const char *) " ....B|.....|B.... ",
           /* line */ (const char *) "         ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      B.B.B.s....b ",
           /* line */ (const char *) "      |.....| .$.. ",
           /* line */ (const char *) "      ...M... ..$. ",
           /* line */ (const char *) "      |.....| b..b ",
           /* line */ (const char *) "      CCCCCCC      ",
           /* line */ (const char *) "^....B|.....|B....^",
           /* line */ (const char *) " ................. ",
           /* line */ (const char *) " ....B|.....|B.... ",
           /* line */ (const char *) "         ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .....s.B.B.s..... ",
           /* line */ (const char *) " s    |.....| .M.. ",
           /* line */ (const char *) " .... ....... .... ",
           /* line */ (const char *) " ...$ |.....| .... ",
           /* line */ (const char *) "      CCCCCCC      ",
           /* line */ (const char *) "^....B|.....|B....^",
           /* line */ (const char *) " ................. ",
           /* line */ (const char *) " ....B|.....|B.... ",
           /* line */ (const char *) "         ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^   ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) " .CCC.^",
           /* line */ (const char *) "^.CTC. ",
           /* line */ (const char *) " .CCC. ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) "  ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^   ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) " .CCC.^",
           /* line */ (const char *) "^.C$C. ",
           /* line */ (const char *) " .CCC. ",
           /* line */ (const char *) " ..... ",
           /* line */ (const char *) "  ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^   ",
           /* line */ (const char *) " ...^",
           /* line */ (const char *) " .C. ",
           /* line */ (const char *) "^.C. ",
           /* line */ (const char *) " .C. ",
           /* line */ (const char *) " ... ",
           /* line */ (const char *) "  ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^   ",
           /* line */ (const char *) " ...^",
           /* line */ (const char *) " CCC ",
           /* line */ (const char *) "^.b. ",
           /* line */ (const char *) " CCC ",
           /* line */ (const char *) " ... ",
           /* line */ (const char *) "  ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^   ",
           /* line */ (const char *) " ...^",
           /* line */ (const char *) " .CC ",
           /* line */ (const char *) " CC. ",
           /* line */ (const char *) "^... ",
           /* line */ (const char *) " .CC ",
           /* line */ (const char *) " CC. ",
           /* line */ (const char *) " ... ",
           /* line */ (const char *) "  ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^   ",
           /* line */ (const char *) " ...^",
           /* line */ (const char *) " .C. ",
           /* line */ (const char *) " .g. ",
           /* line */ (const char *) "^.C. ",
           /* line */ (const char *) " .g. ",
           /* line */ (const char *) " .C. ",
           /* line */ (const char *) " ... ",
           /* line */ (const char *) "  ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " .xxxxxxx.^",
           /* line */ (const char *) " .s.B.B.x. ",
           /* line */ (const char *) " .x..T..x. ",
           /* line */ (const char *) " .x.B.B.x. ",
           /* line */ (const char *) " .xxxxxxx. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);
}
