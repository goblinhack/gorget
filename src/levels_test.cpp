//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_level.hpp"

//
// Create all test levels
//
void levels_test(Gamep g)
{
  TRACE_NO_INDENT();

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "simple", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.@.....xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "chasm", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx...CCC.xx",
                  /* line */ (const char *) "xx.@.CCC.xx",
                  /* line */ (const char *) "xx...CCC.xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xx.......xx",
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* line */ (const char *) "xxxxxxxxxxx",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "bridge1", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x..CCC..x ",
                  /* line */ (const char *) " x.@====.x ",
                  /* line */ (const char *) " x..CCC..x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "bridge2", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x..LLL..x ",
                  /* line */ (const char *) " x.@====.x ",
                  /* line */ (const char *) " x..LLL..x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "shove", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x...bC..x ",
                  /* line */ (const char *) " x.@.GC..x ",
                  /* line */ (const char *) " x...BC..x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "barrel", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " xbbbbbb.x ",
                  /* line */ (const char *) " xb....b.x ",
                  /* line */ (const char *) " xb.@..b.x ",
                  /* line */ (const char *) " xb....b.x ",
                  /* line */ (const char *) " xbbbbbb.x ",
                  /* line */ (const char *) " x.......x ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "door_secret", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxx     ",
                  /* line */ (const char *) " x...x     ",
                  /* line */ (const char *) " x...xxxxx ",
                  /* line */ (const char *) " x...x...x ",
                  /* line */ (const char *) " x..@s...x ",
                  /* line */ (const char *) " x...x...x ",
                  /* line */ (const char *) " x...xxxxx ",
                  /* line */ (const char *) " x...x     ",
                  /* line */ (const char *) " xxxxx     ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "door_unlocked", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxx     ",
                  /* line */ (const char *) " x...x     ",
                  /* line */ (const char *) " x...xxxxx ",
                  /* line */ (const char *) " x...x...x ",
                  /* line */ (const char *) " x@..D...x ",
                  /* line */ (const char *) " x...x...x ",
                  /* line */ (const char *) " x...xxxxx ",
                  /* line */ (const char *) " x...x     ",
                  /* line */ (const char *) " xxxxx     ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "door_locked", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxx     ",
                  /* line */ (const char *) " x...x     ",
                  /* line */ (const char *) " x...xxxxx ",
                  /* line */ (const char *) " x...x...x ",
                  /* line */ (const char *) " x@.k+...x ",
                  /* line */ (const char *) " x...x...x ",
                  /* line */ (const char *) " x...xxxxx ",
                  /* line */ (const char *) " x...x     ",
                  /* line */ (const char *) " xxxxx     ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "item", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "           ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) " x...$$$$x ",
                  /* line */ (const char *) " x...$$$$x ",
                  /* line */ (const char *) " x...$$$$x ",
                  /* line */ (const char *) " x..@$$$$x ",
                  /* line */ (const char *) " x...$$$$x ",
                  /* line */ (const char *) " x...$$$$x ",
                  /* line */ (const char *) " x...$$$$x ",
                  /* line */ (const char *) " xxxxxxxxx ",
                  /* line */ (const char *) "           ",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "teleport", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "xxxxxxCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "x....xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "x....xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "x...TxCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "xxxxxxCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCxxxxxCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCx...xCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCx.T.xCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCx...xCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCxxxxxCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCxxxxxxxxxCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCx.......xCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCx.@..T..xCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCx.......xCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCx.......xCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCxxxxxxxxxCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "xxxxxCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "x...xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "x.T.xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "x...xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "xxxxxCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCxxxxx",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCx...x",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCx.T.x",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCx...x",
                  /* line */ (const char *) "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCxxxxx",
                  /* end */ nullptr);

  level_fixed_add(g, CHANCE_NORMAL, LEVEL_TYPE_TEST, "empty", __FUNCTION__, __LINE__,
                  /* line */ (const char *) "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  /* line */ (const char *) "x................x.x...........................x",
                  /* line */ (const char *) "x................x.x...........................x",
                  /* line */ (const char *) "x.............xxxx.xxxx........................x",
                  /* line */ (const char *) "x.......@......................................x",
                  /* line */ (const char *) "x.............xxxx.xxxx........................x",
                  /* line */ (const char *) "x................x.x...........................x",
                  /* line */ (const char *) "x................x.x...........................x",
                  /* line */ (const char *) "x.....x..........x.x...........................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..........x...................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x................x.............................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x......x.......................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "x..............................................x",
                  /* line */ (const char *) "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  /* end */ nullptr);
}
