//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_level.hpp"

//
// Create all exit rooms
//
void rooms_exit(Gamep g)
{
  TRACE_NO_INDENT();

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x.M.......^",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) "^.......E.x ",
           /* line */ (const char *) " x.......$x ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x..G......^",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x....CCCCx ",
           /* line */ (const char *) " x....C...x ",
           /* line */ (const char *) "^..M..C.E.x ",
           /* line */ (const char *) " x....C..$x ",
           /* line */ (const char *) " xxxxxxxxxx ",
           /* line */ (const char *) "            ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x.M.......^",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x.....```x ",
           /* line */ (const char *) " x....``..x ",
           /* line */ (const char *) "^...```.E.x ",
           /* line */ (const char *) " x.``....$x ",
           /* line */ (const char *) " xxxxxxxxxx ",
           /* line */ (const char *) "            ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^       ",
           /* line */ (const char *) " xxxx.xxxxxx ",
           /* line */ (const char *) " x.........x ",
           /* line */ (const char *) " x.M...B.B.x ",
           /* line */ (const char *) "^.......E...^",
           /* line */ (const char *) " x``...B.B.x ",
           /* line */ (const char *) " x```......x ",
           /* line */ (const char *) " x..``.....x ",
           /* line */ (const char *) " x$g.```...x ",
           /* line */ (const char *) " xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^     ",
           /* line */ (const char *) " xxxxxxx.xxxx ",
           /* line */ (const char *) " x..........x ",
           /* line */ (const char *) " x..........x ",
           /* line */ (const char *) "^............^",
           /* line */ (const char *) " xxx......xxx ",
           /* line */ (const char *) "   x......x   ",
           /* line */ (const char *) " xxxCCCCCCxxx ",
           /* line */ (const char *) " x...B..B...x ",
           /* line */ (const char *) " x..........x ",
           /* line */ (const char *) " x.E......M.x ",
           /* line */ (const char *) " x...xxxx...x ",
           /* line */ (const char *) " xCCCx  xCCCx ",
           /* line */ (const char *) " x...x  x...x ",
           /* line */ (const char *) " x.$.x  x.$.x ",
           /* line */ (const char *) " xxxxx  xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " x.....M.x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x...E...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x........^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxx.xx ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " x.....M.x ",
           /* line */ (const char *) "^...E....x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x....CCCx ",
           /* line */ (const char *) " x....C...^",
           /* line */ (const char *) " x....C..x ",
           /* line */ (const char *) " xxxxxx.xx ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x..M....x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...E...x ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x..M....x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...E...x ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxxxx ",
           /* line */ (const char *) "   x......^",
           /* line */ (const char *) "   x..M..x ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...E...x ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxxxx ",
           /* line */ (const char *) "   x......^",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) " x...M...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...E...x ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) " x....M..x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x...E...x ",
           /* line */ (const char *) " x......$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx.M...x ",
           /* line */ (const char *) "^..C.....x ",
           /* line */ (const char *) " x$C.....x ",
           /* line */ (const char *) " xxx.E...x ",
           /* line */ (const char *) "   x.....x ",
           /* line */ (const char *) "   xxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.M.xxx ",
           /* line */ (const char *) " xxx...C..^",
           /* line */ (const char *) "^..C...C$x ",
           /* line */ (const char *) " x$C...xxx ",
           /* line */ (const char *) " xxx.E.x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) "   x.....x ",
           /* line */ (const char *) "   x.M...x ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) "   x.E.x   ",
           /* line */ (const char *) "   x..$x   ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "    ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " xxx.M.xxx ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.E.x   ",
           /* line */ (const char *) "   x..$x   ",
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "  xxx.xxxxx ",
           /* line */ (const char *) "  x.......xx",
           /* line */ (const char *) " xx.x.x.x..x",
           /* line */ (const char *) "^..........x",
           /* line */ (const char *) " xx.x.M....x",
           /* line */ (const char *) "  x.....E..x",
           /* line */ (const char *) "  x.x......x",
           /* line */ (const char *) "  x.......$x",
           /* line */ (const char *) "  xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^        ",
           /* line */ (const char *) "x.xxxxxxx ",
           /* line */ (const char *) "x........^",
           /* line */ (const char *) "xx.M...xx ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " xx...E.x ",
           /* line */ (const char *) "  xx...$x ",
           /* line */ (const char *) "  xxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^  ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "    xx.xx",
           /* line */ (const char *) "    xB.Bx",
           /* line */ (const char *) "xxxxx...x",
           /* line */ (const char *) "x.......x",
           /* line */ (const char *) "x....M..x",
           /* line */ (const char *) "x.E.....x",
           /* line */ (const char *) "x$......x",
           /* line */ (const char *) "xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^  ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "    xx.xx",
           /* line */ (const char *) "    x|.|x",
           /* line */ (const char *) "    x...x",
           /* line */ (const char *) "    x|.|x",
           /* line */ (const char *) "    x...x",
           /* line */ (const char *) "xxxxx|.|x",
           /* line */ (const char *) "x.......x",
           /* line */ (const char *) "x....M..x",
           /* line */ (const char *) "x.E.....x",
           /* line */ (const char *) "x$......x",
           /* line */ (const char *) "xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^  ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "    xx.xx",
           /* line */ (const char *) "    xC.Cx",
           /* line */ (const char *) "    x...x",
           /* line */ (const char *) "    xC.Cx",
           /* line */ (const char *) "    x...x",
           /* line */ (const char *) "xxxxxC.Cx",
           /* line */ (const char *) "x.......x",
           /* line */ (const char *) "x.....M.x",
           /* line */ (const char *) "x.E.....x",
           /* line */ (const char *) "x$......x",
           /* line */ (const char *) "xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^  ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "     x.x ",
           /* line */ (const char *) "    xx.xx",
           /* line */ (const char *) "    xB.Bx",
           /* line */ (const char *) "    x...x",
           /* line */ (const char *) "xxxxxB.Bx",
           /* line */ (const char *) "x.......x",
           /* line */ (const char *) "x.....M.x",
           /* line */ (const char *) "x.E.....x",
           /* line */ (const char *) "x$......x",
           /* line */ (const char *) "xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "x.xxxxxxxx ",
           /* line */ (const char *) "x.........^",
           /* line */ (const char *) "x.cCCc.xxx ",
           /* line */ (const char *) "x.CCCC.x   ",
           /* line */ (const char *) "x...CC.xxx ",
           /* line */ (const char *) "xx..CC...x ",
           /* line */ (const char *) " x..cC.E.x ",
           /* line */ (const char *) " x.M....$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " xxxx.xxxx ",
           /* line */ (const char *) " x..BMB..x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...E..$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxxxxxxxx",
           /* line */ (const char *) " x..B.B..s....Bx",
           /* line */ (const char *) " x.......x..$..x",
           /* line */ (const char *) " x.......xB...Bx",
           /* line */ (const char *) " x.......xxxxxxx",
           /* line */ (const char *) " xxxxxxCCx      ",
           /* line */ (const char *) "      x..xxxxxx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x....M..x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x...E..$x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxx      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " xxxxxxCCx      ",
           /* line */ (const char *) "      x..xxxxxx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x....M..x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x...E..$x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxx      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " xxxxCCCCx      ",
           /* line */ (const char *) "    x....xxxxxx ",
           /* line */ (const char *) "    x.........x ",
           /* line */ (const char *) "    x......G..x ",
           /* line */ (const char *) "    x.........x ",
           /* line */ (const char *) "    x.....E..$x ",
           /* line */ (const char *) "    xxxxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxx      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " xxxxxx..x      ",
           /* line */ (const char *) "      xCCx      ",
           /* line */ (const char *) "      x..xxxxxx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x.M.E.$.x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxxx     ",
           /* line */ (const char *) " x....C...xx    ",
           /* line */ (const char *) " x....C....xx   ",
           /* line */ (const char *) " xxxxxx..M..xx  ",
           /* line */ (const char *) "      x......xx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x...E.$.x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) " x.xxxx     ",
           /* line */ (const char *) " x....xx    ",
           /* line */ (const char *) " x.....xx   ",
           /* line */ (const char *) " x..M...x   ",
           /* line */ (const char *) "^.......xx  ",
           /* line */ (const char *) " xx......xx ",
           /* line */ (const char *) "  x.......x ",
           /* line */ (const char *) "  xx...E..x ",
           /* line */ (const char *) "    xx...$x ",
           /* line */ (const char *) "     xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.xxx  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) " xx..M..x  ",
           /* line */ (const char *) "^.......x  ",
           /* line */ (const char *) " xxx....xxx",
           /* line */ (const char *) "   xx.....x",
           /* line */ (const char *) "    x..E..x",
           /* line */ (const char *) "    x....$x",
           /* line */ (const char *) "    xxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^      ",
           /* line */ (const char *) "      xx.xxxx  ",
           /* line */ (const char *) "     xx.....xx ",
           /* line */ (const char *) "  xxxx.......x ",
           /* line */ (const char *) " xx...........^",
           /* line */ (const char *) "^............x ",
           /* line */ (const char *) " x...M....E..x ",
           /* line */ (const char *) " x..........xx ",
           /* line */ (const char *) " xx...$xxxxxx  ",
           /* line */ (const char *) "  xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^      ",
           /* line */ (const char *) "      xx.xxxx  ",
           /* line */ (const char *) "      x.....xx ",
           /* line */ (const char *) " xxxxx.......x ",
           /* line */ (const char *) " x......M....x ",
           /* line */ (const char *) " x..E.......xx ",
           /* line */ (const char *) " xx...$xxxxxx  ",
           /* line */ (const char *) "  xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxx  ",
           /* line */ (const char *) "  x....x  ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " x..M....^",
           /* line */ (const char *) "^.......x ",
           /* line */ (const char *) " x....E.x ",
           /* line */ (const char *) " xx....$x ",
           /* line */ (const char *) "  xxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "   xxxxxx.xx ",
           /* line */ (const char *) "  xx.......x ",
           /* line */ (const char *) "  x........x ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) " x...M....xx ",
           /* line */ (const char *) " x.......xx  ",
           /* line */ (const char *) " x...E...x   ",
           /* line */ (const char *) " x......$x   ",
           /* line */ (const char *) " xxxxxxxxx   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "        x.x",
           /* line */ (const char *) "        x.x",
           /* line */ (const char *) "        x.x",
           /* line */ (const char *) "xxxxxxxxx.x",
           /* line */ (const char *) "x$........x",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "x.E.......x",
           /* line */ (const char *) "x.....M...x",
           /* line */ (const char *) "xxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx     ",
           /* line */ (const char *) "  xx...x     ",
           /* line */ (const char *) " xx....xxxxx ",
           /* line */ (const char *) " x..M..C....^",
           /* line */ (const char *) " x.....xxxxx ",
           /* line */ (const char *) " x.....x     ",
           /* line */ (const char *) " x..E..x     ",
           /* line */ (const char *) " x$....x     ",
           /* line */ (const char *) " xxxxxxx     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.xxxxx",
           /* line */ (const char *) "  x``.~~.$x",
           /* line */ (const char *) " xx`..B~~~x",
           /* line */ (const char *) "^........Ex",
           /* line */ (const char *) " xx...B~~~x",
           /* line */ (const char *) "  x$...~~.x",
           /* line */ (const char *) " xxxxxxxxsx",
           /* line */ (const char *) " xC..$CCC.x",
           /* line */ (const char *) " xCm..CCC.x",
           /* line */ (const char *) " xCCCCCCCCx",
           /* line */ (const char *) " xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.xxxx ",
           /* line */ (const char *) "xxx..C.C$x ",
           /* line */ (const char *) "x$.....CCx ",
           /* line */ (const char *) "x........x ",
           /* line */ (const char *) "x.M..CCCCx ",
           /* line */ (const char *) "x....C..xx ",
           /* line */ (const char *) "xCC..C.Ex  ",
           /* line */ (const char *) "xCCC.xxxx  ",
           /* line */ (const char *) "x..C.x     ",
           /* line */ (const char *) "x$.CCx     ",
           /* line */ (const char *) "xxxxxx     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ..$   ..M ",
           /* line */ (const char *) " ...   ... ",
           /* line */ (const char *) " T..   T.. ",
           /* line */ (const char *) "           ",
           /* line */ (const char *) "   xxxxxxxx",
           /* line */ (const char *) "   x......x",
           /* line */ (const char *) "   x.E....x",
           /* line */ (const char *) "   x......x",
           /* line */ (const char *) "xxxx......x",
           /* line */ (const char *) "x..s.M....x",
           /* line */ (const char *) "x..x......x",
           /* line */ (const char *) "x..x......x",
           /* line */ (const char *) "x$.x......x",
           /* line */ (const char *) "xxxx|.|xxxx",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x|.|x   ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.E.x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "  xxCCCxx  ",
           /* line */ (const char *) " xx.....xx ",
           /* line */ (const char *) "xxB..M..Bxx",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "x$........x",
           /* line */ (const char *) "xxxx|.|xxxx",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x|.|x   ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.E.x   ",
           /* line */ (const char *) "  xx...xx  ",
           /* line */ (const char *) " xxB...Bxx ",
           /* line */ (const char *) "xx...M...xx",
           /* line */ (const char *) "xB.......Bx",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "xG.......Gx",
           /* line */ (const char *) "xxxxB.Bxxxx",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xB.Bx   ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "   x$..x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xxxsx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.E.x   ",
           /* line */ (const char *) "  xx...xx  ",
           /* line */ (const char *) " xxB...Bxx ",
           /* line */ (const char *) "xx...M...xx",
           /* line */ (const char *) "xB.......Bx",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "xG.......Gx",
           /* line */ (const char *) "xxxxB.Bxxxx",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xB.Bx   ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.E.x   ",
           /* line */ (const char *) "  xx...xx  ",
           /* line */ (const char *) " xxB...Bxx ",
           /* line */ (const char *) "xxB.....Bxx",
           /* line */ (const char *) "xB.......Bx",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "x..G...G..x",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "x.........x",
           /* line */ (const char *) "xxxxB.Bxxxx",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xB.Bx   ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxx     ",
           /* line */ (const char *) "x......x     ",
           /* line */ (const char *) "x.M....x     ",
           /* line */ (const char *) "x....x.x     ",
           /* line */ (const char *) "x.$..x.x     ",
           /* line */ (const char *) "x....xsxxxxx ",
           /* line */ (const char *) "xsxxxx......^",
           /* line */ (const char *) "x...$xxxxx.x ",
           /* line */ (const char *) "xxxxxx   x.x ",
           /* line */ (const char *) "xE..|xxxxx.x ",
           /* line */ (const char *) "x..........x ",
           /* line */ (const char *) "x$..|xxxxxxx ",
           /* line */ (const char *) "xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx       ",
           /* line */ (const char *) "xM..|xxxxxxx ",
           /* line */ (const char *) "x..........x ",
           /* line */ (const char *) "x$..|xxxxx.x ",
           /* line */ (const char *) "xxxxxx   x..^",
           /* line */ (const char *) "xE..|xxxxx.x ",
           /* line */ (const char *) "x..........x ",
           /* line */ (const char *) "x$..|xxxxxxx ",
           /* line */ (const char *) "xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx       ",
           /* line */ (const char *) "x...|xxxxxxx ",
           /* line */ (const char *) "x..........x ",
           /* line */ (const char *) "x$..|xxxxx.x ",
           /* line */ (const char *) "xxxxxx   x.x ",
           /* line */ (const char *) "         x.x ",
           /* line */ (const char *) "         xsx ",
           /* line */ (const char *) "xxxxxx   x..^",
           /* line */ (const char *) "xE..|xxxxx.x ",
           /* line */ (const char *) "x..........x ",
           /* line */ (const char *) "x...|xxxxxxx ",
           /* line */ (const char *) "x....x       ",
           /* line */ (const char *) "xM...x       ",
           /* line */ (const char *) "xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx       ",
           /* line */ (const char *) "xM...xxxxxxx ",
           /* line */ (const char *) "x..........x ",
           /* line */ (const char *) "x....xxxxx.x ",
           /* line */ (const char *) "xB...x   x..^",
           /* line */ (const char *) "xE...xxxxx.x ",
           /* line */ (const char *) "xB.........x ",
           /* line */ (const char *) "x$...xxxxxxx ",
           /* line */ (const char *) "xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx       ",
           /* line */ (const char *) "xM...xxxxxxx ",
           /* line */ (const char *) "x....C.....x ",
           /* line */ (const char *) "x....C..CCCx ",
           /* line */ (const char *) "xB...C..C...^",
           /* line */ (const char *) "xE...C..CCCx ",
           /* line */ (const char *) "xB...C.....x ",
           /* line */ (const char *) "x$...xxxxxxx ",
           /* line */ (const char *) "xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx       ",
           /* line */ (const char *) "xM...xxxxxxx ",
           /* line */ (const char *) "x....~~~~~~x ",
           /* line */ (const char *) "x....~~~~~~x ",
           /* line */ (const char *) "xB...~~~~~~.^",
           /* line */ (const char *) "xE...~~~~~~x ",
           /* line */ (const char *) "xB...~~~~~~x ",
           /* line */ (const char *) "x$...xxxxxxx ",
           /* line */ (const char *) "xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) "  xxxxxx.xxx",
           /* line */ (const char *) "  x........x",
           /* line */ (const char *) " xx..~~..x.x",
           /* line */ (const char *) "^...~~~~...x",
           /* line */ (const char *) " xx..~~....x",
           /* line */ (const char *) "  x...~~~~.x",
           /* line */ (const char *) " xx......~~x",
           /* line */ (const char *) " x~~~.....~x",
           /* line */ (const char *) " x~........x",
           /* line */ (const char *) " x...|E|.M.x",
           /* line */ (const char *) " x$........x",
           /* line */ (const char *) " xxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) "  xxxxxx.xxx",
           /* line */ (const char *) "  x........x",
           /* line */ (const char *) " xx........x",
           /* line */ (const char *) "^..........x",
           /* line */ (const char *) " xx........x",
           /* line */ (const char *) "  x........x",
           /* line */ (const char *) " xxxCCCCCxxx",
           /* line */ (const char *) " x.........x",
           /* line */ (const char *) " x.........x",
           /* line */ (const char *) " x...|E|.M.x",
           /* line */ (const char *) " x.........x",
           /* line */ (const char *) " x.........x",
           /* line */ (const char *) " xxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^   ",
           /* line */ (const char *) "   xxxxx.xx ",
           /* line */ (const char *) "   x......x ",
           /* line */ (const char *) " xxx.~~..xx ",
           /* line */ (const char *) "^....~~~...^",
           /* line */ (const char *) " xx..~~..xx ",
           /* line */ (const char *) "  x......$x ",
           /* line */ (const char *) " xxxx.t.xxx ",
           /* line */ (const char *) " x...|E|..x ",
           /* line */ (const char *) " x.....M..x ",
           /* line */ (const char *) " xxxxxxxxxx ",

           nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.xxxxx",
           /* line */ (const char *) "  x``.~~.$x",
           /* line */ (const char *) " xx`..B~~~x",
           /* line */ (const char *) "^...G....Ex",
           /* line */ (const char *) " xx...B~~~x",
           /* line */ (const char *) "  x$...~~.x",
           /* line */ (const char *) " xxxxxxxxsx",
           /* line */ (const char *) " xC..$CCC.x",
           /* line */ (const char *) " xCm..CCC.x",
           /* line */ (const char *) " xCCCCCCCCx",
           /* line */ (const char *) " xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.x    ",
           /* line */ (const char *) "  x...xxxxx",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "^...G....Ex",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "  x$..xxxxx",
           /* line */ (const char *) " xxxxsx    ",
           /* line */ (const char *) " x....x    ",
           /* line */ (const char *) " x.m..x    ",
           /* line */ (const char *) " x$...x    ",
           /* line */ (const char *) " xxxxxx    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.x    ",
           /* line */ (const char *) "  x...xxxxx",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "^...G....Ex",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "  x$..xxxxx",
           /* line */ (const char *) " xxxxsx...x",
           /* line */ (const char *) " x..B.B...x",
           /* line */ (const char *) " x......M.x",
           /* line */ (const char *) " x.......$x",
           /* line */ (const char *) " xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.x    ",
           /* line */ (const char *) "  x...xxxxx",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "^........Ex",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "  xLL.xxxxx",
           /* line */ (const char *) " xxLLLL...x",
           /* line */ (const char *) " xLLL.....x",
           /* line */ (const char *) " x......M.x",
           /* line */ (const char *) " x.......$x",
           /* line */ (const char *) " xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.x    ",
           /* line */ (const char *) "  x...xxxxx",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "^...G....Ex",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "  xL..xxxxx",
           /* line */ (const char *) "  xLL.x    ",
           /* line */ (const char *) "  xLLLx    ",
           /* line */ (const char *) "  xLLLx    ",
           /* line */ (const char *) "  x..Lx    ",
           /* line */ (const char *) "  x...x    ",
           /* line */ (const char *) "  x.$.x    ",
           /* line */ (const char *) "  xxxxx    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.x    ",
           /* line */ (const char *) "  x...xxxxx",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "^...G....Ex",
           /* line */ (const char *) " xx...BCCCx",
           /* line */ (const char *) "  xC..xxxxx",
           /* line */ (const char *) "  xCC.x    ",
           /* line */ (const char *) "  xCCCx    ",
           /* line */ (const char *) "  xCCCx    ",
           /* line */ (const char *) "  x..Cx    ",
           /* line */ (const char *) "  x...x    ",
           /* line */ (const char *) "  x.$.x    ",
           /* line */ (const char *) "  xxxxx    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "  xxx.xxxxxx",
           /* line */ (const char *) "  x........x",
           /* line */ (const char *) " xx.....B.Bx",
           /* line */ (const char *) "^.....M..E.x",
           /* line */ (const char *) " xx.....B.Bx",
           /* line */ (const char *) "  x........x",
           /* line */ (const char *) "  xxxsxxxsxx",
           /* line */ (const char *) "  x....x...x",
           /* line */ (const char *) "  x..G.s.$.x",
           /* line */ (const char *) "  x$...x...x",
           /* line */ (const char *) "  xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " xxxx.xx   ",
           /* line */ (const char *) "^...C..xxxx",
           /* line */ (const char *) " xxxx.....x",
           /* line */ (const char *) "    x....$x",
           /* line */ (const char *) "    x.LL.xx",
           /* line */ (const char *) "    x.LL.x ",
           /* line */ (const char *) "    xM..Ex ",
           /* line */ (const char *) "    xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^    ",
           /* line */ (const char *) " xxxx.xx  ",
           /* line */ (const char *) "^...C..xxx",
           /* line */ (const char *) " xxxx....x",
           /* line */ (const char *) "    x....x",
           /* line */ (const char *) "    x.LL.x",
           /* line */ (const char *) "    x.LL.x",
           /* line */ (const char *) "    x....x",
           /* line */ (const char *) "    x.LL.x",
           /* line */ (const char *) "    x.LL.x",
           /* line */ (const char *) "    x....x",
           /* line */ (const char *) "    xM..Ex",
           /* line */ (const char *) "    xxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxxx",
           /* line */ (const char *) " xLL.E.LLLLx",
           /* line */ (const char *) " xLL...LLL.x",
           /* line */ (const char *) " x.LL.LL.x.x",
           /* line */ (const char *) " x.LLMLLxx.x",
           /* line */ (const char *) " x..LLL.xx.x",
           /* line */ (const char *) " xxxx.xx.x.x",
           /* line */ (const char *) "^.....xxxx.x",
           /* line */ (const char *) " xxM.......x",
           /* line */ (const char *) "  x$..LLLLLx",
           /* line */ (const char *) "  xxx.xxxxxx",
           /* line */ (const char *) "     ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^ ",
           /* line */ (const char *) "  xxxxxxx.x",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  x...g...x",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  xxxxxCxxx",
           /* line */ (const char *) "  x$....xxx",
           /* line */ (const char *) " xx..CCCCCx",
           /* line */ (const char *) "^....C.M.Ex",
           /* line */ (const char *) " xx..C.C.Cx",
           /* line */ (const char *) "  xxxx.C.xx",
           /* line */ (const char *) "    x....x ",
           /* line */ (const char *) "    x.xxxx ",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "  x.xxxxxx ",
           /* line */ (const char *) "  x......x ",
           /* line */ (const char *) " xx|LL...x ",
           /* line */ (const char *) "^...LLL.$x ",
           /* line */ (const char *) " xx|LL...x ",
           /* line */ (const char *) "  x.....gx ",
           /* line */ (const char *) "  xx...xxx ",
           /* line */ (const char *) "   xB.Bx   ",
           /* line */ (const char *) "   xBEBx   ",
           /* line */ (const char *) "   xxxxx   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "  xxxxxx.xx",
           /* line */ (const char *) "  x$.L....x",
           /* line */ (const char *) "  x.LLLLL.x",
           /* line */ (const char *) " xxLLLLLLLx",
           /* line */ (const char *) "^.........x",
           /* line */ (const char *) " xxLLLLLLLx",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  xsxxxxxsx",
           /* line */ (const char *) "  x.xxExx.x",
           /* line */ (const char *) "  x.xxCxx.x",
           /* line */ (const char *) "  x$..C..mx",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "  xxxxxx.xx",
           /* line */ (const char *) "  x$.C....x",
           /* line */ (const char *) "  x.CCCCC.x",
           /* line */ (const char *) " xxCCCCCCCx",
           /* line */ (const char *) " xx.CCCCC.x",
           /* line */ (const char *) "^.........x",
           /* line */ (const char *) " xxCCCCCCCx",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  xsxxxxxsx",
           /* line */ (const char *) "  x.xxExx.x",
           /* line */ (const char *) "  x.xxCxx.x",
           /* line */ (const char *) "  x$..C..mx",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   xL=Lx   ",
           /* line */ (const char *) "   xL=Lx   ",
           /* line */ (const char *) "xxxxL=Lxxx ",
           /* line */ (const char *) "x$..L=L...^",
           /* line */ (const char *) "x...L=L..x ",
           /* line */ (const char *) "x........x ",
           /* line */ (const char *) "xxx..M..xx ",
           /* line */ (const char *) "  x..E..x  ",
           /* line */ (const char *) "  xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxx   ",
           /* line */ (const char *) "  xxLMLxx   ",
           /* line */ (const char *) "  xLL.LLx   ",
           /* line */ (const char *) " xxLL.LLxx  ",
           /* line */ (const char *) " LLL...LLxxx",
           /* line */ (const char *) "^........s.x",
           /* line */ (const char *) " LLL...LLx.x",
           /* line */ (const char *) " xxLL.LLxx.x",
           /* line */ (const char *) "  xLL.LLxx.x",
           /* line */ (const char *) "  xxL.Lxxx.x",
           /* line */ (const char *) "   xELLx$..x",
           /* line */ (const char *) "   xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) " xCCCCCCCx ",
           /* line */ (const char *) " xC$....Cxx",
           /* line */ (const char *) " xC..CCCCCx",
           /* line */ (const char *) "^....C...Ex",
           /* line */ (const char *) " xC..CCCCCx",
           /* line */ (const char *) " xC....MCxx",
           /* line */ (const char *) " xCCCCCCCx ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxx",
           /* line */ (const char *) " xCCC.CCCCx",
           /* line */ (const char *) "^....t...Ex",
           /* line */ (const char *) " xCCCCCCCCx",
           /* line */ (const char *) " xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxx",
           /* line */ (const char *) " xLLLLLLLLx",
           /* line */ (const char *) "^.......tEx",
           /* line */ (const char *) " xLLLLLL.Lx",
           /* line */ (const char *) " xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.xxxxx",
           /* line */ (const char *) "  x....L..x",
           /* line */ (const char *) " xxLLLLLLLx",
           /* line */ (const char *) "^...L....gx",
           /* line */ (const char *) " xxLLL.LLLx",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  xDxxxxxxx",
           /* line */ (const char *) "  x..x...$x",
           /* line */ (const char *) "  x..s....x",
           /* line */ (const char *) "  xxxx.M..x",
           /* line */ (const char *) "     x....x",
           /* line */ (const char *) "     x...Ex",
           /* line */ (const char *) "     xxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "    x.x    ",
           /* line */ (const char *) "xxxxC.Cxxxx",
           /* line */ (const char *) "xCCCCtCCCCx",
           /* line */ (const char *) "xCB.....BCx",
           /* line */ (const char *) "xC...g...Cx",
           /* line */ (const char *) "xCB.....BCx",
           /* line */ (const char *) "xCCCC.CCCCx",
           /* line */ (const char *) "xxxxCECxxxx",
           /* line */ (const char *) "   xC.Cx   ",
           /* line */ (const char *) "   xCCCx   ",
           /* line */ (const char *) "   xC.Cxxxx",
           /* line */ (const char *) "   xC$C.s$x",
           /* line */ (const char *) "   xxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxxxx   ",
           /* line */ (const char *) "xE.LL....$x   ",
           /* line */ (const char *) "x...LL..b.x   ",
           /* line */ (const char *) "xLLLLLL...xxxx",
           /* line */ (const char *) "x............x",
           /* line */ (const char *) "xtLLLLLLLLLLLx",
           /* line */ (const char *) "x.LLLLLLLLLL.x",
           /* line */ (const char *) "x.......m....x",
           /* line */ (const char *) "xxxxx.xxxxxxxx",
           /* line */ (const char *) "     ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxxxxx ",
           /* line */ (const char *) "    xM...$$x ",
           /* line */ (const char *) "    xxsxxxxx ",
           /* line */ (const char *) "    xB.B...x ",
           /* line */ (const char *) "  xxx.......^",
           /* line */ (const char *) " xx.LL.....x ",
           /* line */ (const char *) "^..gLLLLL..x ",
           /* line */ (const char *) " x...LL....x ",
           /* line */ (const char *) " x....L..xxx ",
           /* line */ (const char *) " x$.....xx   ",
           /* line */ (const char *) " x.....Ex    ",
           /* line */ (const char *) " xxxxxxxx    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxxx",
           /* line */ (const char *) " x$....L..Bx",
           /* line */ (const char *) " x....L..M.x",
           /* line */ (const char *) " x...LL....x",
           /* line */ (const char *) "^...LLLLL..x",
           /* line */ (const char *) " xxxxxxxx.xx",
           /* line */ (const char *) " x....xLLLLx",
           /* line */ (const char *) " x.$$.s....x",
           /* line */ (const char *) " x....x..E.x",
           /* line */ (const char *) " xxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^        ",
           /* line */ (const char *) " xx.xxxxxxxx",
           /* line */ (const char *) "^......L..Bx",
           /* line */ (const char *) " x....L....x",
           /* line */ (const char *) " x...LL....x",
           /* line */ (const char *) " x..LLLLL..x",
           /* line */ (const char *) " xxxx.g.xx.x",
           /* line */ (const char *) " x..xxxxxx.x",
           /* line */ (const char *) " x$.s..M...x",
           /* line */ (const char *) " xxxx.LLL.xx",
           /* line */ (const char *) "    x.LEL.x ",
           /* line */ (const char *) "    xxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "xxxxx.xxxxx ",
           /* line */ (const char *) "x$.$x.x.$.x ",
           /* line */ (const char *) "xLLLx.xLLLx ",
           /* line */ (const char *) "x...s.s..mx ",
           /* line */ (const char *) "x.M.x.x.E.x ",
           /* line */ (const char *) "x...xLx..$x ",
           /* line */ (const char *) "x...x.D.xxxx",
           /* line */ (const char *) "x...x.xsx.$x",
           /* line */ (const char *) "x...xLx.L..x",
           /* line */ (const char *) "xxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxxxx",
           /* line */ (const char *) "x...~~...Bx",
           /* line */ (const char *) "x..xx~~...x",
           /* line */ (const char *) "x.xx~~~...x",
           /* line */ (const char *) "x.x~~$~~..x",
           /* line */ (const char *) "x.xx~~....x",
           /* line */ (const char *) "x..xx~....x",
           /* line */ (const char *) "xE..x.....x",
           /* line */ (const char *) "xxxxx.xxxxx",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxxxx",
           /* line */ (const char *) "xE~~~....Bx",
           /* line */ (const char *) "x~~~~~~...x",
           /* line */ (const char *) "x~~~~~~...x",
           /* line */ (const char *) "x~~~~~~~..x",
           /* line */ (const char *) "x~~~~~....x",
           /* line */ (const char *) "x~x~~.....x",
           /* line */ (const char *) "x$x~......x",
           /* line */ (const char *) "xxxxx.xxxxx",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^    ",
           /* line */ (const char *) "xxxxxxx.xxx ",
           /* line */ (const char *) "xB.......Bx ",
           /* line */ (const char *) "x....C.....^",
           /* line */ (const char *) "x...CC....x ",
           /* line */ (const char *) "x..CCCCC..x ",
           /* line */ (const char *) "x.CC$..CC.x ",
           /* line */ (const char *) "x.C..g..C.x ",
           /* line */ (const char *) "x.CC...CC.x ",
           /* line */ (const char *) "x.CCCCCCCCx ",
           /* line */ (const char *) "x.....MCCCx ",
           /* line */ (const char *) "xxxx.CCC.xx ",
           /* line */ (const char *) "   x....Ex  ",
           /* line */ (const char *) "   xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "xxxxx.xxxxx",
           /* line */ (const char *) "x$..x.x$..x",
           /* line */ (const char *) "xCCCx.xCCCx",
           /* line */ (const char *) "x...x.x..mx",
           /* line */ (const char *) "x.m.x.x.$.x",
           /* line */ (const char *) "x...x~x...x",
           /* line */ (const char *) "xCCCx.D..Cx",
           /* line */ (const char *) "x...s.xsxxx",
           /* line */ (const char *) "x.E.x.x..$x",
           /* line */ (const char *) "xxxxx.xxxxx",
           /* line */ (const char *) "     ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^ ^    ",
           /* line */ (const char *) "  xx.x.xx  ",
           /* line */ (const char *) "  xB.$.Bx  ",
           /* line */ (const char *) "  xB.$.Bx  ",
           /* line */ (const char *) "  xx.C.xx  ",
           /* line */ (const char *) " xxx.C.xxx ",
           /* line */ (const char *) "^..C.C.C..^",
           /* line */ (const char *) " xxx.C.xxx ",
           /* line */ (const char *) "  xxmC.xx  ",
           /* line */ (const char *) "  xB...Bx  ",
           /* line */ (const char *) "  x..E..x  ",
           /* line */ (const char *) "  xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) " xBxBxBx$x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...C...x ",
           /* line */ (const char *) " x..C.C..x ",
           /* line */ (const char *) "^.G.CEC.t.^",
           /* line */ (const char *) " x..C.C..x ",
           /* line */ (const char *) " x...C...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxBxBxBxx ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) " xgxBxBxgx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...C...x ",
           /* line */ (const char *) " x..C.C..x ",
           /* line */ (const char *) "^...CEC...^",
           /* line */ (const char *) " x..C.C..x ",
           /* line */ (const char *) " x...C...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxBxgxBxx ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxxxxxx ",
           /* line */ (const char *) "    xBxBxBx$x ",
           /* line */ (const char *) " xxxx.......x ",
           /* line */ (const char *) " x$.t...C...x ",
           /* line */ (const char *) " xxxx..C.C..x ",
           /* line */ (const char *) "^....g.CEC...^",
           /* line */ (const char *) " xxxx..C.C..x ",
           /* line */ (const char *) " x..x...C...x ",
           /* line */ (const char *) " x..s.......x ",
           /* line */ (const char *) " x$.xxBxBxBxx ",
           /* line */ (const char *) " xxxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxxx ",
           /* line */ (const char *) " x.CCCCC...x ",
           /* line */ (const char *) " x.C..CCCCCx ",
           /* line */ (const char *) " x.CCCC..C.x ",
           /* line */ (const char *) " x...CC.$CCx ",
           /* line */ (const char *) "^...CCCCCC.x ",
           /* line */ (const char *) " x...C.E.CCx ",
           /* line */ (const char *) " x...C...C.x ",
           /* line */ (const char *) " xg.CCCCCC..^",
           /* line */ (const char *) " xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^  ",
           /* line */ (const char *) "xxxxxxxxx.x ",
           /* line */ (const char *) "x.....C...x ",
           /* line */ (const char *) "x.$..CC...x ",
           /* line */ (const char *) "x...CCC.m.x ",
           /* line */ (const char *) "x..CC.C...x ",
           /* line */ (const char *) "xCCCCCCCCCx ",
           /* line */ (const char *) "x....C.....^",
           /* line */ (const char *) "x...CC.m..x ",
           /* line */ (const char *) "x.CCCCCCCCx ",
           /* line */ (const char *) "x....CC...x ",
           /* line */ (const char *) "xE...C...$x ",
           /* line */ (const char *) "xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "xxxxx.xxxxx",
           /* line */ (const char *) "xm....x..gx",
           /* line */ (const char *) "x..$.Cx...x",
           /* line */ (const char *) "xB..CCx...x",
           /* line */ (const char *) "xCCCC....Cx",
           /* line */ (const char *) "xCCCCCCCC.x",
           /* line */ (const char *) "xCCCCCCC..x",
           /* line */ (const char *) "xg...C....x",
           /* line */ (const char *) "xx.xxxx..Ex",
           /* line */ (const char *) " x.x  xxxxx",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^     ",
           /* line */ (const char *) " xxxxxx.xxxx ",
           /* line */ (const char *) " x..s.L.s.$x ",
           /* line */ (const char *) " xm.x.L.x..x ",
           /* line */ (const char *) " xxxx.L.xxxx ",
           /* line */ (const char *) "^.....L.....^",
           /* line */ (const char *) " xxxx.L.xxxx ",
           /* line */ (const char *) " x..x.L.xx$x ",
           /* line */ (const char *) " x....Lmxx.x ",
           /* line */ (const char *) " x..xxsxxx.x ",
           /* line */ (const char *) " xE.x......x ",
           /* line */ (const char *) " xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxx",
           /* line */ (const char *) " x.LLLL.L.x",
           /* line */ (const char *) " x.LLLL...x",
           /* line */ (const char *) " x.LLLLLL.x",
           /* line */ (const char *) "^..LL$LLL.x",
           /* line */ (const char *) " x........x",
           /* line */ (const char *) " x.LLLLLL.x",
           /* line */ (const char *) " x.LLELLL.x",
           /* line */ (const char *) " x.LLLLLL.x",
           /* line */ (const char *) " x...m....x",
           /* line */ (const char *) " xxxxxxxx.x",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxx  ",
           /* line */ (const char *) "  xLm..Lx  ",
           /* line */ (const char *) "  xL.C.Lx  ",
           /* line */ (const char *) " xxL.C.Lxx ",
           /* line */ (const char *) "^..L.C...t^",
           /* line */ (const char *) " xxL.C.Lxx ",
           /* line */ (const char *) " xxL.C.Lx  ",
           /* line */ (const char *) " xEL$..Lx  ",
           /* line */ (const char *) " xxLLLLLx  ",
           /* line */ (const char *) " xxxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxxxx ",
           /* line */ (const char *) " x.CCCC.C.x ",
           /* line */ (const char *) " x.CCCC....^",
           /* line */ (const char *) " x.CCCCCC.x ",
           /* line */ (const char *) "^..CC$.CC.x ",
           /* line */ (const char *) " x.CC$.CC.x ",
           /* line */ (const char *) " x.CCCCCC.x ",
           /* line */ (const char *) " x...CCCC.x ",
           /* line */ (const char *) " x.C.CCCC.x ",
           /* line */ (const char *) " x$..m...Ex ",
           /* line */ (const char *) " xxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^  ",
           /* line */ (const char *) " xxxxxxxxx.x ",
           /* line */ (const char *) " x.CCCCC....^",
           /* line */ (const char *) " x.C..CC.CCx ",
           /* line */ (const char *) " x.CCCC$.C.x ",
           /* line */ (const char *) " x...CCxxxxx ",
           /* line */ (const char *) "^...CCCx     ",
           /* line */ (const char *) " x....$xxxx  ",
           /* line */ (const char *) " x...C...Cx  ",
           /* line */ (const char *) " xg.CCCCCCx  ",
           /* line */ (const char *) " xxxxxExxxx  ",
           /* line */ (const char *) "     xxx     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^          ",
           /* line */ (const char *) "x.xxxxxxxxx ",
           /* line */ (const char *) "x.....C.$.x ",
           /* line */ (const char *) "x.E..CC....^",
           /* line */ (const char *) "x...C.C.m.x ",
           /* line */ (const char *) "xxxxx.....x ",
           /* line */ (const char *) "    xCCCCCx ",
           /* line */ (const char *) "xxxxxC....x ",
           /* line */ (const char *) "x....C.m..x ",
           /* line */ (const char *) "x.CCCCCCC.x ",
           /* line */ (const char *) "x....$....x ",
           /* line */ (const char *) "xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) " xxxxx.xxxxx",
           /* line */ (const char *) " xm....xx.$x",
           /* line */ (const char *) " x....CxxLLx",
           /* line */ (const char *) "^....CCxx..x",
           /* line */ (const char *) " xCC.C.....x",
           /* line */ (const char *) " xCC.CCCCC.x",
           /* line */ (const char *) " xCC.CCCC..x",
           /* line */ (const char *) " xg.......$x",
           /* line */ (const char *) " xxxxxxExxxx",
           /* line */ (const char *) "      xxx   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     xxx     ",
           /* line */ (const char *) "   xxxExxx   ",
           /* line */ (const char *) " xxxCCCCCxxx ",
           /* line */ (const char *) " xCCC...CCCx ",
           /* line */ (const char *) "^...B..$....^",
           /* line */ (const char *) " xCCC...C$Cx ",
           /* line */ (const char *) " xxxCCCCCxxx ",
           /* line */ (const char *) "   xxx.xxx   ",
           /* line */ (const char *) "      ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxxx  ",
           /* line */ (const char *) "  x.$.m..$Ex  ",
           /* line */ (const char *) " xxxxx..xxxxx ",
           /* line */ (const char *) " xBCCCCCCCCBx ",
           /* line */ (const char *) "^.==========.^",
           /* line */ (const char *) " xBCCCCCCCCBx ",
           /* line */ (const char *) " xxxxx.xxxxxx ",
           /* line */ (const char *) "      ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " xxxxxxxx    ",
           /* line */ (const char *) " x$....Mx    ",
           /* line */ (const char *) " x.CCC=Cx    ",
           /* line */ (const char *) " xCCCC=Cxxxx ",
           /* line */ (const char *) " xCCCC=CCCCx ",
           /* line */ (const char *) "^.....=.....^",
           /* line */ (const char *) " xCCCCCCCCCx ",
           /* line */ (const char *) " xxxxxxx..gx ",
           /* line */ (const char *) "     x$...xx ",
           /* line */ (const char *) "     xExxxx  ",
           /* line */ (const char *) "     xxx     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x$x......x ",
           /* line */ (const char *) " x.x.......^",
           /* line */ (const char *) " x.x...M..x ",
           /* line */ (const char *) " x.x......x ",
           /* line */ (const char *) " xsx...CCCx ",
           /* line */ (const char *) "^......C..x ",
           /* line */ (const char *) " x.....C.Ex ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " xxB.BxgEgx ",
           /* line */ (const char *) " xxx.xx...x ",
           /* line */ (const char *) " xxB.Bx...x ",
           /* line */ (const char *) " xxx.xx...x ",
           /* line */ (const char *) " xxB.Bx.M.x ",
           /* line */ (const char *) "^.........x ",
           /* line */ (const char *) " xxBxB.Bxxx ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^         ",
           /* line */ (const char *) "  xx.xxxxxxxxx",
           /* line */ (const char *) "  xB.BxgEgs..x",
           /* line */ (const char *) "  xx.xx...x..x",
           /* line */ (const char *) "  xB.Bx...xCCx",
           /* line */ (const char *) "  xx.xx...x..x",
           /* line */ (const char *) " xxB.Bx.M.x..x",
           /* line */ (const char *) "^.........x..x",
           /* line */ (const char *) " xxBxB.Bxxx.$x",
           /* line */ (const char *) "  xxxx.xxxxxxx",
           /* line */ (const char *) "      ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^         ",
           /* line */ (const char *) "  xx.xxxxxxxxx",
           /* line */ (const char *) "  xC.CxgEgs..x",
           /* line */ (const char *) "  xC.Cx...x..x",
           /* line */ (const char *) "  xC.Cx...xCCx",
           /* line */ (const char *) "  xC.Cx.M.x..x",
           /* line */ (const char *) " xCC.Cx...x..x",
           /* line */ (const char *) "^.........x..x",
           /* line */ (const char *) " xCCCC.CCCx.$x",
           /* line */ (const char *) " xxxxx.xxxxxxx",
           /* line */ (const char *) "      ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x.x....x..^",
           /* line */ (const char *) " x.x.xx.x.x ",
           /* line */ (const char *) " x.x.EB.x.x ",
           /* line */ (const char *) " x.x....x.x ",
           /* line */ (const char *) "^..x.xx.x.x ",
           /* line */ (const char *) " x.......$x ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x....C....^",
           /* line */ (const char *) " x...CCC..x ",
           /* line */ (const char *) " x..CCECC.x ",
           /* line */ (const char *) " xB..CCC..x ",
           /* line */ (const char *) "^.....C.CCx ",
           /* line */ (const char *) " xB.....C$x ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " x..B.B.B..^",
           /* line */ (const char *) " x..xxxxxxx ",
           /* line */ (const char *) " x..xE.M..x ",
           /* line */ (const char *) " x..x$....x ",
           /* line */ (const char *) "^...xxxxxDx ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) " xxx.xxxxxx ",
           /* line */ (const char *) " x$x.x....x ",
           /* line */ (const char *) " x.x.x....x ",
           /* line */ (const char *) " x.t.x..M.x ",
           /* line */ (const char *) " xxx.x....x ",
           /* line */ (const char *) " x.........^",
           /* line */ (const char *) " x.xxxxxxxx ",
           /* line */ (const char *) " x.x....C.x ",
           /* line */ (const char *) " x.xE...x.x ",
           /* line */ (const char *) "^..xxxxxx.x ",
           /* line */ (const char *) " x........x ",
           /* line */ (const char *) " xxxxx.xxxx ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);
}
