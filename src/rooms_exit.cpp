//
// Copyright Neil McGill, goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_charmap.hpp"
#include "my_level.hpp"

//
// Create all exit rooms
//
void rooms_exit(Gamep g)
{
  TRACE_NO_INDENT();

  /* clang-format off */

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x........x ",
           (const char *)" x.M.......^",
           (const char *)" x........x ",
           (const char *)" x........x ",
           (const char *)" x........x ",
           (const char *)"^.......E.x ",
           (const char *)" x.......$x ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x........x ",
           (const char *)" x..G......^",
           (const char *)" x........x ",
           (const char *)" x....CCCCx ",
           (const char *)" x....C...x ",
           (const char *)"^..M..C.E.x ",
           (const char *)" x....C..$x ",
           (const char *)" xxxxxxxxxx ",
           (const char *)"            ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x........x ",
           (const char *)" x.M.......^",
           (const char *)" x........x ",
           (const char *)" x.....```x ",
           (const char *)" x....``..x ",
           (const char *)"^...```.E.x ",
           (const char *)" x.``....$x ",
           (const char *)" xxxxxxxxxx ",
           (const char *)"            ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^       ",
           (const char *)" xxxx.xxxxxx ",
           (const char *)" x.........x ",
           (const char *)" x.M...B.B.x ",
           (const char *)"^.......E...^",
           (const char *)" x``...B.B.x ",
           (const char *)" x```......x ",
           (const char *)" x..``.....x ",
           (const char *)" x$g.```...x ",
           (const char *)" xxxxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"        ^     ",
           (const char *)" xxxxxxx.xxxx ",
           (const char *)" x..........x ",
           (const char *)" x..........x ",
           (const char *)"^............^",
           (const char *)" xxx......xxx ",
           (const char *)"   x......x   ",
           (const char *)" xxxCCCCCCxxx ",
           (const char *)" x...B..B...x ",
           (const char *)" x..........x ",
           (const char *)" x.E......M.x ",
           (const char *)" x...xxxx...x ",
           (const char *)" xCCCx  xCCCx ",
           (const char *)" x...x  x...x ",
           (const char *)" x.$.x  x.$.x ",
           (const char *)" xxxxx  xxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x......$x ",
           (const char *)" x.....M.x ",
           (const char *)"^........x ",
           (const char *)" x...E...x ",
           (const char *)" x.......x ",
           (const char *)" x........^",
           (const char *)" x.......x ",
           (const char *)" xxxxxx.xx ",
           (const char *)"       ^   ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x......$x ",
           (const char *)" x.....M.x ",
           (const char *)"^...E....x ",
           (const char *)" x.......x ",
           (const char *)" x....CCCx ",
           (const char *)" x....C...^",
           (const char *)" x....C..x ",
           (const char *)" xxxxxx.xx ",
           (const char *)"       ^   ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x.......x ",
           (const char *)" x..M....x ",
           (const char *)"^........x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x...E...x ",
           (const char *)" x......$x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x.......x ",
           (const char *)" x..M....x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x...E...x ",
           (const char *)" x......$x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxxxx ",
           (const char *)"   x......^",
           (const char *)"   x..M..x ",
           (const char *)" xxx.....x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x...E...x ",
           (const char *)" x......$x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxxxx ",
           (const char *)"   x......^",
           (const char *)"   x...xxx ",
           (const char *)" xxx.....x ",
           (const char *)" x...M...x ",
           (const char *)" x.......x ",
           (const char *)" x...E...x ",
           (const char *)" x......$x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)" xxx.....x ",
           (const char *)" x....M..x ",
           (const char *)"^........x ",
           (const char *)" x...E...x ",
           (const char *)" x......$x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)" xxx.M...x ",
           (const char *)"^..C.....x ",
           (const char *)" x$C.....x ",
           (const char *)" xxx.E...x ",
           (const char *)"   x.....x ",
           (const char *)"   xxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x.M.xxx ",
           (const char *)" xxx...C..^",
           (const char *)"^..C...C$x ",
           (const char *)" x$C...xxx ",
           (const char *)" xxx.E.x   ",
           (const char *)"   x...x   ",
           (const char *)"   xxxxx   ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)"   x.....x ",
           (const char *)"   x.M...x ",
           (const char *)"   x...xxx ",
           (const char *)"   x.E.x   ",
           (const char *)"   x..$x   ",
           (const char *)"   x.xxx   ",
           (const char *)"    ^      ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)"^.........^",
           (const char *)" xxx.M.xxx ",
           (const char *)"   x...x   ",
           (const char *)"   x...x   ",
           (const char *)"   x...x   ",
           (const char *)"   x.E.x   ",
           (const char *)"   x..$x   ",
           (const char *)"   xxxxx   ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^      ",
           (const char *)"  xxx.xxxxx ",
           (const char *)"  x.......xx",
           (const char *)" xx.x.x.x..x",
           (const char *)"^..........x",
           (const char *)" xx.x.M....x",
           (const char *)"  x.....E..x",
           (const char *)"  x.x......x",
           (const char *)"  x.......$x",
           (const char *)"  xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)" ^        ",
           (const char *)"x.xxxxxxx ",
           (const char *)"x........^",
           (const char *)"xx.M...xx ",
           (const char *)" x......x ",
           (const char *)" x......x ",
           (const char *)" xx...E.x ",
           (const char *)"  xx...$x ",
           (const char *)"  xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^  ",
           (const char *)"     x.x ",
           (const char *)"     x.x ",
           (const char *)"    xx.xx",
           (const char *)"    xB.Bx",
           (const char *)"xxxxx...x",
           (const char *)"x.......x",
           (const char *)"x....M..x",
           (const char *)"x.E.....x",
           (const char *)"x$......x",
           (const char *)"xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^  ",
           (const char *)"     x.x ",
           (const char *)"     x.x ",
           (const char *)"    xx.xx",
           (const char *)"    x|.|x",
           (const char *)"    x...x",
           (const char *)"    x|.|x",
           (const char *)"    x...x",
           (const char *)"xxxxx|.|x",
           (const char *)"x.......x",
           (const char *)"x....M..x",
           (const char *)"x.E.....x",
           (const char *)"x$......x",
           (const char *)"xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^  ",
           (const char *)"     x.x ",
           (const char *)"     x.x ",
           (const char *)"    xx.xx",
           (const char *)"    xC.Cx",
           (const char *)"    x...x",
           (const char *)"    xC.Cx",
           (const char *)"    x...x",
           (const char *)"xxxxxC.Cx",
           (const char *)"x.......x",
           (const char *)"x.....M.x",
           (const char *)"x.E.....x",
           (const char *)"x$......x",
           (const char *)"xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^  ",
           (const char *)"     x.x ",
           (const char *)"     x.x ",
           (const char *)"    xx.xx",
           (const char *)"    xB.Bx",
           (const char *)"    x...x",
           (const char *)"xxxxxB.Bx",
           (const char *)"x.......x",
           (const char *)"x.....M.x",
           (const char *)"x.E.....x",
           (const char *)"x$......x",
           (const char *)"xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)" ^         ",
           (const char *)"x.xxxxxxxx ",
           (const char *)"x.........^",
           (const char *)"x.cCCc.xxx ",
           (const char *)"x.CCCC.x   ",
           (const char *)"x...CC.xxx ",
           (const char *)"xx..CC...x ",
           (const char *)" x..cC.E.x ",
           (const char *)" x.M....$x ",
           (const char *)" xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^     ",
           (const char *)" xxxx.xxxx ",
           (const char *)" x..BMB..x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x...E..$x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxxxxxxxx",
           (const char *)" x..B.B..s....Bx",
           (const char *)" x.......x..$..x",
           (const char *)" x.......xB...Bx",
           (const char *)" x.......xxxxxxx",
           (const char *)" xxxxxxCCx      ",
           (const char *)"      x..xxxxxx ",
           (const char *)"      x.......x ",
           (const char *)"      x....M..x ",
           (const char *)"      x.......x ",
           (const char *)"      x...E..$x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxx      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" xxxxxxCCx      ",
           (const char *)"      x..xxxxxx ",
           (const char *)"      x.......x ",
           (const char *)"      x....M..x ",
           (const char *)"      x.......x ",
           (const char *)"      x...E..$x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxx      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" xxxxCCCCx      ",
           (const char *)"    x....xxxxxx ",
           (const char *)"    x.........x ",
           (const char *)"    x......G..x ",
           (const char *)"    x.........x ",
           (const char *)"    x.....E..$x ",
           (const char *)"    xxxxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxx      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" xxxxxx..x      ",
           (const char *)"      xCCx      ",
           (const char *)"      x..xxxxxx ",
           (const char *)"      x.......x ",
           (const char *)"      x.......x ",
           (const char *)"      x.......x ",
           (const char *)"      x.M.E.$.x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxxx     ",
           (const char *)" x....C...xx    ",
           (const char *)" x....C....xx   ",
           (const char *)" xxxxxx..M..xx  ",
           (const char *)"      x......xx ",
           (const char *)"      x.......x ",
           (const char *)"      x.......x ",
           (const char *)"      x...E.$.x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"  ^         ",
           (const char *)" x.xxxx     ",
           (const char *)" x....xx    ",
           (const char *)" x.....xx   ",
           (const char *)" x..M...x   ",
           (const char *)"^.......xx  ",
           (const char *)" xx......xx ",
           (const char *)"  x.......x ",
           (const char *)"  xx...E..x ",
           (const char *)"    xx...$x ",
           (const char *)"     xxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.xxx  ",
           (const char *)"  x.....x  ",
           (const char *)" xx..M..x  ",
           (const char *)"^.......x  ",
           (const char *)" xxx....xxx",
           (const char *)"   xx.....x",
           (const char *)"    x..E..x",
           (const char *)"    x....$x",
           (const char *)"    xxxxxxx",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"        ^      ",
           (const char *)"      xx.xxxx  ",
           (const char *)"     xx.....xx ",
           (const char *)"  xxxx.......x ",
           (const char *)" xx...........^",
           (const char *)"^............x ",
           (const char *)" x...M....E..x ",
           (const char *)" x..........xx ",
           (const char *)" xx...$xxxxxx  ",
           (const char *)"  xxxxxx       ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"        ^      ",
           (const char *)"      xx.xxxx  ",
           (const char *)"      x.....xx ",
           (const char *)" xxxxx.......x ",
           (const char *)" x......M....x ",
           (const char *)" x..E.......xx ",
           (const char *)" xx...$xxxxxx  ",
           (const char *)"  xxxxxx       ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"  xxxxxx  ",
           (const char *)"  x....x  ",
           (const char *)" x......x ",
           (const char *)" x..M....^",
           (const char *)"^.......x ",
           (const char *)" x....E.x ",
           (const char *)" xx....$x ",
           (const char *)"  xxxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"         ^   ",
           (const char *)"   xxxxxx.xx ",
           (const char *)"  xx.......x ",
           (const char *)"  x........x ",
           (const char *)" xx.........^",
           (const char *)" x...M....xx ",
           (const char *)" x.......xx  ",
           (const char *)" x...E...x   ",
           (const char *)" x......$x   ",
           (const char *)" xxxxxxxxx   ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"         ^ ",
           (const char *)"        x.x",
           (const char *)"        x.x",
           (const char *)"        x.x",
           (const char *)"xxxxxxxxx.x",
           (const char *)"x$........x",
           (const char *)"x.........x",
           (const char *)"x.E.......x",
           (const char *)"x.....M...x",
           (const char *)"xxxxxxxxxxx",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx     ",
           (const char *)"  xx...x     ",
           (const char *)" xx....xxxxx ",
           (const char *)" x..M..C....^",
           (const char *)" x.....xxxxx ",
           (const char *)" x.....x     ",
           (const char *)" x..E..x     ",
           (const char *)" x$....x     ",
           (const char *)" xxxxxxx     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.xxxxx",
           (const char *)"  x``.~~.!x",
           (const char *)" xx`..B~~~x",
           (const char *)"^........Ex",
           (const char *)" xx...B~~~x",
           (const char *)"  x$...~~.x",
           (const char *)" xxxxxxxxsx",
           (const char *)" xC..$CCC.x",
           (const char *)" xCm..CCC.x",
           (const char *)" xCCCCCCCCx",
           (const char *)" xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.xxxx ",
           (const char *)"xxx..C.C!x ",
           (const char *)"x$.....CCx ",
           (const char *)"x........x ",
           (const char *)"x.M..CCCCx ",
           (const char *)"x....C..xx ",
           (const char *)"xCC..C.Ex  ",
           (const char *)"xCCC.xxxx  ",
           (const char *)"x..C.x     ",
           (const char *)"x$.CCx     ",
           (const char *)"xxxxxx     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" ..$   ..M ",
           (const char *)" ...   ... ",
           (const char *)" T..   T.. ",
           (const char *)"           ",
           (const char *)"   xxxxxxxx",
           (const char *)"   x......x",
           (const char *)"   x.E....x",
           (const char *)"   x......x",
           (const char *)"xxxx......x",
           (const char *)"x..s.M....x",
           (const char *)"x..x......x",
           (const char *)"x..x......x",
           (const char *)"x$.x......x",
           (const char *)"xxxx|.|xxxx",
           (const char *)"   x...x   ",
           (const char *)"   x|.|x   ",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x.E.x   ",
           (const char *)"   x...x   ",
           (const char *)"  xxCCCxx  ",
           (const char *)" xx.....xx ",
           (const char *)"xxB..M..Bxx",
           (const char *)"x.........x",
           (const char *)"x.........x",
           (const char *)"x$........x",
           (const char *)"xxxx|.|xxxx",
           (const char *)"   x...x   ",
           (const char *)"   x|.|x   ",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x.E.x   ",
           (const char *)"  xx...xx  ",
           (const char *)" xxB...Bxx ",
           (const char *)"xx...M...xx",
           (const char *)"xB.......Bx",
           (const char *)"x.........x",
           (const char *)"xG.......Gx",
           (const char *)"xxxxB.Bxxxx",
           (const char *)"   x...x   ",
           (const char *)"   xB.Bx   ",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx   ",
           (const char *)"   x$..x   ",
           (const char *)"   x...x   ",
           (const char *)"   xxxsx   ",
           (const char *)"   x...x   ",
           (const char *)"   x.E.x   ",
           (const char *)"  xx...xx  ",
           (const char *)" xxB...Bxx ",
           (const char *)"xx...M...xx",
           (const char *)"xB.......Bx",
           (const char *)"x.........x",
           (const char *)"xG.......Gx",
           (const char *)"xxxxB.Bxxxx",
           (const char *)"   x...x   ",
           (const char *)"   xB.Bx   ",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x.E.x   ",
           (const char *)"  xx...xx  ",
           (const char *)" xxB...Bxx ",
           (const char *)"xxB.....Bxx",
           (const char *)"xB.......Bx",
           (const char *)"x.........x",
           (const char *)"x..G...G..x",
           (const char *)"x.........x",
           (const char *)"x.........x",
           (const char *)"xxxxB.Bxxxx",
           (const char *)"   x...x   ",
           (const char *)"   xB.Bx   ",
           (const char *)"     ^     ",
           nullptr);


  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxxxx     ",
           (const char *)"x......x     ",
           (const char *)"x.M....x     ",
           (const char *)"x....x.x     ",
           (const char *)"x.$..x.x     ",
           (const char *)"x....xsxxxxx ",
           (const char *)"xsxxxx......^",
           (const char *)"x...$xxxxx.x ",
           (const char *)"xxxxxx   x.x ",
           (const char *)"xE..|xxxxx.x ",
           (const char *)"x..........x ",
           (const char *)"x$..|xxxxxxx ",
           (const char *)"xxxxxx       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxx       ",
           (const char *)"xM..|xxxxxxx ",
           (const char *)"x..........x ",
           (const char *)"x$..|xxxxx.x ",
           (const char *)"xxxxxx   x..^",
           (const char *)"xE..|xxxxx.x ",
           (const char *)"x..........x ",
           (const char *)"x$..|xxxxxxx ",
           (const char *)"xxxxxx       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxx       ",
           (const char *)"x...|xxxxxxx ",
           (const char *)"x..........x ",
           (const char *)"x$..|xxxxx.x ",
           (const char *)"xxxxxx   x.x ",
           (const char *)"         x.x ",
           (const char *)"         xsx ",
           (const char *)"xxxxxx   x..^",
           (const char *)"xE..|xxxxx.x ",
           (const char *)"x..........x ",
           (const char *)"x...|xxxxxxx ",
           (const char *)"x....x       ",
           (const char *)"xM...x       ",
           (const char *)"xxxxxx       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxx       ",
           (const char *)"xM...xxxxxxx ",
           (const char *)"x..........x ",
           (const char *)"x....xxxxx.x ",
           (const char *)"xB...x   x..^",
           (const char *)"xE...xxxxx.x ",
           (const char *)"xB.........x ",
           (const char *)"x$...xxxxxxx ",
           (const char *)"xxxxxx       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxx       ",
           (const char *)"xM...xxxxxxx ",
           (const char *)"x....C.....x ",
           (const char *)"x....C..CCCx ",
           (const char *)"xB...C..C...^",
           (const char *)"xE...C..CCCx ",
           (const char *)"xB...C.....x ",
           (const char *)"x$...xxxxxxx ",
           (const char *)"xxxxxx       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxx       ",
           (const char *)"xM...xxxxxxx ",
           (const char *)"x....~~~~~~x ",
           (const char *)"x....~~~~~~x ",
           (const char *)"xB...~~~~~~.^",
           (const char *)"xE...~~~~~~x ",
           (const char *)"xB...~~~~~~x ",
           (const char *)"x$...xxxxxxx ",
           (const char *)"xxxxxx       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"        ^   ",
           (const char *)"  xxxxxx.xxx",
           (const char *)"  x........x",
           (const char *)" xx..~~..x.x",
           (const char *)"^...~~~~...x",
           (const char *)" xx..~~....x",
           (const char *)"  x...~~~~.x",
           (const char *)" xx......~~x",
           (const char *)" x~~~.....~x",
           (const char *)" x~........x",
           (const char *)" x...|E|.M.x",
           (const char *)" x$........x",
           (const char *)" xxxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"        ^   ",
           (const char *)"  xxxxxx.xxx",
           (const char *)"  x........x",
           (const char *)" xx........x",
           (const char *)"^..........x",
           (const char *)" xx........x",
           (const char *)"  x........x",
           (const char *)" xxxCCCCCxxx",
           (const char *)" x.........x",
           (const char *)" x.........x",
           (const char *)" x...|E|.M.x",
           (const char *)" x.........x",
           (const char *)" x.........x",
           (const char *)" xxxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"        ^   ",
           (const char *)"   xxxxx.xx ",
           (const char *)"   x......x ",
           (const char *)" xxx.~~..xx ",
           (const char *)"^....~~~...^",
           (const char *)" xx..~~..xx ",
           (const char *)"  x......$x ",
           (const char *)" xxxx.t.xxx ",
           (const char *)" x...|E|..x ",
           (const char *)" x.....M..x ",
           (const char *)" xxxxxxxxxx ",
 
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.xxxxx",
           (const char *)"  x``.~~.$x",
           (const char *)" xx`..B~~~x",
           (const char *)"^...G....Ex",
           (const char *)" xx...B~~~x",
           (const char *)"  x$...~~.x",
           (const char *)" xxxxxxxxsx",
           (const char *)" xC..$CCC.x",
           (const char *)" xCm..CCC.x",
           (const char *)" xCCCCCCCCx",
           (const char *)" xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.x    ",
           (const char *)"  x...xxxxx",
           (const char *)" xx...BCCCx",
           (const char *)"^...G....Ex",
           (const char *)" xx...BCCCx",
           (const char *)"  x$..xxxxx",
           (const char *)" xxxxsx    ",
           (const char *)" x....x    ",
           (const char *)" x.m..x    ",
           (const char *)" x$...x    ",
           (const char *)" xxxxxx    ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.x    ",
           (const char *)"  x...xxxxx",
           (const char *)" xx...BCCCx",
           (const char *)"^...G....Ex",
           (const char *)" xx...BCCCx",
           (const char *)"  x$..xxxxx",
           (const char *)" xxxxsx...x",
           (const char *)" x..B.B...x",
           (const char *)" x......M.x",
           (const char *)" x.......$x",
           (const char *)" xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.x    ",
           (const char *)"  x...xxxxx",
           (const char *)" xx...BCCCx",
           (const char *)"^........Ex",
           (const char *)" xx...BCCCx",
           (const char *)"  xLL.xxxxx",
           (const char *)" xxLLLL...x",
           (const char *)" xLLL.....x",
           (const char *)" x......M.x",
           (const char *)" x.......$x",
           (const char *)" xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.x    ",
           (const char *)"  x...xxxxx",
           (const char *)" xx...BCCCx",
           (const char *)"^...G....Ex",
           (const char *)" xx...BCCCx",
           (const char *)"  xL..xxxxx",
           (const char *)"  xLL.x    ",
           (const char *)"  xLLLx    ",
           (const char *)"  xLLLx    ",
           (const char *)"  x..Lx    ",
           (const char *)"  x...x    ",
           (const char *)"  x.$.x    ",
           (const char *)"  xxxxx    ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.x    ",
           (const char *)"  x...xxxxx",
           (const char *)" xx...BCCCx",
           (const char *)"^...G....Ex",
           (const char *)" xx...BCCCx",
           (const char *)"  xC..xxxxx",
           (const char *)"  xCC.x    ",
           (const char *)"  xCCCx    ",
           (const char *)"  xCCCx    ",
           (const char *)"  x..Cx    ",
           (const char *)"  x...x    ",
           (const char *)"  x.$.x    ",
           (const char *)"  xxxxx    ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^      ",
           (const char *)"  xxx.xxxxxx",
           (const char *)"  x........x",
           (const char *)" xx.....B.Bx",
           (const char *)"^.....M..E.x",
           (const char *)" xx.....B.Bx",
           (const char *)"  x........x",
           (const char *)"  xxxsxxxsxx",
           (const char *)"  x....x...x",
           (const char *)"  x..G.s.$.x",
           (const char *)"  x$...x...x",
           (const char *)"  xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)" xxxx.xx   ",
           (const char *)"^...C..xxxx",
           (const char *)" xxxx.....x",
           (const char *)"    x....$x",
           (const char *)"    x.LL.xx",
           (const char *)"    x.LL.x ",
           (const char *)"    xM..Ex ",
           (const char *)"    xxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^    ",
           (const char *)" xxxx.xx  ",
           (const char *)"^...C..xxx",
           (const char *)" xxxx....x",
           (const char *)"    x....x",
           (const char *)"    x.LL.x",
           (const char *)"    x.LL.x",
           (const char *)"    x....x",
           (const char *)"    x.LL.x",
           (const char *)"    x.LL.x",
           (const char *)"    x....x",
           (const char *)"    xM..Ex",
           (const char *)"    xxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxxx",
           (const char *)" xLL.E.LLLLx",
           (const char *)" xLL...LLL.x",
           (const char *)" x.LL.LL.x.x",
           (const char *)" x.LLMLLxx.x",
           (const char *)" x..LLL.xx.x",
           (const char *)" xxxx.xx.x.x",
           (const char *)"^.....xxxx.x",
           (const char *)" xxM.......x",
           (const char *)"  x$..LLLLLx",
           (const char *)"  xxx.xxxxxx",
           (const char *)"     ^      ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"         ^ ",
           (const char *)"  xxxxxxx.x",
           (const char *)"  x.......x",
           (const char *)"  x...g...x",
           (const char *)"  x.......x",
           (const char *)"  xxxxxCxxx",
           (const char *)"  x$....xxx",
           (const char *)" xx..CCCCCx",
           (const char *)"^....C.M.Ex",
           (const char *)" xx..C.C.Cx",
           (const char *)"  xxxx.C.xx",
           (const char *)"    x....x ",
           (const char *)"    x.xxxx ",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"   ^       ",
           (const char *)"  x.xxxxxx ",
           (const char *)"  x......x ",
           (const char *)" xx|LL...x ",
           (const char *)"^...LLL.$x ",
           (const char *)" xx|LL...x ",
           (const char *)"  x.....gx ",
           (const char *)"  xx...xxx ",
           (const char *)"   xB.Bx   ",
           (const char *)"   xBEBx   ",
           (const char *)"   xxxxx   ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"        ^  ",
           (const char *)"  xxxxxx.xx",
           (const char *)"  x$.L....x",
           (const char *)"  x.LLLLL.x",
           (const char *)" xxLLLLLLLx",
           (const char *)"^.........x",
           (const char *)" xxLLLLLLLx",
           (const char *)"  x.......x",
           (const char *)"  xsxxxxxsx",
           (const char *)"  x.xxExx.x",
           (const char *)"  x.xxCxx.x",
           (const char *)"  x$..C..mx",
           (const char *)"  xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"        ^  ",
           (const char *)"  xxxxxx.xx",
           (const char *)"  x$.C....x",
           (const char *)"  x.CCCCC.x",
           (const char *)" xxCCCCCCCx",
           (const char *)" xx.CCCCC.x",
           (const char *)"^.........x",
           (const char *)" xxCCCCCCCx",
           (const char *)"  x.......x",
           (const char *)"  xsxxxxxsx",
           (const char *)"  x.xxExx.x",
           (const char *)"  x.xxCxx.x",
           (const char *)"  x$..C..mx",
           (const char *)"  xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"   xL=Lx   ",
           (const char *)"   xL=Lx   ",
           (const char *)"xxxxL=Lxxx ",
           (const char *)"x$..L=L...^",
           (const char *)"x...L=L..x ",
           (const char *)"x........x ",
           (const char *)"xxx..M..xx ",
           (const char *)"  x..E..x  ",
           (const char *)"  xxxxxxx  ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"  xxxxxxx   ",
           (const char *)"  xxLMLxx   ",
           (const char *)"  xLL.LLx   ",
           (const char *)" xxLL.LLxx  ",
           (const char *)" LLL...LLxxx",
           (const char *)"^........s.x",
           (const char *)" LLL...LLx.x",
           (const char *)" xxLL.LLxx.x",
           (const char *)"  xLL.LLxx.x",
           (const char *)"  xxL.Lxxx.x",
           (const char *)"   xELLx$..x",
           (const char *)"   xxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxx ",
           (const char *)" xCCCCCCCx ",
           (const char *)" xC$....Cxx",
           (const char *)" xC..CCCCCx",
           (const char *)"^....C...Ex",
           (const char *)" xC..CCCCCx",
           (const char *)" xC....MCxx",
           (const char *)" xCCCCCCCx ",
           (const char *)" xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxx",
           (const char *)" xCCC.CCCCx",
           (const char *)"^....t...Ex",
           (const char *)" xCCCCCCCCx",
           (const char *)" xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxx",
           (const char *)" xLLLLLLLLx",
           (const char *)"^.......tEx",
           (const char *)" xLLLLLL.Lx",
           (const char *)" xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.xxxxx",
           (const char *)"  x....L..x",
           (const char *)" xxLLLLLLLx",
           (const char *)"^...L....gx",
           (const char *)" xxLLL.LLLx",
           (const char *)"  x.......x",
           (const char *)"  xDxxxxxxx",
           (const char *)"  x..x...$x",
           (const char *)"  x..s....x",
           (const char *)"  xxxx.M..x",
           (const char *)"     x....x",
           (const char *)"     x...Ex",
           (const char *)"     xxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"    x.x    ",
           (const char *)"xxxxC.Cxxxx",
           (const char *)"xCCCCtCCCCx",
           (const char *)"xCB.....BCx",
           (const char *)"xC...g...Cx",
           (const char *)"xCB.....BCx",
           (const char *)"xCCCC.CCCCx",
           (const char *)"xxxxCECxxxx",
           (const char *)"   xC.Cx   ",
           (const char *)"   xCCCx   ",
           (const char *)"   xC.Cxxxx",
           (const char *)"   xC$C.s$x",
           (const char *)"   xxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxxxxxxx   ",
           (const char *)"xE.LL....$x   ",
           (const char *)"x...LL..b.x   ",
           (const char *)"xLLLLLL...xxxx",
           (const char *)"x............x",
           (const char *)"xtLLLLLLLLLLLx",
           (const char *)"x.LLLLLLLLLL.x",
           (const char *)"x.......m....x",
           (const char *)"xxxxx.xxxxxxxx",
           (const char *)"     ^        ",
           nullptr);


  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"    xxxxxxxx ",
           (const char *)"    xM...$$x ",
           (const char *)"    xxsxxxxx ",
           (const char *)"    xB.B...x ",
           (const char *)"  xxx.......^",
           (const char *)" xx.LL.....x ",
           (const char *)"^..gLLLLL..x ",
           (const char *)" x...LL....x ",
           (const char *)" x....L..xxx ",
           (const char *)" x$.....xx   ",
           (const char *)" x.....Ex    ",
           (const char *)" xxxxxxxx    ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxxx",
           (const char *)" x$....L..Bx",
           (const char *)" x....L..M.x",
           (const char *)" x...LL....x",
           (const char *)"^...LLLLL..x",
           (const char *)" xxxxxxxx.xx",
           (const char *)" x....xLLLLx",
           (const char *)" x.$$.s....x",
           (const char *)" x....x..E.x",
           (const char *)" xxxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"   ^        ",
           (const char *)" xx.xxxxxxxx",
           (const char *)"^......L..Bx",
           (const char *)" x....L....x",
           (const char *)" x...LL....x",
           (const char *)" x..LLLLL..x",
           (const char *)" xxxx.g.xx.x",
           (const char *)" x..xxxxxx.x",
           (const char *)" x$.s..M...x",
           (const char *)" xxxx.LLL.xx",
           (const char *)"    x.LEL.x ",
           (const char *)"    xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^      ",
           (const char *)"xxxxx.xxxxx ",
           (const char *)"x$.$x.x.$.x ",
           (const char *)"xLLLx.xLLLx ",
           (const char *)"x...s.s..mx ",
           (const char *)"x.M.x.x.E.x ",
           (const char *)"x...xLx..$x ",
           (const char *)"x...x.D.xxxx",
           (const char *)"x...x.xsx.$x",
           (const char *)"x...xLx.L..x",
           (const char *)"xxxxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxxxxxxx",
           (const char *)"x...~~...Bx",
           (const char *)"x..xx~~...x",
           (const char *)"x.xx~~~...x",
           (const char *)"x.x~~$~~..x",
           (const char *)"x.xx~~....x",
           (const char *)"x..xx~....x",
           (const char *)"xE..x.....x",
           (const char *)"xxxxx.xxxxx",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"xxxxxxxxxxx",
           (const char *)"xE~~~....Bx",
           (const char *)"x~~~~~~...x",
           (const char *)"x~~~~~~...x",
           (const char *)"x~~~~~~~..x",
           (const char *)"x~~~~~....x",
           (const char *)"x~x~~.....x",
           (const char *)"x$x~......x",
           (const char *)"xxxxx.xxxxx",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"       ^    ",
           (const char *)"xxxxxxx.xxx ",
           (const char *)"xB.......Bx ",
           (const char *)"x....C.....^",
           (const char *)"x...CC....x ",
           (const char *)"x..CCCCC..x ",
           (const char *)"x.CC$..CC.x ",
           (const char *)"x.C..g..C.x ",
           (const char *)"x.CC...CC.x ",
           (const char *)"x.CCCCCCCCx ",
           (const char *)"x.....MCCCx ",
           (const char *)"xxxx.CCC.xx ",
           (const char *)"   x....Ex  ",
           (const char *)"   xxxxxxx  ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"xxxxx.xxxxx",
           (const char *)"x$..x.x$..x",
           (const char *)"xCCCx.xCCCx",
           (const char *)"x...x.x..mx",
           (const char *)"x.m.x.x.$.x",
           (const char *)"x...x~x...x",
           (const char *)"xCCCx.D..Cx",
           (const char *)"x...s.xsxxx",
           (const char *)"x.E.x.x..$x",
           (const char *)"xxxxx.xxxxx",
           (const char *)"     ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"    ^ ^    ",
           (const char *)"  xx.x.xx  ",
           (const char *)"  xB.$.Bx  ",
           (const char *)"  xB.$.Bx  ",
           (const char *)"  xx.C.xx  ",
           (const char *)" xxx.C.xxx ",
           (const char *)"^..C.C.C..^",
           (const char *)" xxx.C.xxx ",
           (const char *)"  xxmC.xx  ",
           (const char *)"  xB...Bx  ",
           (const char *)"  x..E..x  ",
           (const char *)"  xxxxxxx  ",
           nullptr);


  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxx ",
           (const char *)" xBxBxBx$x ",
           (const char *)" x.......x ",
           (const char *)" x...C...x ",
           (const char *)" x..C.C..x ",
           (const char *)"^.G.CEC.t.^",
           (const char *)" x..C.C..x ",
           (const char *)" x...C...x ",
           (const char *)" x.......x ",
           (const char *)" xxBxBxBxx ",
           (const char *)" xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxx ",
           (const char *)" xgxBxBxgx ",
           (const char *)" x.......x ",
           (const char *)" x...C...x ",
           (const char *)" x..C.C..x ",
           (const char *)"^...CEC...^",
           (const char *)" x..C.C..x ",
           (const char *)" x...C...x ",
           (const char *)" x.......x ",
           (const char *)" xxBxgxBxx ",
           (const char *)" xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"    xxxxxxxxx ",
           (const char *)"    xBxBxBx$x ",
           (const char *)" xxxx.......x ",
           (const char *)" x$.t...C...x ",
           (const char *)" xxxx..C.C..x ",
           (const char *)"^....g.CEC...^",
           (const char *)" xxxx..C.C..x ",
           (const char *)" x..x...C...x ",
           (const char *)" x..s.......x ",
           (const char *)" x$.xxBxBxBxx ",
           (const char *)" xxxxxxxxxxxx ",
           nullptr);


  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxxx ",
           (const char *)" x.CCCCC...x ",
           (const char *)" x.C..CCCCCx ",
           (const char *)" x.CCCC..C.x ",
           (const char *)" x...CC.$CCx ",
           (const char *)"^...CCCCCC.x ",
           (const char *)" x...C.E.CCx ",
           (const char *)" x...C...C.x ",
           (const char *)" xg.CCCCCC..^",
           (const char *)" xxxxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"         ^  ",
           (const char *)"xxxxxxxxx.x ",
           (const char *)"x.....C...x ",
           (const char *)"x.$..CC...x ",
           (const char *)"x...CCC.m.x ",
           (const char *)"x..CC.C...x ",
           (const char *)"xCCCCCCCCCx ",
           (const char *)"x....C.....^",
           (const char *)"x...CC.m..x ",
           (const char *)"x.CCCCCCCCx ",
           (const char *)"xE...CC...x ",
           (const char *)"xE...C...$x ",
           (const char *)"xxxxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"xxxxx.xxxxx",
           (const char *)"xm....x..gx",
           (const char *)"x..$.Cx...x",
           (const char *)"xB..CCx...x",
           (const char *)"xCCCC....Cx",
           (const char *)"xCCCCCCCC.x",
           (const char *)"xCCCCCCC..x",
           (const char *)"xg...C....x",
           (const char *)"xx.xxxx..Ex",
           (const char *)" x.x  xxxxx",
           (const char *)"  ^        ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"       ^     ",
           (const char *)" xxxxxx.xxxx ",
           (const char *)" x..s.L.s.$x ",
           (const char *)" xm.x.L.x..x ",
           (const char *)" xxxx.L.xxxx ",
           (const char *)"^.....L.....^",
           (const char *)" xxxx.L.xxxx ",
           (const char *)" x..x.L.xx$x ",
           (const char *)" x....Lmxx.x ",
           (const char *)" x..xxsxxx.x ",
           (const char *)" xE.x......x ",
           (const char *)" xxxxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxx",
           (const char *)" x.LLLL.L.x",
           (const char *)" x.LLLL...x",
           (const char *)" x.LLLLLL.x",
           (const char *)"^..LL$LLL.x",
           (const char *)" x........x",
           (const char *)" x.LLLLLL.x",
           (const char *)" x.LLELLL.x",
           (const char *)" x.LLLLLL.x",
           (const char *)" x...m....x",
           (const char *)" xxxxxxxx.x",
           (const char *)"         ^ ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"  xxxxxxx  ",
           (const char *)"  xLm..Lx  ",
           (const char *)"  xL.C.Lx  ",
           (const char *)" xxL.C.Lxx ",
           (const char *)"^..L.C...t^",
           (const char *)" xxL.C.Lxx ",
           (const char *)" xxL.C.Lx  ",
           (const char *)" xEL$..Lx  ",
           (const char *)" xxLLLLLx  ",
           (const char *)" xxxxxxxx  ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxxxx ",
           (const char *)" x.CCCC.C.x ",
           (const char *)" x.CCCC....^",
           (const char *)" x.CCCCCC.x ",
           (const char *)"^..CC$.CC.x ",
           (const char *)" x.CC$.CC.x ",
           (const char *)" x.CCCCCC.x ",
           (const char *)" x...CCCC.x ",
           (const char *)" x.C.CCCC.x ",
           (const char *)" x$..m...Ex ",
           (const char *)" xxxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"          ^  ",
           (const char *)" xxxxxxxxx.x ",
           (const char *)" x.CCCCC....^",
           (const char *)" x.C..CC.CCx ",
           (const char *)" x.CCCC$.C.x ",
           (const char *)" x...CCxxxxx ",
           (const char *)"^...CCCx     ",
           (const char *)" x....$xxxx  ",
           (const char *)" x...C...Cx  ",
           (const char *)" xg.CCCCCCx  ",
           (const char *)" xxxxxExxxx  ",
           (const char *)"     xxx     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" ^          ",
           (const char *)"x.xxxxxxxxx ",
           (const char *)"x.....C.$.x ",
           (const char *)"x.E..CC....^",
           (const char *)"x...C.C.m.x ",
           (const char *)"xxxxx.....x ",
           (const char *)"    xCCCCCx ",
           (const char *)"xxxxxC....x ",
           (const char *)"x....C.m..x ",
           (const char *)"x.CCCCCCC.x ",
           (const char *)"x....$....x ",
           (const char *)"xxxxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"      ^     ",
           (const char *)" xxxxx.xxxxx",
           (const char *)" xm....xx.$x",
           (const char *)" x....CxxLLx",
           (const char *)"^....CCxx..x",
           (const char *)" xCC.C.....x",
           (const char *)" xCC.CCCCC.x",
           (const char *)" xCC.CCCC..x",
           (const char *)" xg.......$x",
           (const char *)" xxxxxxExxxx",
           (const char *)"      xxx   ",
           nullptr);


  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"     xxx     ",
           (const char *)"   xxxExxx   ",
           (const char *)" xxxCCCCCxxx ",
           (const char *)" xCCC...CCCx ",
           (const char *)"^...B..$....^",
           (const char *)" xCCC...C$Cx ",
           (const char *)" xxxCCCCCxxx ",
           (const char *)"   xxx.xxx   ",
           (const char *)"      ^      ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)"  xxxxxxxxxx  ",
           (const char *)"  x.$.m..$Ex  ",
           (const char *)" xxxxx..xxxxx ",
           (const char *)" xBCCCCCCCCBx ",
           (const char *)"^.==========.^",
           (const char *)" xBCCCCCCCCBx ",
           (const char *)" xxxxx.xxxxxx ",
           (const char *)"      ^       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__,
           (const char *)" xxxxxxxx    ",
           (const char *)" x$....Mx    ",
           (const char *)" x.CCC=Cx    ",
           (const char *)" xCCCC=Cxxxx ",
           (const char *)" xCCCC=CCCCx ",
           (const char *)"^.....=.....^",
           (const char *)" xCCCCCCCCCx ",
           (const char *)" xxxxxxx..gx ",
           (const char *)"     x$...xx ",
           (const char *)"     xExxxx  ",
           (const char *)"     xxx     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x$x......x ",
           (const char *)" x.x.......^",
           (const char *)" x.x...M..x ",
           (const char *)" x.x......x ",
           (const char *)" xsx...CCCx ",
           (const char *)"^......C..x ",
           (const char *)" x.....C.Ex ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" xxB.BxgEgx ",
           (const char *)" xxx.xx...x ",
           (const char *)" xxB.Bx...x ",
           (const char *)" xxx.xx...x ",
           (const char *)" xxB.Bx.M.x ",
           (const char *)"^.........x ",
           (const char *)" xxBxB.Bxxx ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^         ",
           (const char *)"  xx.xxxxxxxxx",
           (const char *)"  xB.BxgEgs..x",
           (const char *)"  xx.xx...x..x",
           (const char *)"  xB.Bx...xCCx",
           (const char *)"  xx.xx...x..x",
           (const char *)" xxB.Bx.M.x..x",
           (const char *)"^.........x..x",
           (const char *)" xxBxB.Bxxx.$x",
           (const char *)"  xxxx.xxxxxxx",
           (const char *)"      ^       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^         ",
           (const char *)"  xx.xxxxxxxxx",
           (const char *)"  xC.CxgEgs..x",
           (const char *)"  xC.Cx...x..x",
           (const char *)"  xC.Cx...xCCx",
           (const char *)"  xC.Cx.M.x..x",
           (const char *)" xCC.Cx...x..x",
           (const char *)"^.........x..x",
           (const char *)" xCCCC.CCCx.$x",
           (const char *)" xxxxx.xxxxxxx",
           (const char *)"      ^       ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x........x ",
           (const char *)" x.x....x..^",
           (const char *)" x.x.xx.x.x ",
           (const char *)" x.x.EB.x.x ",
           (const char *)" x.x....x.x ",
           (const char *)"^..x.xx.x.x ",
           (const char *)" x.......$x ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x........x ",
           (const char *)" x....C....^",
           (const char *)" x...CCC..x ",
           (const char *)" x..CCECC.x ",
           (const char *)" xB..CCC..x ",
           (const char *)"^.....C.CCx ",
           (const char *)" xB.....C$x ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x........x ",
           (const char *)" x..B.B.B..^",
           (const char *)" x..xxxxxxx ",
           (const char *)" x..xE.M..x ",
           (const char *)" x..x$....x ",
           (const char *)"^...xxxxxDx ",
           (const char *)" x........x ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^       ",
           (const char *)" xxx.xxxxxx ",
           (const char *)" x$x.x....x ",
           (const char *)" x.x.x....x ",
           (const char *)" x.t.x..M.x ",
           (const char *)" xxx.x....x ",
           (const char *)" x.........^",
           (const char *)" x.xxxxxxxx ",
           (const char *)" x.x....C.x ",
           (const char *)" x.xE...x.x ",
           (const char *)"^..xxxxxx.x ",
           (const char *)" x........x ",
           (const char *)" xxxxx.xxxx ",
           (const char *)"      ^     ",
           nullptr);

  /* clang-format on */
}
