//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_level.hpp"

//
// Create all prefab rooms
//
void rooms_prefab_secret(Gamep g)
{
  TRACE_NO_INDENT();

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^       ",
           /* line */ (const char *) "    ...xxxxx ",
           /* line */ (const char *) " $. ...x.$$x ",
           /* line */ (const char *) " ..s...+..$x ",
           /* line */ (const char *) " .. ...xxxxx ",
           /* line */ (const char *) "    B...... ^",
           /* line */ (const char *) "^..s.......  ",
           /* line */ (const char *) " .. B......  ",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^       ",
           /* line */ (const char *) "    ...xxxxx ",
           /* line */ (const char *) "    ..BxM$$x ",
           /* line */ (const char *) "    ...+..$x ",
           /* line */ (const char *) "    ..Bxxxxx ",
           /* line */ (const char *) "    ........^",
           /* line */ (const char *) "^..s.......  ",
           /* line */ (const char *) " .. .......  ",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^       ",
           /* line */ (const char *) "    ...xxxxx ",
           /* line */ (const char *) "    ...xG$$x ",
           /* line */ (const char *) "    ...+..$x ",
           /* line */ (const char *) "    ...xxxxx ",
           /* line */ (const char *) "    ........^",
           /* line */ (const char *) "^..s.B.B.B.  ",
           /* line */ (const char *) " .. .......  ",
           /* line */ (const char *) "        ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^         ",
           /* line */ (const char *) "         .....      ",
           /* line */ (const char *) "         .B...      ",
           /* line */ (const char *) "         ...B.      ",
           /* line */ (const char *) "  ...... .........  ",
           /* line */ (const char *) "^.......s..........^",
           /* oine */ (const char *) "  ...... .. x+xxx   ",
           /* oine */ (const char *) "    . xxxxxxx...x   ",
           /* oine */ (const char *) "    C xM....x...x   ",
           /* oine */ (const char *) "    . x....$x...x   ",
           /* oine */ (const char *) "    C xsxxxxx...x   ",
           /* line */ (const char *) "    . x.....x...x   ",
           /* line */ (const char *) "    C x.....s..$x   ",
           /* line */ (const char *) "    . xxxxxxxxxxx   ",
           /* line */ (const char *) "    ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^         ",
           /* line */ (const char *) "         .....      ",
           /* line */ (const char *) "         .....      ",
           /* line */ (const char *) "         .....      ",
           /* line */ (const char *) "  ...... .........  ",
           /* line */ (const char *) "^.......s..........^",
           /* oine */ (const char *) "  ...... .. x+xxx   ",
           /* line */ (const char *) "    C       xC..x   ",
           /* line */ (const char *) "    .       x...x   ",
           /* line */ (const char *) "    C       x...x   ",
           /* line */ (const char *) "    .       x.$$x   ",
           /* line */ (const char *) "    .       xxxxx   ",
           /* line */ (const char *) "    ^               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^     ",
           /* line */ (const char *) " xxxxxxx C     ",
           /* line */ (const char *) " x.M..$x .     ",
           /* line */ (const char *) " x.....x C     ",
           /* line */ (const char *) " x.....x C     ",
           /* line */ (const char *) " x$....x .     ",
           /* line */ (const char *) " xxxx+xx s     ",
           /* line */ (const char *) "     ......... ",
           /* line */ (const char *) "^.............^",
           /* line */ (const char *) " ............. ",
           /* line */ (const char *) "     ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^     ",
           /* line */ (const char *) " xxxxxxx .     ",
           /* line */ (const char *) " x..``$x .     ",
           /* line */ (const char *) " x...`Cx .     ",
           /* line */ (const char *) " x$.CCCx .     ",
           /* line */ (const char *) " x..C``x .     ",
           /* line */ (const char *) " xxxx+xx s     ",
           /* line */ (const char *) "     ......... ",
           /* line */ (const char *) "^......x.B.x.. ",
           /* line */ (const char *) " ......B...B.. ",
           /* line */ (const char *) " ......x.B.x..^",
           /* line */ (const char *) " ............. ",
           /* line */ (const char *) "     ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x.$..x ",
           /* line */ (const char *) "x..$.+^",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xM...x ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "xM...x ",
           /* line */ (const char *) "x.$.Cx ",
           /* line */ (const char *) "x..$C+^",
           /* line */ (const char *) "x...Cx ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxx  ",
           /* line */ (const char *) "xM..xx ",
           /* line */ (const char *) "x.$..x ",
           /* line */ (const char *) "x..$.+^",
           /* line */ (const char *) "xx...x ",
           /* line */ (const char *) " xxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxx  ",
           /* line */ (const char *) "xM..xx ",
           /* line */ (const char *) "x.$.Cx ",
           /* line */ (const char *) "x..$C+^",
           /* line */ (const char *) "xx..Cx ",
           /* line */ (const char *) " xxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x$..$x ",
           /* line */ (const char *) "x.M..x ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xCCCCx ",
           /* line */ (const char *) "xCCC.x ",
           /* line */ (const char *) "xC...+^",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "xM...x ",
           /* line */ (const char *) "x.$..x ",
           /* line */ (const char *) "x..$.+^",
           /* line */ (const char *) "xm...x ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx    ",
           /* line */ (const char *) "x....xxxx ",
           /* line */ (const char *) "x.$.....x ",
           /* line */ (const char *) "x..$....+^",
           /* line */ (const char *) "xM......x ",
           /* line */ (const char *) "xxxxxxxxx ",
           /* line */ (const char *) "          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx    ",
           /* line */ (const char *) "x....x    ",
           /* line */ (const char *) "x.$..xxxx ",
           /* line */ (const char *) "x..$....+^",
           /* line */ (const char *) "xM......x ",
           /* line */ (const char *) "xxxxxxxxx ",
           /* line */ (const char *) "          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx    ",
           /* line */ (const char *) "x....x    ",
           /* line */ (const char *) "x.$..xxxx ",
           /* line */ (const char *) "x..$....+^",
           /* line */ (const char *) "xG...xxxx ",
           /* line */ (const char *) "x....x    ",
           /* line */ (const char *) "xxxxxx    ",
           /* line */ (const char *) "          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "x....x        ",
           /* line */ (const char *) "x.$..xxxxxxxx ",
           /* line */ (const char *) "x..$........+^",
           /* line */ (const char *) "xG...xxxxxxxx ",
           /* line */ (const char *) "x....x        ",
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "x....x        ",
           /* line */ (const char *) "x.$..xxxxxxxx ",
           /* line */ (const char *) "x..$....CC..+^",
           /* line */ (const char *) "xM...xxxxxxxx ",
           /* line */ (const char *) "x....x        ",
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "x...Bxxxxxxxx ",
           /* line */ (const char *) "x.......CC..+^",
           /* line */ (const char *) "xG..Bxxxxxxxx ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "x....xxBxBxBx ",
           /* line */ (const char *) "x....CM.....+^",
           /* line */ (const char *) "x....xxBxBxBx ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "x....xxBxBxBx ",
           /* line */ (const char *) "xG...sM.....+^",
           /* line */ (const char *) "x....xxBxBxBx ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "xxxsxxxBxBxBx ",
           /* line */ (const char *) "x....x......x^",
           /* line */ (const char *) "x.M..s..G...+^",
           /* line */ (const char *) "x....x......x^",
           /* line */ (const char *) "xxxsxxxBxBxBx ",
           /* line */ (const char *) "x$...x        ",
           /* line */ (const char *) "xxxxxx        ",
           /* line */ (const char *) "              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x...Mx ",
           /* line */ (const char *) "x.$..x ",
           /* line */ (const char *) "x.$$.+^",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x...Gx ",
           /* line */ (const char *) "x.$$.x ",
           /* line */ (const char *) "x.$$.+^",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x...Gx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x.B..+^",
           /* line */ (const char *) "xxsxxx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x$..$x ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "xCCCCx ",
           /* line */ (const char *) "xC$$Cx ",
           /* line */ (const char *) "xC$$C+^",
           /* line */ (const char *) "xCCCCx ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "xLLLLx ",
           /* line */ (const char *) "xL$.Lx ",
           /* line */ (const char *) "xL.$L+^",
           /* line */ (const char *) "xLLLLx ",
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "xLLLLx ",
           /* line */ (const char *) "xL..Lx ",
           /* line */ (const char *) "xL..L+^",
           /* line */ (const char *) "xLLLLx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xxsxxx ",
           /* line */ (const char *) " x...x ",
           /* line */ (const char *) " x$$$x ",
           /* line */ (const char *) " xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "xCC..x ",
           /* line */ (const char *) "xC..Cx ",
           /* line */ (const char *) "x...C+^",
           /* line */ (const char *) "x...Cx ",
           /* line */ (const char *) "xxsxxx ",
           /* line */ (const char *) " x.xxx ",
           /* line */ (const char *) " x...x ",
           /* line */ (const char *) " x$$$x ",
           /* line */ (const char *) " xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx          ",
           /* line */ (const char *) "xM...x          ",
           /* line */ (const char *) "x....xxxxxxxxxx ",
           /* line */ (const char *) "x....s........+^",
           /* line */ (const char *) "x....xxxxxxxxxx ",
           /* line */ (const char *) "xxsxxx          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x$$$x          ",
           /* line */ (const char *) " xxxxx          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx          ",
           /* line */ (const char *) "xM...x          ",
           /* line */ (const char *) "x....xBxBxBxBxx ",
           /* line */ (const char *) "x....s...M....+^",
           /* line */ (const char *) "x....xBxBxBxBxx ",
           /* line */ (const char *) "xxsxxx          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x$$$x          ",
           /* line */ (const char *) " xxxxx          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx          ",
           /* line */ (const char *) "xM...x          ",
           /* line */ (const char *) "x....xBxBxBxBxx ",
           /* line */ (const char *) "x....s.C.C.C..+^",
           /* line */ (const char *) "x....xBxBxBxBxx ",
           /* line */ (const char *) "xxsxxx          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x$$$x          ",
           /* line */ (const char *) " xxxxx          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx          ",
           /* line */ (const char *) "xM...x          ",
           /* line */ (const char *) "x....xCxCxCxCxx ",
           /* line */ (const char *) "x....s..C.C.C.+^",
           /* line */ (const char *) "x....xCxCxCxCxx ",
           /* line */ (const char *) "xxsxxx          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x...x          ",
           /* line */ (const char *) " x$$$x          ",
           /* line */ (const char *) " xxxxx          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx  xxxxx ",
           /* line */ (const char *) "xM....$$x  x...x ",
           /* line */ (const char *) "x......$x  x...x ",
           /* line */ (const char *) "x.......x  x...+^",
           /* line */ (const char *) "x.......x  xsxxx ",
           /* line */ (const char *) "xxsxxxxxx  x.x   ",
           /* line */ (const char *) " x.x      xxsxxx ",
           /* line */ (const char *) " xsxxxxxxxx....x ",
           /* line */ (const char *) " x.....s..s....x ",
           /* line */ (const char *) " x.....xxxx....x ",
           /* line */ (const char *) " xxxxxxx  xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx  xxxxx ",
           /* line */ (const char *) "xM....$$x  x...x ",
           /* line */ (const char *) "x......$x  x...x ",
           /* line */ (const char *) "x.......x  x...+^",
           /* line */ (const char *) "x.......x  xsxxx ",
           /* line */ (const char *) "xx......x  x.x   ",
           /* line */ (const char *) " x......x xxsxxx ",
           /* line */ (const char *) " x......xxx....x ",
           /* line */ (const char *) " x......s.s....x ",
           /* line */ (const char *) " x.....xxxx....x ",
           /* line */ (const char *) " xxxxxxx  xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx  xxxxx ",
           /* line */ (const char *) "xM....$$x  x...x ",
           /* line */ (const char *) "x......$x  x...x ",
           /* line */ (const char *) "x.......x  x...+^",
           /* line */ (const char *) "x.......x  xsxxx ",
           /* line */ (const char *) "xx......x  x.x   ",
           /* line */ (const char *) " x......x xxsxxx ",
           /* line */ (const char *) " x.....CxxxCCC.x ",
           /* line */ (const char *) " x....CCs.s....x ",
           /* line */ (const char *) " x....Cxxxx....x ",
           /* line */ (const char *) " xxxxxxx  xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx  xxxxx ",
           /* line */ (const char *) "xM....$$x  x...x ",
           /* line */ (const char *) "x......$x  x..Cx ",
           /* line */ (const char *) "x.......x  x..C+^",
           /* line */ (const char *) "x.......x  xsxxx ",
           /* line */ (const char *) "xxCC....x  x.x   ",
           /* line */ (const char *) " x.CCCC.x xxsxxx ",
           /* line */ (const char *) " x.....CxxxCCC.x ",
           /* line */ (const char *) " x....CCs.s....x ",
           /* line */ (const char *) " x....Cxxxx....x ",
           /* line */ (const char *) " xxxxxxx  xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx  xxxxx ",
           /* line */ (const char *) "xM....$$x  x...x ",
           /* line */ (const char *) "x......$x  x..Cx ",
           /* line */ (const char *) "x.......x  x..C+^",
           /* line */ (const char *) "x.......x  xsxxx ",
           /* line */ (const char *) "xxCC....x  x.x   ",
           /* line */ (const char *) " x.CCCC.x xxsxxx ",
           /* line */ (const char *) " x.....CxxxCCC.x ",
           /* line */ (const char *) " x.M..CCs.s....x ",
           /* line */ (const char *) " x....Cxxxx....x ",
           /* line */ (const char *) " xxxxxxx  xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxx  xxxxx ",
           /* line */ (const char *) "xM....$$x  x...x ",
           /* line */ (const char *) "x......$x  x..Cx ",
           /* line */ (const char *) "x.......x  x..C+^",
           /* line */ (const char *) "x.......x  xsxxx ",
           /* line */ (const char *) "xxCC....x  x.x   ",
           /* line */ (const char *) " x.CCCC.x xxsxxx ",
           /* line */ (const char *) " x.....CxxxCCC.x ",
           /* line */ (const char *) " x....CCs.s..M.x ",
           /* line */ (const char *) " x....Cxxxx....x ",
           /* line */ (const char *) " x....Cxxxx....x ",
           /* line */ (const char *) " x....Cxxxx....x ",
           /* line */ (const char *) " xxxxxxx  xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x...Cx ",
           /* line */ (const char *) "x...C+^",
           /* line */ (const char *) "x...Cx ",
           /* line */ (const char *) "xxsxxx ",
           /* line */ (const char *) " x...x ",
           /* line */ (const char *) " x$$$x ",
           /* line */ (const char *) " xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x....C ",
           /* line */ (const char *) "x...Cx ",
           /* line */ (const char *) "x.M.C+^",
           /* line */ (const char *) "x...Cx ",
           /* line */ (const char *) "xxsxxx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x..$.x ",
           /* line */ (const char *) "xxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxx ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "x....+^",
           /* line */ (const char *) "x....x ",
           /* line */ (const char *) "xxsxxx ",
           /* line */ (const char *) " x.M.x ",
           /* line */ (const char *) " x$$$x ",
           /* line */ (const char *) " xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  xC..CC.$x",
           /* line */ (const char *) "  xCC..C..x",
           /* line */ (const char *) "  x.C...CCx",
           /* line */ (const char *) "  x.CC.M.Cx",
           /* line */ (const char *) " |x.CC....x",
           /* line */ (const char *) "^.+.CCCC..x",
           /* line */ (const char *) " |x....CC.x",
           /* line */ (const char *) "  xxxxsxxxx",
           /* line */ (const char *) "  x..B.B..x",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  x..B$B..x",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  x.CCCCC.x",
           /* line */ (const char *) "  x.C...C.x",
           /* line */ (const char *) "  x.C.$.C.x",
           /* line */ (const char *) " Bx.C...C.x",
           /* line */ (const char *) "^.+.CCCCC.x",
           /* line */ (const char *) " Bx.......x",
           /* line */ (const char *) "  xxxxsxxxx",
           /* line */ (const char *) "  x..B.B..x",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  x..B$B..x",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  x.LLLLL.x",
           /* line */ (const char *) "  x.L...L.x",
           /* line */ (const char *) "  x.L.$.L.x",
           /* line */ (const char *) " |x.L...L.x",
           /* line */ (const char *) "^.+.LLLLL.x",
           /* line */ (const char *) " |x.......x",
           /* line */ (const char *) "  xxxxsxxxx",
           /* line */ (const char *) "  x..B.B..x",
           /* line */ (const char *) "  x...M...x",
           /* line */ (const char *) "  x$.B.B.$x",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  xLL....Mx",
           /* line */ (const char *) "  x.LL.$..x",
           /* line */ (const char *) "  x.LL....x",
           /* line */ (const char *) "  x.LL....x",
           /* line */ (const char *) " Bx..LL...x",
           /* line */ (const char *) "^.+...LLL.x",
           /* line */ (const char *) " Bx.....LLx",
           /* line */ (const char *) "  xxxxsxxxx",
           /* line */ (const char *) "  x..B.B..x",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) "  x$.B$B.$x",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  xm......x",
           /* line */ (const char *) "  x.xxxxx.x",
           /* line */ (const char *) "  x.x...x.x",
           /* line */ (const char *) "  x.x.B.x.x",
           /* line */ (const char *) "  x.x...x.x",
           /* line */ (const char *) "  x.x.M.x.x",
           /* line */ (const char *) "  x.x...x.x",
           /* line */ (const char *) "  x.x.B.s.x",
           /* line */ (const char *) " Bx.x...x.x",
           /* line */ (const char *) "^.+.xxsxx.x",
           /* line */ (const char *) " Bx..x.xm.x",
           /* line */ (const char *) "  xxxx.xxxx",
           /* line */ (const char *) "  x..$.$..x",
           /* line */ (const char *) "  x...$...x",
           /* line */ (const char *) "  x..$.$..x",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  x..x....x",
           /* line */ (const char *) "  x..s..M.x",
           /* line */ (const char *) "  x..x....x",
           /* line */ (const char *) "  x..xB..Bx",
           /* line */ (const char *) "  x..x....x",
           /* line */ (const char *) "  x$.xB..Bx",
           /* line */ (const char *) "  xxxx....x",
           /* line */ (const char *) "  x.......x",
           /* line */ (const char *) " Bx....M..x",
           /* line */ (const char *) "^.+.......x",
           /* line */ (const char *) " Bxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx",
           /* line */ (const char *) "  x$.x....x",
           /* line */ (const char *) "  x..s....x",
           /* line */ (const char *) "  x..xx...x",
           /* line */ (const char *) "  xxxxx...x",
           /* line */ (const char *) "  xxxxx...x",
           /* oine */ (const char *) "  x...x.M.x",
           /* line */ (const char *) " Bx.M.s...x",
           /* line */ (const char *) "^.+...x...x",
           /* line */ (const char *) " Bxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxx.```x ",
           /* line */ (const char *) "x$.x.CCCx ",
           /* line */ (const char *) "x..x.C``x ",
           /* line */ (const char *) "xx+x.x`Cx ",
           /* line */ (const char *) " x...x`$x ",
           /* line */ (const char *) " xxxsxxxx ",
           /* line */ (const char *) "^..B.B...^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ...xxxxxx",
           /* line */ (const char *) " ..Bx...Mx",
           /* line */ (const char *) " ...+..$$x",
           /* line */ (const char *) " ..Bx..$$x",
           /* line */ (const char *) " ...xxxxxx",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) "      s   ",
           /* line */ (const char *) "^........^",
           /* line */ (const char *) " ........ ",
           /* line */ (const char *) " ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) "    .       ",
           /* line */ (const char *) "  ......bb  ",
           /* line */ (const char *) "  .xxxx..b  ",
           /* line */ (const char *) "^..x$$x...  ",
           /* line */ (const char *) "  .x$$x...  ",
           /* line */ (const char *) "  .xM.+...  ",
           /* line */ (const char *) "  .xxxx...  ",
           /* line */ (const char *) "  .........^",
           /* line */ (const char *) "      .     ",
           /* line */ (const char *) "      ^     ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "    .xxxxx ",
           /* line */ (const char *) "    .xM$$x ",
           /* line */ (const char *) "  ...+.$$x ",
           /* line */ (const char *) "  ...xxxxx ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  5......  ",
           /* line */ (const char *) "  55.....  ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^          ^          ",
           /* line */ (const char *) "    . xxxxxx   .          ",
           /* line */ (const char *) "    . xB$$Bx55......5     ",
           /* line */ (const char *) "    . x$.G$x55.......5    ",
           /* line */ (const char *) "    . x....x555.......5   ",
           /* line */ (const char *) "    . xx+xxx5555.......5  ",
           /* line */ (const char *) "  5..``````.............. ",
           /* line */ (const char *) "  ......```......b.b.b...^",
           /* line */ (const char *) "^........................ ",
           /* line */ (const char *) "  ...............b.b.b... ",
           /* line */ (const char *) "  ....................... ",
           /* line */ (const char *) "  5.B..B..B..B..B..B..B.. ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^          ^          ",
           /* line */ (const char *) "    .xxxxxxxxxx.          ",
           /* line */ (const char *) "    .x$......Gx.......... ",
           /* line */ (const char *) "    .x...m....x`.......g. ",
           /* line */ (const char *) "    .x$.......+``........ ",
           /* line */ (const char *) "    .xxxxxxxxxx`......... ",
           /* line */ (const char *) "  5..```````............. ",
           /* line */ (const char *) "  ..C.C.C.C.C.C.C.C.C....^",
           /* line */ (const char *) "^...C```C...C..`C...C.... ",
           /* line */ (const char *) "  .``.C.`.C..`C...C...... ",
           /* line */ (const char *) "  ..C`C.C`C`C.C`C.C.C.... ",
           /* line */ (const char *) "  5..`````.`..`.`........ ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^          ^          ",
           /* line */ (const char *) "    .xxxxxxxxxx.          ",
           /* line */ (const char *) "    .x$......Gx.......... ",
           /* line */ (const char *) "    .x...m....x`.......g. ",
           /* line */ (const char *) "    .x$.......+``........ ",
           /* line */ (const char *) "    .xxxxxxxxxx``........ ",
           /* line */ (const char *) "  5..........````........ ",
           /* line */ (const char *) "  ..|.|.|.|.|.|.|.|.|....^",
           /* line */ (const char *) "^................M....... ",
           /* line */ (const char *) "  ....................... ",
           /* line */ (const char *) "  ..|.|.|.|.|.|.|.|.|.... ",
           /* line */ (const char *) "  5...................... ",
           /* line */ (const char *) "                       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^               ",
           /* line */ (const char *) "  . 55 xxxxxxxxxx ",
           /* line */ (const char *) "  . 55 x$$....G.x ",
           /* line */ (const char *) " ....5 xxxxxxxx+x ",
           /* line */ (const char *) "^....55    B.  `. ",
           /* line */ (const char *) " ........  ..  ..^",
           /* line */ (const char *) " .m.............. ",
           /* line */ (const char *) " ......  ..  ..   ",
           /* line */ (const char *) " ......  .B  .B   ",
           /* line */ (const char *) "   .              ",
           /* line */ (const char *) "   ^              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^               ",
           /* line */ (const char *) "  .  xxxxxxx      ",
           /* line */ (const char *) "  ..`+...$$x..g.  ",
           /* line */ (const char *) " ..``xM.$xxx.  .  ",
           /* line */ (const char *) "^..``xxxxx B.  B. ",
           /* line */ (const char *) " ...```    ..  ..^",
           /* line */ (const char *) " .m....s......... ",
           /* line */ (const char *) " ......  ..  ..   ",
           /* line */ (const char *) " ......  .B  .B   ",
           /* line */ (const char *) "   .     ...g..   ",
           /* line */ (const char *) "   ^              ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) "     .  xxxxxxx ",
           /* line */ (const char *) " ..55.55x$s..mx ",
           /* line */ (const char *) " ......5x$....x ",
           /* line */ (const char *) " ..m...5x$.|.|x ",
           /* line */ (const char *) "^.. ...5xxx...x ",
           /* line */ (const char *) " 5.....5C.x|.|x ",
           /* line */ (const char *) " 555...C55xx+xx ",
           /* line */ (const char *) "   555CC.555`5  ",
           /* line */ (const char *) "     C5......5  ",
           /* line */ (const char *) "      5.... .5  ",
           /* line */ (const char *) "       5.....5  ",
           /* line */ (const char *) "       555.....^",
           /* line */ (const char *) "           ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^      ",
           /* line */ (const char *) "  . xxxx ",
           /* line */ (const char *) " 5.`x.$x ",
           /* line */ (const char *) " |.`+..x ",
           /* line */ (const char *) " 5.`x.$x ",
           /* line */ (const char *) " 5.`xxxx ",
           /* line */ (const char *) " 5..     ",
           /* line */ (const char *) " 5.....  ",
           /* line */ (const char *) " 5.g...  ",
           /* line */ (const char *) "^......  ",
           /* line */ (const char *) " 5.....  ",
           /* line */ (const char *) " 5....5  ",
           /* line */ (const char *) " 555....^",
           /* line */ (const char *) "    ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " 5....t... ",
           /* line */ (const char *) " 5.... ... ",
           /* line */ (const char *) " 5.... ... ",
           /* line */ (const char *) "^...xxx... ",
           /* line */ (const char *) " 5..x$+.m. ",
           /* line */ (const char *) " 5..x$x... ",
           /* line */ (const char *) " 5. xxx    ",
           /* line */ (const char *) " 5........^",
           /* line */ (const char *) "  ^        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^          ",
           /* line */ (const char *) " 5..C.......5 ",
           /* line */ (const char *) " 5...C......5 ",
           /* line */ (const char *) " 5...    ...5 ",
           /* line */ (const char *) " ....    .... ",
           /* line */ (const char *) " CCCCCC...... ",
           /* line */ (const char *) " CCCCCCC..... ",
           /* line */ (const char *) " ...CCCCC.... ",
           /* line */ (const char *) "x+xxxx   .... ",
           /* line */ (const char *) "xg..$x   .... ",
           /* line */ (const char *) "x...$x   .... ",
           /* line */ (const char *) "x...$. CCC... ",
           /* line */ (const char *) "x5555...CCC.g ",
           /* line */ (const char *) "xxxxxx        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "xxxxxxxxxx ",
           /* line */ (const char *) "x$.s.....x ",
           /* line */ (const char *) "x$.x.....x ",
           /* line */ (const char *) "x$.x.M...x ",
           /* line */ (const char *) "x..x...$$x ",
           /* line */ (const char *) "xxxx+xxxxx ",
           /* line */ (const char *) "    ``....^",
           /* line */ (const char *) "........   ",
           /* line */ (const char *) "........   ",
           /* line */ (const char *) ".......    ",
           /* line */ (const char *) "....       ",
           /* line */ (const char *) " ..        ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " $ ~~~~~~~. ",
           /* line */ (const char *) " .s~~~~ ... ",
           /* line */ (const char *) "        ... ",
           /* line */ (const char *) "^...... ... ",
           /* line */ (const char *) "  ..... ... ",
           /* line */ (const char *) "  ......... ",
           /* line */ (const char *) "  .T..```..^",
           /* line */ (const char *) " xxxxxx+x ^ ",
           /* line */ (const char *) " x.T....x   ",
           /* line */ (const char *) " x......x   ",
           /* line */ (const char *) " x......x   ",
           /* line */ (const char *) " x......x   ",
           /* line */ (const char *) " x.m.$$$x   ",
           /* line */ (const char *) " xxxxxxxx   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "     .      ",
           /* line */ (const char *) "    .....   ",
           /* line */ (const char *) "    .....   ",
           /* line */ (const char *) "    .....   ",
           /* line */ (const char *) "    .....   ",
           /* line */ (const char *) "xxxx``...   ",
           /* line */ (const char *) "xG$x`...$   ",
           /* line */ (const char *) "x$.x`....   ",
           /* line */ (const char *) "x..x`....   ",
           /* line */ (const char *) "x..+`....   ",
           /* line */ (const char *) "x..x``....^ ",
           /* line */ (const char *) "xxxx.       ",
           /* line */ (const char *) "    ^       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "...  .      ",
           /* line */ (const char *) "......  xxxx",
           /* line */ (const char *) "......``+..x",
           /* line */ (const char *) "......` x..x",
           /* line */ (const char *) "....... x..x",
           /* line */ (const char *) "....... xCCx",
           /* line */ (const char *) " ...... xCCx",
           /* line */ (const char *) " .   xxxx..x",
           /* line */ (const char *) " .   x$....x",
           /* line */ (const char *) " .   x$..M.x",
           /* line */ (const char *) " .   x$....x",
           /* line */ (const char *) " .   xxxxxxx",
           /* line */ (const char *) " ^          ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^      ",
           /* line */ (const char *) "      .``m   ",
           /* line */ (const char *) " .. ...  $   ",
           /* line */ (const char *) " ......      ",
           /* line */ (const char *) " ...... ...  ",
           /* line */ (const char *) " ...... ...  ",
           /* line */ (const char *) " `..... ...  ",
           /* line */ (const char *) " ``.... ...  ",
           /* line */ (const char *) "x+xx... ...  ",
           /* line */ (const char *) "x..x........^",
           /* line */ (const char *) "x..x........ ",
           /* line */ (const char *) "xM.x........ ",
           /* line */ (const char *) "x..x........ ",
           /* line */ (const char *) "x$$x       . ",
           /* line */ (const char *) "xxxx       . ",
           /* line */ (const char *) "           ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^      ",
           /* line */ (const char *) "      .      ",
           /* line */ (const char *) "  .~~~~      ",
           /* line */ (const char *) "  ..~~~~     ",
           /* line */ (const char *) " .....~~...  ",
           /* line */ (const char *) " ......~...  ",
           /* line */ (const char *) " ......~~... ",
           /* line */ (const char *) " .. ~~~~~... ",
           /* line */ (const char *) " ..   ~~~... ",
           /* line */ (const char *) "^..` xxxxxxxx",
           /* line */ (const char *) " ..``+..CM..x",
           /* line */ (const char *) " ...`x..C...x",
           /* line */ (const char *) " ...`x..C.$$x",
           /* line */ (const char *) " ...`x..C.$$x",
           /* line */ (const char *) " ....xxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^        ",
           /* line */ (const char *) "   .        ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "xxxxxx .    ",
           /* line */ (const char *) "x$.`$x .    ",
           /* line */ (const char *) "x...`x .   ~",
           /* line */ (const char *) "x.M.`x .   ~",
           /* line */ (const char *) "x...`x .   ~",
           /* line */ (const char *) "xx+xxx ...~~",
           /* line */ (const char *) "x..x.......~",
           /* line */ (const char *) "x..x.......~",
           /* line */ (const char *) "xxsx......~~",
           /* line */ (const char *) " ......~~~~~",
           /* line */ (const char *) "  ..~~~~~~~~",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^          ",
           /* line */ (const char *) "  .  CCCCC.$ ",
           /* line */ (const char *) "  ......C..m ",
           /* line */ (const char *) "xxxxxx .CC.. ",
           /* line */ (const char *) "x$.`$x .CCCC ",
           /* line */ (const char *) "x...`x .     ",
           /* line */ (const char *) "x.M.`x .     ",
           /* line */ (const char *) "x...`x .     ",
           /* line */ (const char *) "xx+xxx .....^",
           /* line */ (const char *) ".......CCC.  ",
           /* line */ (const char *) ".. ..CCCCC.  ",
           /* line */ (const char *) ".   .CCCCC.  ",
           /* line */ (const char *) ".......t..   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^        ",
           /* line */ (const char *) "..$  .        ",
           /* line */ (const char *) ".m.  . CC..   ",
           /* line */ (const char *) "...  ...CC.   ",
           /* line */ (const char *) "CCCCCC.CCCC   ",
           /* line */ (const char *) "C.C  C.C x.xxx",
           /* line */ (const char *) "C.CCCC.C x..$x",
           /* line */ (const char *) "C.C  C.C x.$.x",
           /* line */ (const char *) "C.CC.....x..$x",
           /* line */ (const char *) " ........x.xxx",
           /* line */ (const char *) "    .....+.x  ",
           /* line */ (const char *) "    .....xxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    B.B     ",
           /* line */ (const char *) "    ...     ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "^...C.C....^",
           /* line */ (const char *) "   .CCC.    ",
           /* line */ (const char *) "   .....    ",
           /* line */ (const char *) "  x+xxxxxxx ",
           /* line */ (const char *) "  x``..M$$x ",
           /* line */ (const char *) "  x`.`....x ",
           /* line */ (const char *) "  x`.`....x ",
           /* oine */ (const char *) "  x`.`....x ",
           /* line */ (const char *) "  xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) " .... . ..  ",
           /* line */ (const char *) " .........  ",
           /* line */ (const char *) "xxxx......  ",
           /* line */ (const char *) "x$$x...CCC  ",
           /* line */ (const char *) "x..x...C..  ",
           /* line */ (const char *) "x.Mx...C..  ",
           /* line */ (const char *) "x..+...C..^ ",
           /* line */ (const char *) "x..x...CCC  ",
           /* line */ (const char *) "xxxx....... ",
           /* line */ (const char *) "  . ....... ",
           /* line */ (const char *) "  ^         ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) " .......CC  ",
           /* line */ (const char *) " ........C  ",
           /* line */ (const char *) " ........C  ",
           /* line */ (const char *) " .B...B...  ",
           /* line */ (const char *) "^.........  ",
           /* line */ (const char *) " .B...B. ..^",
           /* line */ (const char *) " .....xxxxx ",
           /* line */ (const char *) " C.C..+.$$x ",
           /* line */ (const char *) " CCC..x.$$x ",
           /* line */ (const char *) " CCC..xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "   .CC..   ",
           /* line */ (const char *) "   .CC..   ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "   ..CC.   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  x+xxxxxxx",
           /* line */ (const char *) "  x`...M$$x",
           /* line */ (const char *) "  x``...$$x",
           /* line */ (const char *) "  xxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " ... . ..  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) " .....x+xx ",
           /* line */ (const char *) " .....x..x ",
           /* line */ (const char *) "......x$$x ",
           /* line */ (const char *) "   ...s$$x ",
           /* line */ (const char *) "   ...xxxx ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) "     ...   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " .......~~ ",
           /* line */ (const char *) " ........~ ",
           /* line */ (const char *) " ...xxx..~ ",
           /* line */ (const char *) " ....Bx... ",
           /* line */ (const char *) "^.x...x... ",
           /* line */ (const char *) " .xB.... . ",
           /* line */ (const char *) " .xxx.xxxxx",
           /* line */ (const char *) " ~.~..x.$$x",
           /* line */ (const char *) " ~~~..+..Mx",
           /* line */ (const char *) "      x.$$x",
           /* line */ (const char *) "      xxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ..   ..  ",
           /* line */ (const char *) "  .......  ",
           /* line */ (const char *) "   .L.L.   ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) "   .L.L.   ",
           /* line */ (const char *) "   .....   ",
           /* line */ (const char *) "  x+xxxxxx ",
           /* line */ (const char *) "  x.x$.M$x ",
           /* line */ (const char *) "  x.x....x ",
           /* line */ (const char *) "  x.x....x ",
           /* line */ (const char *) "  x.xxx..x ",
           /* line */ (const char *) "  x......x ",
           /* line */ (const char *) "  xxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) " .......~~ ",
           /* line */ (const char *) " ........~ ",
           /* line */ (const char *) " .......b~ ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "^..C.C.... ",
           /* line */ (const char *) " ....... . ",
           /* line */ (const char *) " ......xxxx",
           /* line */ (const char *) " ~.~...+..x",
           /* line */ (const char *) " ~~~.. x$$x",
           /* line */ (const char *) " ~~~.. xxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "     C=C..  ",
           /* line */ (const char *) "    .C=C..  ",
           /* line */ (const char *) "   ..C=C..  ",
           /* line */ (const char *) "^..........^",
           /* line */ (const char *) "   .......  ",
           /* line */ (const char *) "  ........  ",
           /* line */ (const char *) "  ....xx+xx ",
           /* line */ (const char *) " .....x...x ",
           /* line */ (const char *) " .....xLLLx ",
           /* line */ (const char *) " .....xLLLx ",
           /* line */ (const char *) " .. ..s.$$x ",
           /* line */ (const char *) " .. ..x.$$x ",
           /* line */ (const char *) "     .xxxxx ",
           /* line */ (const char *) "     ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   .... .. ",
           /* line */ (const char *) "  .b...... ",
           /* line */ (const char *) " .........^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) " ....`  .  ",
           /* line */ (const char *) "  ..``  .  ",
           /* line */ (const char *) " xxxx+x .  ",
           /* line */ (const char *) " x....x .  ",
           /* line */ (const char *) " x....x .  ",
           /* line */ (const char *) " x$...x .  ",
           /* line */ (const char *) " x$M..x .  ",
           /* line */ (const char *) " xxxxxx .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  g....... ",
           /* line */ (const char *) "  .... ...^",
           /* line */ (const char *) " .... . .. ",
           /* line */ (const char *) " ... ... . ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "x+x ...... ",
           /* line */ (const char *) "x.xxxx.... ",
           /* line */ (const char *) "x....x  .  ",
           /* line */ (const char *) "x....x  .  ",
           /* line */ (const char *) "x...$x  .  ",
           /* line */ (const char *) "x..G$x  .  ",
           /* line */ (const char *) "xxxxxx  .  ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^     ",
           /* line */ (const char *) "   ......   ",
           /* line */ (const char *) "  ..|...|.  ",
           /* line */ (const char *) "  ...LLL..  ",
           /* line */ (const char *) "  ..LLLLg..^",
           /* line */ (const char *) "^....LLL..  ",
           /* line */ (const char *) "  |.......| ",
           /* line */ (const char *) "    xx+xxxx ",
           /* line */ (const char *) " xxxx.....x ",
           /* line */ (const char *) " x..s..M..x ",
           /* line */ (const char *) " x..x.....x ",
           /* line */ (const char *) " x..x.....x ",
           /* line */ (const char *) " x$$x....$x ",
           /* line */ (const char *) " xxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^       ",
           /* line */ (const char *) "  ......CC  ",
           /* line */ (const char *) " m.......C  ",
           /* line */ (const char *) " ...C.....  ",
           /* line */ (const char *) " ...Cg....  ",
           /* line */ (const char *) " ...CCCC...^",
           /* line */ (const char *) " C...C..xxx ",
           /* line */ (const char *) " CC.... x$x ",
           /* oine */ (const char *) "xxxxxx+xxCx ",
           /* line */ (const char *) "x..s......x ",
           /* line */ (const char *) "x..x......x ",
           /* line */ (const char *) "x$.x......x ",
           /* line */ (const char *) "x$.x.....Mx ",
           /* line */ (const char *) "xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^       ",
           /* line */ (const char *) "    .....     ",
           /* line */ (const char *) "   .......    ",
           /* line */ (const char *) "   |..C....|  ",
           /* line */ (const char *) "^....Cg......^",
           /* line */ (const char *) "   |..CCC..|  ",
           /* line */ (const char *) " xxxx..CC..   ",
           /* line */ (const char *) " x$$x....x+xx ",
           /* line */ (const char *) " x..x....x..x ",
           /* line */ (const char *) " x..x....x..x ",
           /* line */ (const char *) " x..x....x..x ",
           /* line */ (const char *) " xsxxxxxxx..x ",
           /* line */ (const char *) " x.....x.xCCx ",
           /* line */ (const char *) " x.M...x.xCCx ",
           /* line */ (const char *) " x.....s.s..x ",
           /* line */ (const char *) " xxxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "  .....C.. ",
           /* line */ (const char *) " ...C.CCC. ",
           /* line */ (const char *) " ...C..CC. ",
           /* line */ (const char *) " ...CCCC.. ",
           /* line */ (const char *) "x+x...CC.  ",
           /* line */ (const char *) "x.x....... ",
           /* line */ (const char *) "x.x....... ",
           /* line */ (const char *) "x.x....... ",
           /* line */ (const char *) "x.x....... ",
           /* line */ (const char *) "x.xxxx   . ",
           /* line */ (const char *) "x.$$.x ... ",
           /* line */ (const char *) "x...Gx g.g ",
           /* line */ (const char *) "x.$$.x ... ",
           /* line */ (const char *) "xxxxxx ... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) " ..|...|.  ",
           /* line */ (const char *) " ...CCC..  ",
           /* line */ (const char *) " ..CCCCg..^",
           /* line */ (const char *) "^...CCC..  ",
           /* line */ (const char *) " |.......| ",
           /* line */ (const char *) "   xx+xx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xCCCx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) " xxx...xxx ",
           /* line */ (const char *) " x....M..x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x$.....$x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ........  ",
           /* line */ (const char *) "  m..... ..  ",
           /* line */ (const char *) "  ...... ..  ",
           /* line */ (const char *) "     .g.  ..^",
           /* line */ (const char *) "  .........  ",
           /* line */ (const char *) "^........x+x ",
           /* line */ (const char *) "  ...... x.x ",
           /* line */ (const char *) "  ...... x.x ",
           /* line */ (const char *) "  ...... x.x ",
           /* line */ (const char *) " xxxxxxxxxsx ",
           /* line */ (const char *) " x..CC.CC..x ",
           /* line */ (const char *) " x..C...C..x ",
           /* line */ (const char *) " x$.CM..C..x ",
           /* line */ (const char *) " x$.CC.CC..x ",
           /* line */ (const char *) " xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  ......   ",
           /* line */ (const char *) " ..|...|.  ",
           /* line */ (const char *) " ........  ",
           /* line */ (const char *) " ......g..^",
           /* line */ (const char *) "^........  ",
           /* line */ (const char *) " |.......| ",
           /* line */ (const char *) "   xx+xx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) " xxx..Mxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.$.$.$.x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "^..        ",
           /* line */ (const char *) " ...       ",
           /* line */ (const char *) "  ..m xxxxx",
           /* line */ (const char *) "   ...x.$.x",
           /* line */ (const char *) "   ...+..$x",
           /* line */ (const char *) "   ...x.$.x",
           /* line */ (const char *) "    ..xxxxx",
           /* line */ (const char *) "     ...   ",
           /* line */ (const char *) "      .... ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) "  .m.      ",
           /* line */ (const char *) "  ...      ",
           /* line */ (const char *) " ....      ",
           /* line */ (const char *) "  $....... ",
           /* line */ (const char *) "xxxxxx..$. ",
           /* line */ (const char *) "x$.M.+.... ",
           /* line */ (const char *) "x....x .   ",
           /* line */ (const char *) "x...$x .   ",
           /* line */ (const char *) "xxxxxx .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "  ....      ",
           /* line */ (const char *) "     D      ",
           /* line */ (const char *) "$.. ...$    ",
           /* line */ (const char *) "...D....    ",
           /* line */ (const char *) "... ..m....^",
           /* line */ (const char *) "xx+xxxxxxxx ",
           /* line */ (const char *) "x.....s...x ",
           /* line */ (const char *) "x...M.x...x ",
           /* line */ (const char *) "x.....x..$x ",
           /* line */ (const char *) "x$....x..$x ",
           /* line */ (const char *) "xxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ...LLLL. ",
           /* line */ (const char *) "   ...L.. L ",
           /* line */ (const char *) "   ...LL..L ",
           /* line */ (const char *) "^......LLLL ",
           /* line */ (const char *) "   ........ ",
           /* line */ (const char *) " xxxx+x ... ",
           /* line */ (const char *) " x$.L.x.... ",
           /* line */ (const char *) " x..L.x .   ",
           /* line */ (const char *) " x.LL.x .   ",
           /* line */ (const char *) " x.L..x .   ",
           /* line */ (const char *) " xLLL.x .   ",
           /* line */ (const char *) " xxxxxx .   ",
           /* line */ (const char *) "        ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ..LLLLL  ",
           /* line */ (const char *) "   $C....LLL  ",
           /* line */ (const char *) "     ..L...L  ",
           /* line */ (const char *) "^..........$  ",
           /* line */ (const char *) "     .|.|...  ",
           /* line */ (const char *) "       .      ",
           /* line */ (const char *) " xxxxxx+xxxxxx",
           /* line */ (const char *) " x$LLL.......x",
           /* line */ (const char *) " xLLL...LLL..x",
           /* line */ (const char *) " xLL..LLLL..Lx",
           /* line */ (const char *) " xLL.LLLLL..Lx",
           /* line */ (const char *) " xLL.LLLLL..Lx",
           /* line */ (const char *) " xLL..L.L..LLx",
           /* line */ (const char *) " x.....M...L$x",
           /* line */ (const char *) " xxxxxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^          ",
           /* line */ (const char *) " ......LL.  ",
           /* line */ (const char *) " ......LL$  ",
           /* line */ (const char *) " $$....LL.  ",
           /* line */ (const char *) "     D      ",
           /* line */ (const char *) ".CC CCC...  ",
           /* line */ (const char *) "..CD......  ",
           /* line */ (const char *) "... ..m...  ",
           /* line */ (const char *) "xx+xxxx D   ",
           /* line */ (const char *) "x.....x.... ",
           /* line */ (const char *) "x....Cx.... ",
           /* line */ (const char *) "xCCCCCx.... ",
           /* line */ (const char *) "xC....x....^",
           /* line */ (const char *) "x..M..x.... ",
           /* line */ (const char *) "x.....x.... ",
           /* line */ (const char *) "x$.$.$x.... ",
           /* line */ (const char *) "xxxxxxx.... ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) " . .....b. ",
           /* line */ (const char *) " . ......b ",
           /* line */ (const char *) " $ ....... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "    |.|  . ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  xxx+xxx  ",
           /* line */ (const char *) "  x.BCB.x  ",
           /* line */ (const char *) "  xCCCCCx  ",
           /* line */ (const char *) "  x.BCB.x  ",
           /* line */ (const char *) " xx.....xx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...M...x ",
           /* line */ (const char *) " xx.....xx ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x$$.$$x  ",
           /* line */ (const char *) "  xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) " ...b..... ",
           /* line */ (const char *) " ......m..^",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  xxx+xxx  ",
           /* line */ (const char *) "  x.CCC.x  ",
           /* line */ (const char *) "  xCC.C.x  ",
           /* line */ (const char *) "  xCCCCCx  ",
           /* line */ (const char *) "  xCC.CCx  ",
           /* line */ (const char *) "  x.CCCCx  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x$M..$x  ",
           /* line */ (const char *) "  xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "  .......B ",
           /* line */ (const char *) "  .b...... ",
           /* line */ (const char *) "  ....m... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "xxxx+x.... ",
           /* line */ (const char *) "x$...x.... ",
           /* line */ (const char *) "x....x .   ",
           /* line */ (const char *) "x....x .   ",
           /* line */ (const char *) "xG.$$x .   ",
           /* line */ (const char *) "xxxxxx .   ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^   ",
           /* line */ (const char *) "   ......B ",
           /* line */ (const char *) "   ....... ",
           /* line */ (const char *) "   ...m... ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) "   .|.|...^",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  xxx+xxx  ",
           /* line */ (const char *) "  x.C.C.x  ",
           /* line */ (const char *) "  x.CCC.x  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x.M...x  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x$...$x  ",
           /* line */ (const char *) "  xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^  ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) "        .  ",
           /* line */ (const char *) " m.... b.. ",
           /* line */ (const char *) " ..m......^",
           /* line */ (const char *) " m..m. b.. ",
           /* line */ (const char *) "     .     ",
           /* line */ (const char *) "  xxx+xxx  ",
           /* line */ (const char *) "  xC....x  ",
           /* line */ (const char *) "  xCCCCCx  ",
           /* line */ (const char *) "  x....Cx  ",
           /* line */ (const char *) "  x..M..x  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) "  x$$.$$x  ",
           /* line */ (const char *) "  xxxxxxx  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  .m..s... ",
           /* line */ (const char *) "  .mm.   . ",
           /* line */ (const char *) "  m...   $ ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) "... G...C.^",
           /* line */ (const char *) ".m.C.G..   ",
           /* line */ (const char *) "... ..G.   ",
           /* line */ (const char *) " s   xxxxx ",
           /* line */ (const char *) ".....x.$$x ",
           /* line */ (const char *) ".m...+M$$x ",
           /* line */ (const char *) ".....x.$$x ",
           /* line */ (const char *) "     xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^        ",
           /* line */ (const char *) "  G..bs... ",
           /* line */ (const char *) "  ....   . ",
           /* line */ (const char *) "  b..G   $ ",
           /* line */ (const char *) "     C     ",
           /* line */ (const char *) "... G...C.^",
           /* line */ (const char *) ".m.C.G..   ",
           /* line */ (const char *) "... ..G.   ",
           /* line */ (const char *) " s   xxxxx ",
           /* line */ (const char *) ".....x.$$x ",
           /* line */ (const char *) ".m...+M$$x ",
           /* line */ (const char *) ".....x...x ",
           /* line */ (const char *) "     xxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) " `.....`.  ",
           /* line */ (const char *) " ...``.`.. ",
           /* line */ (const char *) " ..````.`` ",
           /* line */ (const char *) " ....`..$$^",
           /* line */ (const char *) " ....`..`. ",
           /* line */ (const char *) " `````.``. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "xx+x     s ",
           /* line */ (const char *) "x..x     . ",
           /* line */ (const char *) "x$$x     . ",
           /* line */ (const char *) "xxxx     . ",
           /* line */ (const char *) "         ^ ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_SECRET_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   ^       ",
           /* line */ (const char *) "   .       ",
           /* line */ (const char *) "  .......$ ",
           /* line */ (const char *) "  .xxxxxx. ",
           /* line */ (const char *) "^..x$$$Mx. ",
           /* line */ (const char *) "  .x....x. ",
           /* line */ (const char *) "  .x....x. ",
           /* line */ (const char *) "  .x...Tx. ",
           /* line */ (const char *) "  .x+xxxx.^",
           /* line */ (const char *) "  ........ ",
           /* line */ (const char *) "  s   .    ",
           /* line */ (const char *) "  $   .    ",
           /* line */ (const char *) "      ^    ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, NO_FLAGS, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^    ",
           /* line */ (const char *) "^......... ",
           /* line */ (const char *) " .xxxxxxx.^",
           /* line */ (const char *) " .+.B.B.x. ",
           /* line */ (const char *) " .x..$..x. ",
           /* line */ (const char *) " .x.B.B.x. ",
           /* line */ (const char *) " .xxxxxxx. ",
           /* line */ (const char *) " ......... ",
           /* line */ (const char *) "        ^  ",
           /* end */ nullptr);
}
