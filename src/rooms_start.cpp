//
// Copyright Neil McGill, goblinhack@gmail.com
//

#include "my_callstack.hpp"
#include "my_charmap.hpp"
#include "my_level.hpp"

//
// Create all start rooms
//
void rooms_start(Gamep g)
{
  TRACE_NO_INDENT();

  /* clang-format off */

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)"^........x ",
           (const char *)" x...@...x ",
           (const char *)" x.......x ",
           (const char *)" x........^",
           (const char *)" x.......x ",
           (const char *)" xxxxxx.xx ",
           (const char *)"       ^   ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)"^........x ",
           (const char *)" x...@...x ",
           (const char *)" x.......x ",
           (const char *)" x........^",
           (const char *)" x.......x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)"^........x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x...@...x ",
           (const char *)" x.......x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxxxx ",
           (const char *)"   x.....x ",
           (const char *)"   x.....x ",
           (const char *)" xxx.....x ",
           (const char *)"^........x ",
           (const char *)" x.......x ",
           (const char *)" x...@....^",
           (const char *)" x.......x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)" xxx.....x ",
           (const char *)"^........x ",
           (const char *)" x.......x ",
           (const char *)" x...@....^",
           (const char *)" x.......x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)" xxx.....x ",
           (const char *)"^........x ",
           (const char *)" x.......x ",
           (const char *)" x...@....^",
           (const char *)" x.......x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)" xxx.....x ",
           (const char *)"^........x ",
           (const char *)" x.......x ",
           (const char *)" xxx.@....^",
           (const char *)"   x.....x ",
           (const char *)"   xxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)"   x.xxx   ",
           (const char *)"   x...x   ",
           (const char *)"   x...xxx ",
           (const char *)" xxx......^",
           (const char *)"^........x ",
           (const char *)" x.....xxx ",
           (const char *)" xxx.@.x   ",
           (const char *)"   x...x   ",
           (const char *)"   xxxxx   ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxx   ",
           (const char *)"^......x   ",
           (const char *)" xxx...xxx ",
           (const char *)"   x......^",
           (const char *)"   x.....x ",
           (const char *)"   x...xxx ",
           (const char *)"   x.@.x   ",
           (const char *)"   x...x   ",
           (const char *)"   xxxxx   ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)"^.........^",
           (const char *)" xxx...xxx ",
           (const char *)"   x...x   ",
           (const char *)"   x...x   ",
           (const char *)"   x...x   ",
           (const char *)"   x.@.x   ",
           (const char *)"   x...x   ",
           (const char *)"   xxxxx   ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)"^.........^",
           (const char *)" xxx...xxx ",
           (const char *)"   x.@.x   ",
           (const char *)"   x...x   ",
           (const char *)"   xxxxx   ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^          ",
           (const char *)" xxx.xxxxxxxxxx",
           (const char *)"^.............x",
           (const char *)" xxxxxxxxxx...x",
           (const char *)"          x.@.x",
           (const char *)"          x...x",
           (const char *)"          xxxxx",
           (const char *)"               ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^          ",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"   x..........x",
           (const char *)"   xxxxxxxx...x",
           (const char *)"          x.@.x",
           (const char *)"          x...x",
           (const char *)"   xxxxxxxx...x",
           (const char *)"   x..........x",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"    ^          ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^          ",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"   x..........x",
           (const char *)"   x.xxxxxx...x",
           (const char *)"   x.x    x.@.x",
           (const char *)"   x.x    x...x",
           (const char *)"   x.xxxxxx...x",
           (const char *)"   x..........x",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"    ^          ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^          ",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"   x..........x",
           (const char *)"   x.xxxxxx...x",
           (const char *)"   x.x    x.@.x",
           (const char *)"   x.x    x...x",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"   x.s.......$x",
           (const char *)"   x.xxxxxxxxxx",
           (const char *)"    ^          ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^      ",
           (const char *)"  xxx.xxxxx ",
           (const char *)"  x.......xx",
           (const char *)" xx.x.x.x..x",
           (const char *)"^..........x",
           (const char *)" xx.x......x",
           (const char *)"  x.....@..x",
           (const char *)"  x.x......x",
           (const char *)"  x.......xx",
           (const char *)"  xxxxxxxxxx",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)" ^        ",
           (const char *)"x.xxxxxx  ",
           (const char *)"x......x  ",
           (const char *)" x.....xx ",
           (const char *)" x......x ",
           (const char *)" x......x ",
           (const char *)" xx...@..^",
           (const char *)"  xx....x ",
           (const char *)"  xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"   xxxxxxx   ",
           (const char *)" xxx.....xx  ",
           (const char *)"^.........xx ",
           (const char *)" xxxxx.....x ",
           (const char *)"     x|....x ",
           (const char *)" ....s..@...^",
           (const char *)" .$. x|....x ",
           (const char *)" ... xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"   xxxxxxx   ",
           (const char *)" xxx.....xx  ",
           (const char *)"^.........xx ",
           (const char *)" xxxxx.....x ",
           (const char *)"     x|....x ",
           (const char *)" ....s..@...^",
           (const char *)" .m. x|....x ",
           (const char *)" ... xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"   xxxxxxx   ",
           (const char *)" xxx.....xx  ",
           (const char *)"^.........xx ",
           (const char *)" xxxxx.....x ",
           (const char *)"     x|....x ",
           (const char *)" ...Cs..@...^",
           (const char *)" .$. x|....x ",
           (const char *)" m.. xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"  xxxxxxxxx ",
           (const char *)" xx.CCCCCCx ",
           (const char *)"^....CCCCCx ",
           (const char *)" xxC..CCCCx ",
           (const char *)"  xCC.....x ",
           (const char *)"  xxx...@.x ",
           (const char *)"    x......^",
           (const char *)"    xxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^   ",
           (const char *)"     x.x  ",
           (const char *)"     x.x  ",
           (const char *)"    xx.xx ",
           (const char *)"    xB.Bx ",
           (const char *)"xxxxx...x ",
           (const char *)"x.......x ",
           (const char *)"x.......x ",
           (const char *)"x.@.....x ",
           (const char *)"x........^",
           (const char *)"xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^   ",
           (const char *)"     x.x  ",
           (const char *)"     x.x  ",
           (const char *)"    xx.xx ",
           (const char *)"    x|.|x ",
           (const char *)"    x...x ",
           (const char *)"    x|.|x ",
           (const char *)"    x...x ",
           (const char *)"xxxxx|.|x ",
           (const char *)"x.......x ",
           (const char *)"x.......x ",
           (const char *)"x.@.....x ",
           (const char *)"x........^",
           (const char *)"xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^   ",
           (const char *)"     x.x  ",
           (const char *)"     x.x  ",
           (const char *)"    xx.xx ",
           (const char *)"    xC.Cx ",
           (const char *)"    x...x ",
           (const char *)"    xC.Cx ",
           (const char *)"    x...x ",
           (const char *)"xxxxxC.Cx ",
           (const char *)"x.......x ",
           (const char *)"x.......x ",
           (const char *)"x.@.....x ",
           (const char *)"x........^",
           (const char *)"xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"      ^   ",
           (const char *)"     x.x  ",
           (const char *)"     x.x  ",
           (const char *)"    xx.xx ",
           (const char *)"    xB.Bx ",
           (const char *)"    x...x ",
           (const char *)"xxxxxB.Bx ",
           (const char *)"x.......x ",
           (const char *)"x.......x ",
           (const char *)"x.@.....x ",
           (const char *)"x........^",
           (const char *)"xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)" ^         ",
           (const char *)"x.xxxxxx   ",
           (const char *)"x......x   ",
           (const char *)"x.cCCc.x   ",
           (const char *)"x.CCCC.x   ",
           (const char *)"x...CC.xxx ",
           (const char *)"xx..CC...x ",
           (const char *)" x..cC.@.x ",
           (const char *)" x........^",
           (const char *)" xxxxxxxxx ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x........^",
           (const char *)" x.......x ",
           (const char *)"^........x ",
           (const char *)" x...@...x ",
           (const char *)" xxxxxx.xx ",
           (const char *)"       ^   ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"    ^      ",
           (const char *)" xxx.xxxxx ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)"^........x ",
           (const char *)" x...@...x ",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^     ",
           (const char *)" xxxx.xxxx ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x.......x ",
           (const char *)" x...@....^",
           (const char *)" xxxxxxxxx ",
           (const char *)"           ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxx      ",
           (const char *)"^........x      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" x.......x      ",
           (const char *)" xxxxxx..x      ",
           (const char *)"      x..xxxxxx ",
           (const char *)"      x.......x ",
           (const char *)"      x.......x ",
           (const char *)"      x.......x ",
           (const char *)"      x...@...x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxx      ",
           (const char *)"^........x      ",
           (const char *)" x.......x      ",
           (const char *)" xxxxxx..x      ",
           (const char *)"      x..xxxxxx ",
           (const char *)"      x.......x ",
           (const char *)"      x...@...x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxxx     ",
           (const char *)"^.........xx    ",
           (const char *)" x.........xx   ",
           (const char *)" xxxxxx.....xx  ",
           (const char *)"      x......xx ",
           (const char *)"      x.......x ",
           (const char *)"      x...@...x ",
           (const char *)"      xxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, true /* check exits */, __FUNCTION__, __LINE__, 
           (const char *)"     ^          ",
           (const char *)" xxxx.xxxx      ",
           (const char *)"^.........x     ",
           (const char *)" x.........x    ",
           (const char *)" x..........x   ",
           (const char *)"  x..........x  ",
           (const char *)"   x..........x ",
           (const char *)"    x.....@...x ",
           (const char *)"     xxxxxxxxxx ",
           (const char *)"                ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"      ^   ",
           (const char *)"   xxx.x  ",
           (const char *)"  x.....x ",
           (const char *)" x......x ",
           (const char *)" x...@..x ",
           (const char *)"^.......x ",
           (const char *)" xx......^",
           (const char *)"   xxxx.x ",
           (const char *)"       ^  ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"  ^         ",
           (const char *)" x.xxxx     ",
           (const char *)" x....x     ",
           (const char *)" x.....x    ",
           (const char *)" x......x   ",
           (const char *)"^.......x   ",
           (const char *)" xx......x  ",
           (const char *)"  x.......x ",
           (const char *)"   x...@..x ",
           (const char *)"     x....x ",
           (const char *)"      xxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"     ^     ",
           (const char *)"  xxx.xxx  ",
           (const char *)"  x.....x  ",
           (const char *)" xx.....x  ",
           (const char *)"^.......x  ",
           (const char *)" xxx....xxx",
           (const char *)"    x.....x",
           (const char *)"    x..@..x",
           (const char *)"    x.....x",
           (const char *)"    xxxxxxx",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"        ^      ",
           (const char *)"       x.xxx   ",
           (const char *)"      x.....x  ",
           (const char *)"   xxx.......x ",
           (const char *)" xx...........^",
           (const char *)"^............x ",
           (const char *)" x........@..x ",
           (const char *)" x..........x  ",
           (const char *)"  x....xxxxx   ",
           (const char *)"   xxxx        ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"        ^      ",
           (const char *)"       x.xxx   ",
           (const char *)"      x.....x  ",
           (const char *)"  xxxx.......x ",
           (const char *)"^............x ",
           (const char *)" x..@.......x  ",
           (const char *)"  x....xxxxx   ",
           (const char *)"   xxxx        ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"  xxxxxx  ",
           (const char *)"  x....x  ",
           (const char *)" x......x ",
           (const char *)" x.......^",
           (const char *)"^.......x ",
           (const char *)" x....@.x ",
           (const char *)"  x.....x ",
           (const char *)"   xxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"         ^   ",
           (const char *)"   xxxxxx.x  ",
           (const char *)"   x.......x ",
           (const char *)"  x........x ",
           (const char *)"  x.........^",
           (const char *)" x...@....xx ",
           (const char *)" x.......x   ",
           (const char *)"^........x   ",
           (const char *)" xx......x   ",
           (const char *)"  xxxxxxx    ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"         ^   ",
           (const char *)"   xxxxxx.x  ",
           (const char *)"   x.......x ",
           (const char *)"  x........x ",
           (const char *)"  x.........^",
           (const char *)"^....@....xx ",
           (const char *)" x.......x   ",
           (const char *)"  xxxxxxx    ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"         ^   ",
           (const char *)"   xxxxxx.x  ",
           (const char *)"   x.......x ",
           (const char *)"  x........x ",
           (const char *)"  x.........^",
           (const char *)" x.........x ",
           (const char *)" x.........x ",
           (const char *)"^........@.x ",
           (const char *)" xx........x ",
           (const char *)"  xxxxxxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxxxxxx ",
           (const char *)"   x...s..$x ",
           (const char *)"  x....xxxxx ",
           (const char *)"  x.........^",
           (const char *)" x.....xxxxx ",
           (const char *)" x.........x ",
           (const char *)"^........@.x ",
           (const char *)" xx........x ",
           (const char *)"  xxxxxxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxxxxxx ",
           (const char *)"   x...s..mx ",
           (const char *)"  x....xxxxx ",
           (const char *)"  x.........^",
           (const char *)" x.....xxxxx ",
           (const char *)"^..........x ",
           (const char *)" x.......@.x ",
           (const char *)" xx........x ",
           (const char *)"  xxxxxxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx     ",
           (const char *)"   x...x     ",
           (const char *)"  x....xxxxx ",
           (const char *)"  x.........^",
           (const char *)" x.....xxxxx ",
           (const char *)" x.........x ",
           (const char *)"^........@.x ",
           (const char *)" xx........x ",
           (const char *)"  xxxxxxxxxx ",
           nullptr);

  room_add(g, false /* check */, __FUNCTION__, __LINE__,
           (const char *)"   xxxxx     ",
           (const char *)"   x...x     ",
           (const char *)"  x....xxxxx ",
           (const char *)"^...@.......^",
           (const char *)" x.....xxxxx ",
           (const char *)" xxxxxxx     ",
           nullptr);

  /* clang-format on */
}
