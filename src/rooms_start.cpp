//
// Copyright goblinhack@gmail.com
//

#include "my_callstack.hpp"
// REMOVED #include "my_charmap.hpp"
#include "my_level.hpp"

//
// Create all start rooms
//
void rooms_start(Gamep g)
{
  TRACE_NO_INDENT();

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x...@...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x........^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxx.xx ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "       ^     ",
           /* line */ (const char *) "     x...x   ",
           /* line */ (const char *) "  xxxx.xxxx  ",
           /* line */ (const char *) " xx.......x  ",
           /* line */ (const char *) " .x.......x  ",
           /* line */ (const char *) "^.........x  ",
           /* line */ (const char *) " .x...@...xx ",
           /* line */ (const char *) " xx.......x. ",
           /* line */ (const char *) "  x.........^",
           /* line */ (const char *) "  x.......x. ",
           /* line */ (const char *) "  xxxx.xxxxx ",
           /* line */ (const char *) "    x...x    ",
           /* line */ (const char *) "      ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "          ^     ",
           /* line */ (const char *) "        x.x     ",
           /* line */ (const char *) "        x.x     ",
           /* line */ (const char *) "        x.x     ",
           /* line */ (const char *) " xxxxxxxx.xxxx  ",
           /* line */ (const char *) "^............x  ",
           /* line */ (const char *) " xxxxx...@...x  ",
           /* line */ (const char *) "     x.......xx ",
           /* line */ (const char *) "     xxxx......^",
           /* line */ (const char *) "        x.xxxxx ",
           /* line */ (const char *) "        x.x     ",
           /* line */ (const char *) "        x.x     ",
           /* line */ (const char *) "         ^      ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x...@...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x........^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...@...x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxxxx ",
           /* line */ (const char *) "   x.....x ",
           /* line */ (const char *) "   x.....x ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...@....^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...@....^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...@....^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx.....x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " xxx.@....^",
           /* line */ (const char *) "   x.....x ",
           /* line */ (const char *) "   xxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) "   x.xxx   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) " xxx......^",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x.....xxx ",
           /* line */ (const char *) " xxx.@.x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxx   ",
           /* line */ (const char *) "^......x   ",
           /* line */ (const char *) " xxx...xxx ",
           /* line */ (const char *) "   x......^",
           /* line */ (const char *) "   x.....x ",
           /* line */ (const char *) "   x...xxx ",
           /* line */ (const char *) "   x.@.x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " xxx...xxx ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   x.@.x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) "^.........^",
           /* line */ (const char *) " xxx...xxx ",
           /* line */ (const char *) "   x.@.x   ",
           /* line */ (const char *) "   x...x   ",
           /* line */ (const char *) "   xxxxx   ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^          ",
           /* line */ (const char *) " xxx.xxxxxxxxxx",
           /* line */ (const char *) "^.............x",
           /* line */ (const char *) " xxxxxxxxxx...x",
           /* line */ (const char *) "          x.@.x",
           /* line */ (const char *) "          x...x",
           /* line */ (const char *) "          xxxxx",
           /* line */ (const char *) "               ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) "x...........^",
           /* line */ (const char *) "xxxxxxxx...x ",
           /* line */ (const char *) "       x.@.x ",
           /* line */ (const char *) "       x...x ",
           /* line */ (const char *) "xxxxxxxx...x ",
           /* line */ (const char *) "x...........^",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) " ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) "x...........^",
           /* line */ (const char *) "x.xxxxxx...x ",
           /* line */ (const char *) "x.x    x.@.x ",
           /* line */ (const char *) "x.x    x...x ",
           /* line */ (const char *) "x.xxxxxx...x ",
           /* line */ (const char *) "x...........^",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) " ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^           ",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) "x...........^",
           /* line */ (const char *) "x.xxxxxx...x ",
           /* line */ (const char *) "x.x    x.@.x ",
           /* line */ (const char *) "x.x    x...x ",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) "x.s.......$x ",
           /* line */ (const char *) "x.xxxxxxxxxx ",
           /* line */ (const char *) " ^           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^      ",
           /* line */ (const char *) "  xxx.xxxxx ",
           /* line */ (const char *) "  x.......xx",
           /* line */ (const char *) " xx.x.x.x..x",
           /* line */ (const char *) "^..........x",
           /* line */ (const char *) " xx.x......x",
           /* line */ (const char *) "  x.....@..x",
           /* line */ (const char *) "  x.x......x",
           /* line */ (const char *) "  x.......xx",
           /* line */ (const char *) "  xxxxxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^        ",
           /* line */ (const char *) "x.xxxxxx  ",
           /* line */ (const char *) "x......x  ",
           /* line */ (const char *) "xx.....xx ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " xx...@..^",
           /* line */ (const char *) "  xx....x ",
           /* line */ (const char *) "  xxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxxxx   ",
           /* line */ (const char *) " xxxx.....xx  ",
           /* line */ (const char *) "^..........xx ",
           /* line */ (const char *) " xxxxxx.....x ",
           /* line */ (const char *) " xCCCCx|....x ",
           /* line */ (const char *) " xC..Cs..@...^",
           /* line */ (const char *) " xC$.Cx|....x ",
           /* line */ (const char *) " xCCCCxxxxxxx ",
           /* line */ (const char *) " xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxxxx   ",
           /* line */ (const char *) " xxxx.....xx  ",
           /* line */ (const char *) "^..........xx ",
           /* line */ (const char *) " xxxxxx.....x ",
           /* line */ (const char *) " xC..Cx|....x ",
           /* line */ (const char *) " x.$m.s..@...^",
           /* line */ (const char *) " xC..Cx|....x ",
           /* line */ (const char *) " xxxxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    xxxxxxx   ",
           /* line */ (const char *) " xxxx.....xx  ",
           /* line */ (const char *) "^..........xx ",
           /* line */ (const char *) " xxxxxx.....x ",
           /* line */ (const char *) " x$..Cx|....x ",
           /* line */ (const char *) " x...Cs..@...^",
           /* line */ (const char *) " x...Cx|....x ",
           /* line */ (const char *) " xm..Cxxxxxxx ",
           /* line */ (const char *) " xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxxxxx ",
           /* line */ (const char *) " xx.CCCCCCx ",
           /* line */ (const char *) "^....CCCCCx ",
           /* line */ (const char *) " xxC..CCCCx ",
           /* line */ (const char *) "  xCC.....x ",
           /* line */ (const char *) "  xxx...@.x ",
           /* line */ (const char *) "    x......^",
           /* line */ (const char *) "    xxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^   ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "    xx.xx ",
           /* line */ (const char *) "    xB.Bx ",
           /* line */ (const char *) "xxxxx...x ",
           /* line */ (const char *) "x.......x ",
           /* line */ (const char *) "x.......x ",
           /* line */ (const char *) "x.@.....x ",
           /* line */ (const char *) "x........^",
           /* line */ (const char *) "xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^   ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "    xx.xx ",
           /* line */ (const char *) "    x|.|x ",
           /* line */ (const char *) "    x...x ",
           /* line */ (const char *) "    x|.|x ",
           /* line */ (const char *) "    x...x ",
           /* line */ (const char *) "xxxxx|.|x ",
           /* line */ (const char *) "xCCCC...x ",
           /* line */ (const char *) "xC.....Cx ",
           /* line */ (const char *) "xC.@...Cx ",
           /* line */ (const char *) "xC.....Cx ",
           /* line */ (const char *) "xCCCCC...^",
           /* line */ (const char *) "xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^   ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "    xx.xx ",
           /* line */ (const char *) "    xC.Cx ",
           /* line */ (const char *) "    x...x ",
           /* line */ (const char *) "    xC.Cx ",
           /* line */ (const char *) "    x...x ",
           /* line */ (const char *) "xxxxxC.Cx ",
           /* line */ (const char *) "x.......x ",
           /* line */ (const char *) "x.......x ",
           /* line */ (const char *) "x.@.....x ",
           /* line */ (const char *) "x........^",
           /* line */ (const char *) "xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^   ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "     x.x  ",
           /* line */ (const char *) "    xx.xx ",
           /* line */ (const char *) "    xB.Bx ",
           /* line */ (const char *) "    x...x ",
           /* line */ (const char *) "xxxxxB.Bx ",
           /* line */ (const char *) "x.......x ",
           /* line */ (const char *) "x.......x ",
           /* line */ (const char *) "x.@.....x ",
           /* line */ (const char *) "x........^",
           /* line */ (const char *) "xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) " ^         ",
           /* line */ (const char *) "x.xxxxxx   ",
           /* line */ (const char *) "x......x   ",
           /* line */ (const char *) "x.cCCc.x   ",
           /* line */ (const char *) "x.CCCC.x   ",
           /* line */ (const char *) "x...CC.xxx ",
           /* line */ (const char *) "xx..CC...x ",
           /* line */ (const char *) " x..cC.@.x ",
           /* line */ (const char *) " x........^",
           /* line */ (const char *) " xxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x........^",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x...@...x ",
           /* line */ (const char *) " xxxxxx.xx ",
           /* line */ (const char *) "       ^   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "    ^      ",
           /* line */ (const char *) " xxx.xxxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) "^........x ",
           /* line */ (const char *) " x...@...x ",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) " xxxx.xxxx ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x.......x ",
           /* line */ (const char *) " x...@....^",
           /* line */ (const char *) " xxxxxxxxx ",
           /* line */ (const char *) "           ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxx      ",
           /* line */ (const char *) "^........x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " xxxxxx..x      ",
           /* line */ (const char *) "      x..xxxxxx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x...@...x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxx      ",
           /* line */ (const char *) "^........x      ",
           /* line */ (const char *) " x.......x      ",
           /* line */ (const char *) " xxxxxx..x      ",
           /* line */ (const char *) "      x..xxxxxx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x...@...x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxxx     ",
           /* line */ (const char *) "^.........xx    ",
           /* line */ (const char *) " x.........xx   ",
           /* line */ (const char *) " xxxxxx.....xx  ",
           /* line */ (const char *) "      x......xx ",
           /* line */ (const char *) "      x.......x ",
           /* line */ (const char *) "      x...@...x ",
           /* line */ (const char *) "      xxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, ROOM_CHECK_EXIT_FLAG, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^          ",
           /* line */ (const char *) " xxxx.xxxx      ",
           /* line */ (const char *) "^.........x     ",
           /* line */ (const char *) " x.........x    ",
           /* line */ (const char *) " x..........x   ",
           /* line */ (const char *) " xx..........x  ",
           /* line */ (const char *) "  xx..........x ",
           /* line */ (const char *) "   xx.....@...x ",
           /* line */ (const char *) "    xxxxxxxxxxx ",
           /* line */ (const char *) "                ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "      ^   ",
           /* line */ (const char *) "  xxxx.x  ",
           /* line */ (const char *) " xx.....x ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " x...@..x ",
           /* line */ (const char *) "^.......x ",
           /* line */ (const char *) " xx......^",
           /* line */ (const char *) "  xxxxx.x ",
           /* line */ (const char *) "       ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  ^         ",
           /* line */ (const char *) " x.xxxx     ",
           /* line */ (const char *) " x....xx    ",
           /* line */ (const char *) " x.....xx   ",
           /* line */ (const char *) " x......x   ",
           /* line */ (const char *) "^.......xx  ",
           /* line */ (const char *) " xx......xx ",
           /* line */ (const char *) "  x.......x ",
           /* line */ (const char *) " xxx...@..x ",
           /* line */ (const char *) " x$xsx....x ",
           /* line */ (const char *) " x...xxxx.x ",
           /* line */ (const char *) " x...x  x.x ",
           /* line */ (const char *) " xxxxx  x.x ",
           /* line */ (const char *) "         ^  ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "     ^     ",
           /* line */ (const char *) "  xxx.xxx  ",
           /* line */ (const char *) "  x.....x  ",
           /* line */ (const char *) " xx.....x  ",
           /* line */ (const char *) "^.......x  ",
           /* line */ (const char *) " xxx....xxx",
           /* line */ (const char *) "   xx.....x",
           /* line */ (const char *) "    x..@..x",
           /* line */ (const char *) "    x.....x",
           /* line */ (const char *) "    xxxxxxx",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^      ",
           /* line */ (const char *) "      xx.xxxx  ",
           /* line */ (const char *) "     xx.....xx ",
           /* line */ (const char *) "  xxxx.......x ",
           /* line */ (const char *) " xx...........^",
           /* line */ (const char *) "^............x ",
           /* line */ (const char *) " x........@..x ",
           /* line */ (const char *) " x..........xx ",
           /* line */ (const char *) " xx....xxxxxx  ",
           /* line */ (const char *) "  xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "        ^      ",
           /* line */ (const char *) "      xx.xxxx  ",
           /* line */ (const char *) "     xx.....xx ",
           /* line */ (const char *) "  xxxx.......x ",
           /* line */ (const char *) "^............x ",
           /* line */ (const char *) " x..@.......xx ",
           /* line */ (const char *) " xx....xxxxxx  ",
           /* line */ (const char *) "  xxxxxx       ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "  xxxxxx  ",
           /* line */ (const char *) " xx....xx ",
           /* line */ (const char *) " x......x ",
           /* line */ (const char *) " x.......^",
           /* line */ (const char *) "^.......x ",
           /* line */ (const char *) " x....@.x ",
           /* line */ (const char *) " xx.....x ",
           /* line */ (const char *) "  xxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "   xxxxxx.xx ",
           /* line */ (const char *) "  xx.......x ",
           /* line */ (const char *) "  x........x ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) " x...@...xxx ",
           /* line */ (const char *) " x.......x   ",
           /* line */ (const char *) "^........x   ",
           /* line */ (const char *) " xx......x   ",
           /* line */ (const char *) "  xxxxxxxx   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "   xxxxxx.xx ",
           /* line */ (const char *) "  xx.......x ",
           /* line */ (const char *) "  x........x ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) "^....@....xx ",
           /* line */ (const char *) " x.......xx  ",
           /* line */ (const char *) " xxxxxxxxx   ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "         ^   ",
           /* line */ (const char *) "   xxxxxx.xx ",
           /* line */ (const char *) "  xx.......x ",
           /* line */ (const char *) "  x........x ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) " x.........x ",
           /* line */ (const char *) " x.........x ",
           /* line */ (const char *) "^........@.x ",
           /* line */ (const char *) " xx........x ",
           /* line */ (const char *) "  xxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxxxxxx ",
           /* line */ (const char *) "  xx...s..$x ",
           /* line */ (const char *) "  x....xxxxx ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) " x.....xxxxx ",
           /* line */ (const char *) " x.........x ",
           /* line */ (const char *) "^........@.x ",
           /* line */ (const char *) " xx........x ",
           /* line */ (const char *) "  xxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxxxxxx ",
           /* line */ (const char *) "  xx...s..mx ",
           /* line */ (const char *) "  x....xxxxx ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) " x.....xxxxx ",
           /* line */ (const char *) "^..........x ",
           /* line */ (const char *) " x.......@.x ",
           /* line */ (const char *) " xx........x ",
           /* line */ (const char *) "  xxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx     ",
           /* line */ (const char *) "  xx...x     ",
           /* line */ (const char *) "  x....xxxxx ",
           /* line */ (const char *) " xx.........^",
           /* line */ (const char *) " x.....xxxxx ",
           /* line */ (const char *) " x.........x ",
           /* line */ (const char *) "^........@.x ",
           /* line */ (const char *) " xx........x ",
           /* line */ (const char *) "  xxxxxxxxxx ",
           /* end */ nullptr);

  room_add(g, CHANCE_NORMAL, false /* check */, __FUNCTION__, __LINE__,
           /* line */ (const char *) "   xxxxx     ",
           /* line */ (const char *) "  xx...x     ",
           /* line */ (const char *) " xx....xxxxx ",
           /* line */ (const char *) "^...@.......^",
           /* line */ (const char *) " x.....xxxxx ",
           /* line */ (const char *) " xxxxxxx     ",
           /* end */ nullptr);
}
